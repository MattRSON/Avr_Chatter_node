   1               		.file	"avr_chatter.cpp"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text._ZNK8std_msgs4Time9serializeEPh,"axG",@progbits,_ZNK8std_msgs4Time9serializeEPh,com
  11               		.weak	_ZNK8std_msgs4Time9serializeEPh
  13               	_ZNK8std_msgs4Time9serializeEPh:
  14               	.LFB33:
  15               		.file 1 "./ros_lib/std_msgs/Time.h"
   1:./ros_lib/std_msgs/Time.h **** #ifndef _ROS_std_msgs_Time_h
   2:./ros_lib/std_msgs/Time.h **** #define _ROS_std_msgs_Time_h
   3:./ros_lib/std_msgs/Time.h **** 
   4:./ros_lib/std_msgs/Time.h **** #include <stdint.h>
   5:./ros_lib/std_msgs/Time.h **** #include <string.h>
   6:./ros_lib/std_msgs/Time.h **** #include <stdlib.h>
   7:./ros_lib/std_msgs/Time.h **** #include "ros/msg.h"
   8:./ros_lib/std_msgs/Time.h **** #include "ros/time.h"
   9:./ros_lib/std_msgs/Time.h **** 
  10:./ros_lib/std_msgs/Time.h **** namespace std_msgs
  11:./ros_lib/std_msgs/Time.h **** {
  12:./ros_lib/std_msgs/Time.h **** 
  13:./ros_lib/std_msgs/Time.h ****   class Time : public ros::Msg
  14:./ros_lib/std_msgs/Time.h ****   {
  15:./ros_lib/std_msgs/Time.h ****     public:
  16:./ros_lib/std_msgs/Time.h ****       typedef ros::Time _data_type;
  17:./ros_lib/std_msgs/Time.h ****       _data_type data;
  18:./ros_lib/std_msgs/Time.h **** 
  19:./ros_lib/std_msgs/Time.h ****     Time():
  20:./ros_lib/std_msgs/Time.h ****       data()
  21:./ros_lib/std_msgs/Time.h ****     {
  22:./ros_lib/std_msgs/Time.h ****     }
  23:./ros_lib/std_msgs/Time.h **** 
  24:./ros_lib/std_msgs/Time.h ****     virtual int serialize(unsigned char *outbuffer) const override
  16               		.loc 1 24 0
  17               		.cfi_startproc
  18               	.LVL0:
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  23 0000 DC01      		movw r26,r24
  24 0002 FB01      		movw r30,r22
  25               	.LVL1:
  25:./ros_lib/std_msgs/Time.h ****     {
  26:./ros_lib/std_msgs/Time.h ****       int offset = 0;
  27:./ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 0) = (this->data.sec >> (8 * 0)) & 0xFF;
  26               		.loc 1 27 0
  27 0004 1296      		adiw r26,2
  28 0006 8C91      		ld r24,X
  29 0008 1297      		sbiw r26,2
  30               	.LVL2:
  31 000a 8083      		st Z,r24
  28:./ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 1) = (this->data.sec >> (8 * 1)) & 0xFF;
  32               		.loc 1 28 0
  33 000c 1396      		adiw r26,3
  34 000e 8C91      		ld r24,X
  35 0010 1397      		sbiw r26,3
  36 0012 8183      		std Z+1,r24
  29:./ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 2) = (this->data.sec >> (8 * 2)) & 0xFF;
  37               		.loc 1 29 0
  38 0014 1496      		adiw r26,4
  39 0016 8C91      		ld r24,X
  40 0018 1497      		sbiw r26,4
  41 001a 8283      		std Z+2,r24
  30:./ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.sec >> (8 * 3)) & 0xFF;
  42               		.loc 1 30 0
  43 001c 1596      		adiw r26,5
  44 001e 8C91      		ld r24,X
  45 0020 1597      		sbiw r26,5
  46 0022 8383      		std Z+3,r24
  47               	.LVL3:
  31:./ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
  32:./ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 0) = (this->data.nsec >> (8 * 0)) & 0xFF;
  48               		.loc 1 32 0
  49 0024 1696      		adiw r26,6
  50 0026 8C91      		ld r24,X
  51 0028 1697      		sbiw r26,6
  52 002a 8483      		std Z+4,r24
  33:./ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 1) = (this->data.nsec >> (8 * 1)) & 0xFF;
  53               		.loc 1 33 0
  54 002c 1796      		adiw r26,7
  55 002e 8C91      		ld r24,X
  56 0030 1797      		sbiw r26,7
  57 0032 8583      		std Z+5,r24
  34:./ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 2) = (this->data.nsec >> (8 * 2)) & 0xFF;
  58               		.loc 1 34 0
  59 0034 1896      		adiw r26,8
  60 0036 8C91      		ld r24,X
  61 0038 1897      		sbiw r26,8
  62 003a 8683      		std Z+6,r24
  35:./ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.nsec >> (8 * 3)) & 0xFF;
  63               		.loc 1 35 0
  64 003c 1996      		adiw r26,9
  65 003e 8C91      		ld r24,X
  66 0040 8783      		std Z+7,r24
  67               	.LVL4:
  36:./ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
  37:./ros_lib/std_msgs/Time.h ****       return offset;
  38:./ros_lib/std_msgs/Time.h ****     }
  68               		.loc 1 38 0
  69 0042 88E0      		ldi r24,lo8(8)
  70 0044 90E0      		ldi r25,0
  71 0046 0895      		ret
  72               		.cfi_endproc
  73               	.LFE33:
  75               		.section	.text._ZN8std_msgs4Time11deserializeEPh,"axG",@progbits,_ZN8std_msgs4Time11deserializeEPh
  76               		.weak	_ZN8std_msgs4Time11deserializeEPh
  78               	_ZN8std_msgs4Time11deserializeEPh:
  79               	.LFB34:
  39:./ros_lib/std_msgs/Time.h **** 
  40:./ros_lib/std_msgs/Time.h ****     virtual int deserialize(unsigned char *inbuffer) override
  80               		.loc 1 40 0
  81               		.cfi_startproc
  82               	.LVL5:
  83               	/* prologue: function */
  84               	/* frame size = 0 */
  85               	/* stack size = 0 */
  86               	.L__stack_usage = 0
  87 0000 FC01      		movw r30,r24
  88 0002 DB01      		movw r26,r22
  89               	.LVL6:
  41:./ros_lib/std_msgs/Time.h ****     {
  42:./ros_lib/std_msgs/Time.h ****       int offset = 0;
  43:./ros_lib/std_msgs/Time.h ****       this->data.sec =  ((uint32_t) (*(inbuffer + offset)));
  90               		.loc 1 43 0
  91 0004 4C91      		ld r20,X
  92 0006 50E0      		ldi r21,0
  93 0008 60E0      		ldi r22,0
  94 000a 70E0      		ldi r23,0
  95               	.LVL7:
  96 000c 4283      		std Z+2,r20
  97 000e 5383      		std Z+3,r21
  98 0010 6483      		std Z+4,r22
  99 0012 7583      		std Z+5,r23
  44:./ros_lib/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 100               		.loc 1 44 0
 101 0014 1196      		adiw r26,1
 102 0016 8C91      		ld r24,X
 103 0018 1197      		sbiw r26,1
 104               	.LVL8:
 105 001a 582B      		or r21,r24
 106 001c 4283      		std Z+2,r20
 107 001e 5383      		std Z+3,r21
 108 0020 6483      		std Z+4,r22
 109 0022 7583      		std Z+5,r23
  45:./ros_lib/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 110               		.loc 1 45 0
 111 0024 1296      		adiw r26,2
 112 0026 8C91      		ld r24,X
 113 0028 1297      		sbiw r26,2
 114 002a 682B      		or r22,r24
 115 002c 4283      		std Z+2,r20
 116 002e 5383      		std Z+3,r21
 117 0030 6483      		std Z+4,r22
 118 0032 7583      		std Z+5,r23
  46:./ros_lib/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 119               		.loc 1 46 0
 120 0034 1396      		adiw r26,3
 121 0036 8C91      		ld r24,X
 122 0038 1397      		sbiw r26,3
 123 003a 782B      		or r23,r24
 124 003c 4283      		std Z+2,r20
 125 003e 5383      		std Z+3,r21
 126 0040 6483      		std Z+4,r22
 127 0042 7583      		std Z+5,r23
 128               	.LVL9:
  47:./ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
  48:./ros_lib/std_msgs/Time.h ****       this->data.nsec =  ((uint32_t) (*(inbuffer + offset)));
 129               		.loc 1 48 0
 130 0044 1496      		adiw r26,4
 131 0046 4C91      		ld r20,X
 132 0048 1497      		sbiw r26,4
 133 004a 50E0      		ldi r21,0
 134 004c 60E0      		ldi r22,0
 135 004e 70E0      		ldi r23,0
 136 0050 4683      		std Z+6,r20
 137 0052 5783      		std Z+7,r21
 138 0054 6087      		std Z+8,r22
 139 0056 7187      		std Z+9,r23
  49:./ros_lib/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 140               		.loc 1 49 0
 141 0058 1596      		adiw r26,5
 142 005a 8C91      		ld r24,X
 143 005c 1597      		sbiw r26,5
 144 005e 582B      		or r21,r24
 145 0060 4683      		std Z+6,r20
 146 0062 5783      		std Z+7,r21
 147 0064 6087      		std Z+8,r22
 148 0066 7187      		std Z+9,r23
  50:./ros_lib/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 149               		.loc 1 50 0
 150 0068 1696      		adiw r26,6
 151 006a 8C91      		ld r24,X
 152 006c 1697      		sbiw r26,6
 153 006e 682B      		or r22,r24
 154 0070 4683      		std Z+6,r20
 155 0072 5783      		std Z+7,r21
 156 0074 6087      		std Z+8,r22
 157 0076 7187      		std Z+9,r23
  51:./ros_lib/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 158               		.loc 1 51 0
 159 0078 1796      		adiw r26,7
 160 007a 8C91      		ld r24,X
 161 007c 782B      		or r23,r24
 162 007e 4683      		std Z+6,r20
 163 0080 5783      		std Z+7,r21
 164 0082 6087      		std Z+8,r22
 165 0084 7187      		std Z+9,r23
 166               	.LVL10:
  52:./ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
  53:./ros_lib/std_msgs/Time.h ****      return offset;
  54:./ros_lib/std_msgs/Time.h ****     }
 167               		.loc 1 54 0
 168 0086 88E0      		ldi r24,lo8(8)
 169 0088 90E0      		ldi r25,0
 170 008a 0895      		ret
 171               		.cfi_endproc
 172               	.LFE34:
 174               		.section	.rodata.str1.1,"aMS",@progbits,1
 175               	.LC0:
 176 0000 7374 645F 		.string	"std_msgs/Time"
 176      6D73 6773 
 176      2F54 696D 
 176      6500 
 177               		.section	.text._ZN8std_msgs4Time7getTypeEv,"axG",@progbits,_ZN8std_msgs4Time7getTypeEv,comdat
 178               		.weak	_ZN8std_msgs4Time7getTypeEv
 180               	_ZN8std_msgs4Time7getTypeEv:
 181               	.LFB35:
  55:./ros_lib/std_msgs/Time.h **** 
  56:./ros_lib/std_msgs/Time.h ****     virtual const char * getType() override { return "std_msgs/Time"; };
 182               		.loc 1 56 0
 183               		.cfi_startproc
 184               	.LVL11:
 185               	/* prologue: function */
 186               	/* frame size = 0 */
 187               	/* stack size = 0 */
 188               	.L__stack_usage = 0
 189               		.loc 1 56 0
 190 0000 80E0      		ldi r24,lo8(.LC0)
 191 0002 90E0      		ldi r25,hi8(.LC0)
 192               	.LVL12:
 193 0004 0895      		ret
 194               		.cfi_endproc
 195               	.LFE35:
 197               		.section	.rodata.str1.1
 198               	.LC1:
 199 000e 6364 3731 		.string	"cd7166c74c552c311fbcc2fe5a7bc289"
 199      3636 6337 
 199      3463 3535 
 199      3263 3331 
 199      3166 6263 
 200               		.section	.text._ZN8std_msgs4Time6getMD5Ev,"axG",@progbits,_ZN8std_msgs4Time6getMD5Ev,comdat
 201               		.weak	_ZN8std_msgs4Time6getMD5Ev
 203               	_ZN8std_msgs4Time6getMD5Ev:
 204               	.LFB36:
  57:./ros_lib/std_msgs/Time.h ****     virtual const char * getMD5() override { return "cd7166c74c552c311fbcc2fe5a7bc289"; };
 205               		.loc 1 57 0
 206               		.cfi_startproc
 207               	.LVL13:
 208               	/* prologue: function */
 209               	/* frame size = 0 */
 210               	/* stack size = 0 */
 211               	.L__stack_usage = 0
 212               		.loc 1 57 0
 213 0000 80E0      		ldi r24,lo8(.LC1)
 214 0002 90E0      		ldi r25,hi8(.LC1)
 215               	.LVL14:
 216 0004 0895      		ret
 217               		.cfi_endproc
 218               	.LFE36:
 220               		.section	.rodata.str1.1
 221               	.LC2:
 222 002f 726F 7373 		.string	"rosserial_msgs/TopicInfo"
 222      6572 6961 
 222      6C5F 6D73 
 222      6773 2F54 
 222      6F70 6963 
 223               		.section	.text._ZN14rosserial_msgs9TopicInfo7getTypeEv,"axG",@progbits,_ZN14rosserial_msgs9TopicIn
 224               		.weak	_ZN14rosserial_msgs9TopicInfo7getTypeEv
 226               	_ZN14rosserial_msgs9TopicInfo7getTypeEv:
 227               	.LFB42:
 228               		.file 2 "./ros_lib/rosserial_msgs/TopicInfo.h"
   1:./ros_lib/rosserial_msgs/TopicInfo.h **** #ifndef _ROS_rosserial_msgs_TopicInfo_h
   2:./ros_lib/rosserial_msgs/TopicInfo.h **** #define _ROS_rosserial_msgs_TopicInfo_h
   3:./ros_lib/rosserial_msgs/TopicInfo.h **** 
   4:./ros_lib/rosserial_msgs/TopicInfo.h **** #include <stdint.h>
   5:./ros_lib/rosserial_msgs/TopicInfo.h **** #include <string.h>
   6:./ros_lib/rosserial_msgs/TopicInfo.h **** #include <stdlib.h>
   7:./ros_lib/rosserial_msgs/TopicInfo.h **** #include "ros/msg.h"
   8:./ros_lib/rosserial_msgs/TopicInfo.h **** 
   9:./ros_lib/rosserial_msgs/TopicInfo.h **** namespace rosserial_msgs
  10:./ros_lib/rosserial_msgs/TopicInfo.h **** {
  11:./ros_lib/rosserial_msgs/TopicInfo.h **** 
  12:./ros_lib/rosserial_msgs/TopicInfo.h ****   class TopicInfo : public ros::Msg
  13:./ros_lib/rosserial_msgs/TopicInfo.h ****   {
  14:./ros_lib/rosserial_msgs/TopicInfo.h ****     public:
  15:./ros_lib/rosserial_msgs/TopicInfo.h ****       typedef uint16_t _topic_id_type;
  16:./ros_lib/rosserial_msgs/TopicInfo.h ****       _topic_id_type topic_id;
  17:./ros_lib/rosserial_msgs/TopicInfo.h ****       typedef const char* _topic_name_type;
  18:./ros_lib/rosserial_msgs/TopicInfo.h ****       _topic_name_type topic_name;
  19:./ros_lib/rosserial_msgs/TopicInfo.h ****       typedef const char* _message_type_type;
  20:./ros_lib/rosserial_msgs/TopicInfo.h ****       _message_type_type message_type;
  21:./ros_lib/rosserial_msgs/TopicInfo.h ****       typedef const char* _md5sum_type;
  22:./ros_lib/rosserial_msgs/TopicInfo.h ****       _md5sum_type md5sum;
  23:./ros_lib/rosserial_msgs/TopicInfo.h ****       typedef int32_t _buffer_size_type;
  24:./ros_lib/rosserial_msgs/TopicInfo.h ****       _buffer_size_type buffer_size;
  25:./ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_PUBLISHER = 0 };
  26:./ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_SUBSCRIBER = 1 };
  27:./ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_SERVICE_SERVER = 2 };
  28:./ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_SERVICE_CLIENT = 4 };
  29:./ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_PARAMETER_REQUEST = 6 };
  30:./ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_LOG = 7 };
  31:./ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_TIME = 10 };
  32:./ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_TX_STOP = 11 };
  33:./ros_lib/rosserial_msgs/TopicInfo.h **** 
  34:./ros_lib/rosserial_msgs/TopicInfo.h ****     TopicInfo():
  35:./ros_lib/rosserial_msgs/TopicInfo.h ****       topic_id(0),
  36:./ros_lib/rosserial_msgs/TopicInfo.h ****       topic_name(""),
  37:./ros_lib/rosserial_msgs/TopicInfo.h ****       message_type(""),
  38:./ros_lib/rosserial_msgs/TopicInfo.h ****       md5sum(""),
  39:./ros_lib/rosserial_msgs/TopicInfo.h ****       buffer_size(0)
  40:./ros_lib/rosserial_msgs/TopicInfo.h ****     {
  41:./ros_lib/rosserial_msgs/TopicInfo.h ****     }
  42:./ros_lib/rosserial_msgs/TopicInfo.h **** 
  43:./ros_lib/rosserial_msgs/TopicInfo.h ****     virtual int serialize(unsigned char *outbuffer) const override
  44:./ros_lib/rosserial_msgs/TopicInfo.h ****     {
  45:./ros_lib/rosserial_msgs/TopicInfo.h ****       int offset = 0;
  46:./ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (this->topic_id >> (8 * 0)) & 0xFF;
  47:./ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
  48:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
  49:./ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_topic_name = strlen(this->topic_name);
  50:./ros_lib/rosserial_msgs/TopicInfo.h ****       varToArr(outbuffer + offset, length_topic_name);
  51:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  52:./ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->topic_name, length_topic_name);
  53:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
  54:./ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type = strlen(this->message_type);
  55:./ros_lib/rosserial_msgs/TopicInfo.h ****       varToArr(outbuffer + offset, length_message_type);
  56:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  57:./ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->message_type, length_message_type);
  58:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
  59:./ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum = strlen(this->md5sum);
  60:./ros_lib/rosserial_msgs/TopicInfo.h ****       varToArr(outbuffer + offset, length_md5sum);
  61:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  62:./ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->md5sum, length_md5sum);
  63:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
  64:./ros_lib/rosserial_msgs/TopicInfo.h ****       union {
  65:./ros_lib/rosserial_msgs/TopicInfo.h ****         int32_t real;
  66:./ros_lib/rosserial_msgs/TopicInfo.h ****         uint32_t base;
  67:./ros_lib/rosserial_msgs/TopicInfo.h ****       } u_buffer_size;
  68:./ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.real = this->buffer_size;
  69:./ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (u_buffer_size.base >> (8 * 0)) & 0xFF;
  70:./ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (u_buffer_size.base >> (8 * 1)) & 0xFF;
  71:./ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 2) = (u_buffer_size.base >> (8 * 2)) & 0xFF;
  72:./ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
  73:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
  74:./ros_lib/rosserial_msgs/TopicInfo.h ****       return offset;
  75:./ros_lib/rosserial_msgs/TopicInfo.h ****     }
  76:./ros_lib/rosserial_msgs/TopicInfo.h **** 
  77:./ros_lib/rosserial_msgs/TopicInfo.h ****     virtual int deserialize(unsigned char *inbuffer) override
  78:./ros_lib/rosserial_msgs/TopicInfo.h ****     {
  79:./ros_lib/rosserial_msgs/TopicInfo.h ****       int offset = 0;
  80:./ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_id =  ((uint16_t) (*(inbuffer + offset)));
  81:./ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_id |= ((uint16_t) (*(inbuffer + offset + 1))) << (8 * 1);
  82:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
  83:./ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_topic_name;
  84:./ros_lib/rosserial_msgs/TopicInfo.h ****       arrToVar(length_topic_name, (inbuffer + offset));
  85:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  86:./ros_lib/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_topic_name; ++k){
  87:./ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
  88:./ros_lib/rosserial_msgs/TopicInfo.h ****       }
  89:./ros_lib/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_topic_name-1]=0;
  90:./ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_name = (char *)(inbuffer + offset-1);
  91:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
  92:./ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type;
  93:./ros_lib/rosserial_msgs/TopicInfo.h ****       arrToVar(length_message_type, (inbuffer + offset));
  94:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  95:./ros_lib/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_message_type; ++k){
  96:./ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
  97:./ros_lib/rosserial_msgs/TopicInfo.h ****       }
  98:./ros_lib/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_message_type-1]=0;
  99:./ros_lib/rosserial_msgs/TopicInfo.h ****       this->message_type = (char *)(inbuffer + offset-1);
 100:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 101:./ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum;
 102:./ros_lib/rosserial_msgs/TopicInfo.h ****       arrToVar(length_md5sum, (inbuffer + offset));
 103:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 104:./ros_lib/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_md5sum; ++k){
 105:./ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 106:./ros_lib/rosserial_msgs/TopicInfo.h ****       }
 107:./ros_lib/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_md5sum-1]=0;
 108:./ros_lib/rosserial_msgs/TopicInfo.h ****       this->md5sum = (char *)(inbuffer + offset-1);
 109:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 110:./ros_lib/rosserial_msgs/TopicInfo.h ****       union {
 111:./ros_lib/rosserial_msgs/TopicInfo.h ****         int32_t real;
 112:./ros_lib/rosserial_msgs/TopicInfo.h ****         uint32_t base;
 113:./ros_lib/rosserial_msgs/TopicInfo.h ****       } u_buffer_size;
 114:./ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base = 0;
 115:./ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 116:./ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 117:./ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 118:./ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 119:./ros_lib/rosserial_msgs/TopicInfo.h ****       this->buffer_size = u_buffer_size.real;
 120:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 121:./ros_lib/rosserial_msgs/TopicInfo.h ****      return offset;
 122:./ros_lib/rosserial_msgs/TopicInfo.h ****     }
 123:./ros_lib/rosserial_msgs/TopicInfo.h **** 
 124:./ros_lib/rosserial_msgs/TopicInfo.h ****     virtual const char * getType() override { return "rosserial_msgs/TopicInfo"; };
 229               		.loc 2 124 0
 230               		.cfi_startproc
 231               	.LVL15:
 232               	/* prologue: function */
 233               	/* frame size = 0 */
 234               	/* stack size = 0 */
 235               	.L__stack_usage = 0
 236               		.loc 2 124 0
 237 0000 80E0      		ldi r24,lo8(.LC2)
 238 0002 90E0      		ldi r25,hi8(.LC2)
 239               	.LVL16:
 240 0004 0895      		ret
 241               		.cfi_endproc
 242               	.LFE42:
 244               		.section	.rodata.str1.1
 245               	.LC3:
 246 0048 3061 6435 		.string	"0ad51f88fc44892f8c10684077646005"
 246      3166 3838 
 246      6663 3434 
 246      3839 3266 
 246      3863 3130 
 247               		.section	.text._ZN14rosserial_msgs9TopicInfo6getMD5Ev,"axG",@progbits,_ZN14rosserial_msgs9TopicInf
 248               		.weak	_ZN14rosserial_msgs9TopicInfo6getMD5Ev
 250               	_ZN14rosserial_msgs9TopicInfo6getMD5Ev:
 251               	.LFB43:
 125:./ros_lib/rosserial_msgs/TopicInfo.h ****     virtual const char * getMD5() override { return "0ad51f88fc44892f8c10684077646005"; };
 252               		.loc 2 125 0
 253               		.cfi_startproc
 254               	.LVL17:
 255               	/* prologue: function */
 256               	/* frame size = 0 */
 257               	/* stack size = 0 */
 258               	.L__stack_usage = 0
 259               		.loc 2 125 0
 260 0000 80E0      		ldi r24,lo8(.LC3)
 261 0002 90E0      		ldi r25,hi8(.LC3)
 262               	.LVL18:
 263 0004 0895      		ret
 264               		.cfi_endproc
 265               	.LFE43:
 267               		.section	.rodata.str1.1
 268               	.LC4:
 269 0069 726F 7373 		.string	"rosserial_msgs/Log"
 269      6572 6961 
 269      6C5F 6D73 
 269      6773 2F4C 
 269      6F67 00
 270               		.section	.text._ZN14rosserial_msgs3Log7getTypeEv,"axG",@progbits,_ZN14rosserial_msgs3Log7getTypeEv
 271               		.weak	_ZN14rosserial_msgs3Log7getTypeEv
 273               	_ZN14rosserial_msgs3Log7getTypeEv:
 274               	.LFB49:
 275               		.file 3 "./ros_lib/rosserial_msgs/Log.h"
   1:./ros_lib/rosserial_msgs/Log.h **** #ifndef _ROS_rosserial_msgs_Log_h
   2:./ros_lib/rosserial_msgs/Log.h **** #define _ROS_rosserial_msgs_Log_h
   3:./ros_lib/rosserial_msgs/Log.h **** 
   4:./ros_lib/rosserial_msgs/Log.h **** #include <stdint.h>
   5:./ros_lib/rosserial_msgs/Log.h **** #include <string.h>
   6:./ros_lib/rosserial_msgs/Log.h **** #include <stdlib.h>
   7:./ros_lib/rosserial_msgs/Log.h **** #include "ros/msg.h"
   8:./ros_lib/rosserial_msgs/Log.h **** 
   9:./ros_lib/rosserial_msgs/Log.h **** namespace rosserial_msgs
  10:./ros_lib/rosserial_msgs/Log.h **** {
  11:./ros_lib/rosserial_msgs/Log.h **** 
  12:./ros_lib/rosserial_msgs/Log.h ****   class Log : public ros::Msg
  13:./ros_lib/rosserial_msgs/Log.h ****   {
  14:./ros_lib/rosserial_msgs/Log.h ****     public:
  15:./ros_lib/rosserial_msgs/Log.h ****       typedef uint8_t _level_type;
  16:./ros_lib/rosserial_msgs/Log.h ****       _level_type level;
  17:./ros_lib/rosserial_msgs/Log.h ****       typedef const char* _msg_type;
  18:./ros_lib/rosserial_msgs/Log.h ****       _msg_type msg;
  19:./ros_lib/rosserial_msgs/Log.h ****       enum { ROSDEBUG = 0 };
  20:./ros_lib/rosserial_msgs/Log.h ****       enum { INFO = 1 };
  21:./ros_lib/rosserial_msgs/Log.h ****       enum { WARN = 2 };
  22:./ros_lib/rosserial_msgs/Log.h ****       enum { ERROR = 3 };
  23:./ros_lib/rosserial_msgs/Log.h ****       enum { FATAL = 4 };
  24:./ros_lib/rosserial_msgs/Log.h **** 
  25:./ros_lib/rosserial_msgs/Log.h ****     Log():
  26:./ros_lib/rosserial_msgs/Log.h ****       level(0),
  27:./ros_lib/rosserial_msgs/Log.h ****       msg("")
  28:./ros_lib/rosserial_msgs/Log.h ****     {
  29:./ros_lib/rosserial_msgs/Log.h ****     }
  30:./ros_lib/rosserial_msgs/Log.h **** 
  31:./ros_lib/rosserial_msgs/Log.h ****     virtual int serialize(unsigned char *outbuffer) const override
  32:./ros_lib/rosserial_msgs/Log.h ****     {
  33:./ros_lib/rosserial_msgs/Log.h ****       int offset = 0;
  34:./ros_lib/rosserial_msgs/Log.h ****       *(outbuffer + offset + 0) = (this->level >> (8 * 0)) & 0xFF;
  35:./ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
  36:./ros_lib/rosserial_msgs/Log.h ****       uint32_t length_msg = strlen(this->msg);
  37:./ros_lib/rosserial_msgs/Log.h ****       varToArr(outbuffer + offset, length_msg);
  38:./ros_lib/rosserial_msgs/Log.h ****       offset += 4;
  39:./ros_lib/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, this->msg, length_msg);
  40:./ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
  41:./ros_lib/rosserial_msgs/Log.h ****       return offset;
  42:./ros_lib/rosserial_msgs/Log.h ****     }
  43:./ros_lib/rosserial_msgs/Log.h **** 
  44:./ros_lib/rosserial_msgs/Log.h ****     virtual int deserialize(unsigned char *inbuffer) override
  45:./ros_lib/rosserial_msgs/Log.h ****     {
  46:./ros_lib/rosserial_msgs/Log.h ****       int offset = 0;
  47:./ros_lib/rosserial_msgs/Log.h ****       this->level =  ((uint8_t) (*(inbuffer + offset)));
  48:./ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
  49:./ros_lib/rosserial_msgs/Log.h ****       uint32_t length_msg;
  50:./ros_lib/rosserial_msgs/Log.h ****       arrToVar(length_msg, (inbuffer + offset));
  51:./ros_lib/rosserial_msgs/Log.h ****       offset += 4;
  52:./ros_lib/rosserial_msgs/Log.h ****       for(unsigned int k= offset; k< offset+length_msg; ++k){
  53:./ros_lib/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
  54:./ros_lib/rosserial_msgs/Log.h ****       }
  55:./ros_lib/rosserial_msgs/Log.h ****       inbuffer[offset+length_msg-1]=0;
  56:./ros_lib/rosserial_msgs/Log.h ****       this->msg = (char *)(inbuffer + offset-1);
  57:./ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
  58:./ros_lib/rosserial_msgs/Log.h ****      return offset;
  59:./ros_lib/rosserial_msgs/Log.h ****     }
  60:./ros_lib/rosserial_msgs/Log.h **** 
  61:./ros_lib/rosserial_msgs/Log.h ****     virtual const char * getType() override { return "rosserial_msgs/Log"; };
 276               		.loc 3 61 0
 277               		.cfi_startproc
 278               	.LVL19:
 279               	/* prologue: function */
 280               	/* frame size = 0 */
 281               	/* stack size = 0 */
 282               	.L__stack_usage = 0
 283               		.loc 3 61 0
 284 0000 80E0      		ldi r24,lo8(.LC4)
 285 0002 90E0      		ldi r25,hi8(.LC4)
 286               	.LVL20:
 287 0004 0895      		ret
 288               		.cfi_endproc
 289               	.LFE49:
 291               		.section	.rodata.str1.1
 292               	.LC5:
 293 007c 3131 6162 		.string	"11abd731c25933261cd6183bd12d6295"
 293      6437 3331 
 293      6332 3539 
 293      3333 3236 
 293      3163 6436 
 294               		.section	.text._ZN14rosserial_msgs3Log6getMD5Ev,"axG",@progbits,_ZN14rosserial_msgs3Log6getMD5Ev,c
 295               		.weak	_ZN14rosserial_msgs3Log6getMD5Ev
 297               	_ZN14rosserial_msgs3Log6getMD5Ev:
 298               	.LFB50:
  62:./ros_lib/rosserial_msgs/Log.h ****     virtual const char * getMD5() override { return "11abd731c25933261cd6183bd12d6295"; };
 299               		.loc 3 62 0
 300               		.cfi_startproc
 301               	.LVL21:
 302               	/* prologue: function */
 303               	/* frame size = 0 */
 304               	/* stack size = 0 */
 305               	.L__stack_usage = 0
 306               		.loc 3 62 0
 307 0000 80E0      		ldi r24,lo8(.LC5)
 308 0002 90E0      		ldi r25,hi8(.LC5)
 309               	.LVL22:
 310 0004 0895      		ret
 311               		.cfi_endproc
 312               	.LFE50:
 314               		.section	.text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv,"axG",@progbits,_ZN14rosserial_
 315               		.weak	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv
 317               	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv:
 318               	.LFB63:
 319               		.file 4 "./ros_lib/rosserial_msgs/RequestParam.h"
   1:./ros_lib/rosserial_msgs/RequestParam.h **** #ifndef _ROS_SERVICE_RequestParam_h
   2:./ros_lib/rosserial_msgs/RequestParam.h **** #define _ROS_SERVICE_RequestParam_h
   3:./ros_lib/rosserial_msgs/RequestParam.h **** #include <stdint.h>
   4:./ros_lib/rosserial_msgs/RequestParam.h **** #include <string.h>
   5:./ros_lib/rosserial_msgs/RequestParam.h **** #include <stdlib.h>
   6:./ros_lib/rosserial_msgs/RequestParam.h **** #include "ros/msg.h"
   7:./ros_lib/rosserial_msgs/RequestParam.h **** 
   8:./ros_lib/rosserial_msgs/RequestParam.h **** namespace rosserial_msgs
   9:./ros_lib/rosserial_msgs/RequestParam.h **** {
  10:./ros_lib/rosserial_msgs/RequestParam.h **** 
  11:./ros_lib/rosserial_msgs/RequestParam.h **** static const char REQUESTPARAM[] = "rosserial_msgs/RequestParam";
  12:./ros_lib/rosserial_msgs/RequestParam.h **** 
  13:./ros_lib/rosserial_msgs/RequestParam.h ****   class RequestParamRequest : public ros::Msg
  14:./ros_lib/rosserial_msgs/RequestParam.h ****   {
  15:./ros_lib/rosserial_msgs/RequestParam.h ****     public:
  16:./ros_lib/rosserial_msgs/RequestParam.h ****       typedef const char* _name_type;
  17:./ros_lib/rosserial_msgs/RequestParam.h ****       _name_type name;
  18:./ros_lib/rosserial_msgs/RequestParam.h **** 
  19:./ros_lib/rosserial_msgs/RequestParam.h ****     RequestParamRequest():
  20:./ros_lib/rosserial_msgs/RequestParam.h ****       name("")
  21:./ros_lib/rosserial_msgs/RequestParam.h ****     {
  22:./ros_lib/rosserial_msgs/RequestParam.h ****     }
  23:./ros_lib/rosserial_msgs/RequestParam.h **** 
  24:./ros_lib/rosserial_msgs/RequestParam.h ****     virtual int serialize(unsigned char *outbuffer) const override
  25:./ros_lib/rosserial_msgs/RequestParam.h ****     {
  26:./ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
  27:./ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_name = strlen(this->name);
  28:./ros_lib/rosserial_msgs/RequestParam.h ****       varToArr(outbuffer + offset, length_name);
  29:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
  30:./ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, this->name, length_name);
  31:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_name;
  32:./ros_lib/rosserial_msgs/RequestParam.h ****       return offset;
  33:./ros_lib/rosserial_msgs/RequestParam.h ****     }
  34:./ros_lib/rosserial_msgs/RequestParam.h **** 
  35:./ros_lib/rosserial_msgs/RequestParam.h ****     virtual int deserialize(unsigned char *inbuffer) override
  36:./ros_lib/rosserial_msgs/RequestParam.h ****     {
  37:./ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
  38:./ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_name;
  39:./ros_lib/rosserial_msgs/RequestParam.h ****       arrToVar(length_name, (inbuffer + offset));
  40:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
  41:./ros_lib/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_name; ++k){
  42:./ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
  43:./ros_lib/rosserial_msgs/RequestParam.h ****       }
  44:./ros_lib/rosserial_msgs/RequestParam.h ****       inbuffer[offset+length_name-1]=0;
  45:./ros_lib/rosserial_msgs/RequestParam.h ****       this->name = (char *)(inbuffer + offset-1);
  46:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_name;
  47:./ros_lib/rosserial_msgs/RequestParam.h ****      return offset;
  48:./ros_lib/rosserial_msgs/RequestParam.h ****     }
  49:./ros_lib/rosserial_msgs/RequestParam.h **** 
  50:./ros_lib/rosserial_msgs/RequestParam.h ****     virtual const char * getType() override { return REQUESTPARAM; };
  51:./ros_lib/rosserial_msgs/RequestParam.h ****     virtual const char * getMD5() override { return "c1f3d28f1b044c871e6eff2e9fc3c667"; };
  52:./ros_lib/rosserial_msgs/RequestParam.h **** 
  53:./ros_lib/rosserial_msgs/RequestParam.h ****   };
  54:./ros_lib/rosserial_msgs/RequestParam.h **** 
  55:./ros_lib/rosserial_msgs/RequestParam.h ****   class RequestParamResponse : public ros::Msg
  56:./ros_lib/rosserial_msgs/RequestParam.h ****   {
  57:./ros_lib/rosserial_msgs/RequestParam.h ****     public:
  58:./ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t ints_length;
  59:./ros_lib/rosserial_msgs/RequestParam.h ****       typedef int32_t _ints_type;
  60:./ros_lib/rosserial_msgs/RequestParam.h ****       _ints_type st_ints;
  61:./ros_lib/rosserial_msgs/RequestParam.h ****       _ints_type * ints;
  62:./ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t floats_length;
  63:./ros_lib/rosserial_msgs/RequestParam.h ****       typedef float _floats_type;
  64:./ros_lib/rosserial_msgs/RequestParam.h ****       _floats_type st_floats;
  65:./ros_lib/rosserial_msgs/RequestParam.h ****       _floats_type * floats;
  66:./ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t strings_length;
  67:./ros_lib/rosserial_msgs/RequestParam.h ****       typedef char* _strings_type;
  68:./ros_lib/rosserial_msgs/RequestParam.h ****       _strings_type st_strings;
  69:./ros_lib/rosserial_msgs/RequestParam.h ****       _strings_type * strings;
  70:./ros_lib/rosserial_msgs/RequestParam.h **** 
  71:./ros_lib/rosserial_msgs/RequestParam.h ****     RequestParamResponse():
  72:./ros_lib/rosserial_msgs/RequestParam.h ****       ints_length(0), st_ints(), ints(nullptr),
  73:./ros_lib/rosserial_msgs/RequestParam.h ****       floats_length(0), st_floats(), floats(nullptr),
  74:./ros_lib/rosserial_msgs/RequestParam.h ****       strings_length(0), st_strings(), strings(nullptr)
  75:./ros_lib/rosserial_msgs/RequestParam.h ****     {
  76:./ros_lib/rosserial_msgs/RequestParam.h ****     }
  77:./ros_lib/rosserial_msgs/RequestParam.h **** 
  78:./ros_lib/rosserial_msgs/RequestParam.h ****     virtual int serialize(unsigned char *outbuffer) const override
  79:./ros_lib/rosserial_msgs/RequestParam.h ****     {
  80:./ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
  81:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (this->ints_length >> (8 * 0)) & 0xFF;
  82:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (this->ints_length >> (8 * 1)) & 0xFF;
  83:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (this->ints_length >> (8 * 2)) & 0xFF;
  84:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (this->ints_length >> (8 * 3)) & 0xFF;
  85:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints_length);
  86:./ros_lib/rosserial_msgs/RequestParam.h ****       for( uint32_t i = 0; i < ints_length; i++){
  87:./ros_lib/rosserial_msgs/RequestParam.h ****       union {
  88:./ros_lib/rosserial_msgs/RequestParam.h ****         int32_t real;
  89:./ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
  90:./ros_lib/rosserial_msgs/RequestParam.h ****       } u_intsi;
  91:./ros_lib/rosserial_msgs/RequestParam.h ****       u_intsi.real = this->ints[i];
  92:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_intsi.base >> (8 * 0)) & 0xFF;
  93:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_intsi.base >> (8 * 1)) & 0xFF;
  94:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
  95:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
  96:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
  97:./ros_lib/rosserial_msgs/RequestParam.h ****       }
  98:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (this->floats_length >> (8 * 0)) & 0xFF;
  99:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (this->floats_length >> (8 * 1)) & 0xFF;
 100:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (this->floats_length >> (8 * 2)) & 0xFF;
 101:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (this->floats_length >> (8 * 3)) & 0xFF;
 102:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->floats_length);
 103:./ros_lib/rosserial_msgs/RequestParam.h ****       for( uint32_t i = 0; i < floats_length; i++){
 104:./ros_lib/rosserial_msgs/RequestParam.h ****       union {
 105:./ros_lib/rosserial_msgs/RequestParam.h ****         float real;
 106:./ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
 107:./ros_lib/rosserial_msgs/RequestParam.h ****       } u_floatsi;
 108:./ros_lib/rosserial_msgs/RequestParam.h ****       u_floatsi.real = this->floats[i];
 109:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_floatsi.base >> (8 * 0)) & 0xFF;
 110:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
 111:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
 112:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
 113:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->floats[i]);
 114:./ros_lib/rosserial_msgs/RequestParam.h ****       }
 115:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (this->strings_length >> (8 * 0)) & 0xFF;
 116:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (this->strings_length >> (8 * 1)) & 0xFF;
 117:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (this->strings_length >> (8 * 2)) & 0xFF;
 118:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (this->strings_length >> (8 * 3)) & 0xFF;
 119:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->strings_length);
 120:./ros_lib/rosserial_msgs/RequestParam.h ****       for( uint32_t i = 0; i < strings_length; i++){
 121:./ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 122:./ros_lib/rosserial_msgs/RequestParam.h ****       varToArr(outbuffer + offset, length_stringsi);
 123:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 124:./ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, this->strings[i], length_stringsi);
 125:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 126:./ros_lib/rosserial_msgs/RequestParam.h ****       }
 127:./ros_lib/rosserial_msgs/RequestParam.h ****       return offset;
 128:./ros_lib/rosserial_msgs/RequestParam.h ****     }
 129:./ros_lib/rosserial_msgs/RequestParam.h **** 
 130:./ros_lib/rosserial_msgs/RequestParam.h ****     virtual int deserialize(unsigned char *inbuffer) override
 131:./ros_lib/rosserial_msgs/RequestParam.h ****     {
 132:./ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
 133:./ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t ints_lengthT = ((uint32_t) (*(inbuffer + offset))); 
 134:./ros_lib/rosserial_msgs/RequestParam.h ****       ints_lengthT |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1); 
 135:./ros_lib/rosserial_msgs/RequestParam.h ****       ints_lengthT |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2); 
 136:./ros_lib/rosserial_msgs/RequestParam.h ****       ints_lengthT |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3); 
 137:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints_length);
 138:./ros_lib/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 139:./ros_lib/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 140:./ros_lib/rosserial_msgs/RequestParam.h ****       ints_length = ints_lengthT;
 141:./ros_lib/rosserial_msgs/RequestParam.h ****       for( uint32_t i = 0; i < ints_length; i++){
 142:./ros_lib/rosserial_msgs/RequestParam.h ****       union {
 143:./ros_lib/rosserial_msgs/RequestParam.h ****         int32_t real;
 144:./ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
 145:./ros_lib/rosserial_msgs/RequestParam.h ****       } u_st_ints;
 146:./ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base = 0;
 147:./ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 148:./ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 149:./ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 150:./ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 151:./ros_lib/rosserial_msgs/RequestParam.h ****       this->st_ints = u_st_ints.real;
 152:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 153:./ros_lib/rosserial_msgs/RequestParam.h ****         memcpy( &(this->ints[i]), &(this->st_ints), sizeof(int32_t));
 154:./ros_lib/rosserial_msgs/RequestParam.h ****       }
 155:./ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t floats_lengthT = ((uint32_t) (*(inbuffer + offset))); 
 156:./ros_lib/rosserial_msgs/RequestParam.h ****       floats_lengthT |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1); 
 157:./ros_lib/rosserial_msgs/RequestParam.h ****       floats_lengthT |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2); 
 158:./ros_lib/rosserial_msgs/RequestParam.h ****       floats_lengthT |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3); 
 159:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->floats_length);
 160:./ros_lib/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 161:./ros_lib/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 162:./ros_lib/rosserial_msgs/RequestParam.h ****       floats_length = floats_lengthT;
 163:./ros_lib/rosserial_msgs/RequestParam.h ****       for( uint32_t i = 0; i < floats_length; i++){
 164:./ros_lib/rosserial_msgs/RequestParam.h ****       union {
 165:./ros_lib/rosserial_msgs/RequestParam.h ****         float real;
 166:./ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
 167:./ros_lib/rosserial_msgs/RequestParam.h ****       } u_st_floats;
 168:./ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base = 0;
 169:./ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 170:./ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 171:./ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 172:./ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 173:./ros_lib/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 174:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 175:./ros_lib/rosserial_msgs/RequestParam.h ****         memcpy( &(this->floats[i]), &(this->st_floats), sizeof(float));
 176:./ros_lib/rosserial_msgs/RequestParam.h ****       }
 177:./ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t strings_lengthT = ((uint32_t) (*(inbuffer + offset))); 
 178:./ros_lib/rosserial_msgs/RequestParam.h ****       strings_lengthT |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1); 
 179:./ros_lib/rosserial_msgs/RequestParam.h ****       strings_lengthT |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2); 
 180:./ros_lib/rosserial_msgs/RequestParam.h ****       strings_lengthT |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3); 
 181:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->strings_length);
 182:./ros_lib/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 183:./ros_lib/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 184:./ros_lib/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 185:./ros_lib/rosserial_msgs/RequestParam.h ****       for( uint32_t i = 0; i < strings_length; i++){
 186:./ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 187:./ros_lib/rosserial_msgs/RequestParam.h ****       arrToVar(length_st_strings, (inbuffer + offset));
 188:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 189:./ros_lib/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 190:./ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 191:./ros_lib/rosserial_msgs/RequestParam.h ****       }
 192:./ros_lib/rosserial_msgs/RequestParam.h ****       inbuffer[offset+length_st_strings-1]=0;
 193:./ros_lib/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 194:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 195:./ros_lib/rosserial_msgs/RequestParam.h ****         memcpy( &(this->strings[i]), &(this->st_strings), sizeof(char*));
 196:./ros_lib/rosserial_msgs/RequestParam.h ****       }
 197:./ros_lib/rosserial_msgs/RequestParam.h ****      return offset;
 198:./ros_lib/rosserial_msgs/RequestParam.h ****     }
 199:./ros_lib/rosserial_msgs/RequestParam.h **** 
 200:./ros_lib/rosserial_msgs/RequestParam.h ****     virtual const char * getType() override { return REQUESTPARAM; };
 320               		.loc 4 200 0
 321               		.cfi_startproc
 322               	.LVL23:
 323               	/* prologue: function */
 324               	/* frame size = 0 */
 325               	/* stack size = 0 */
 326               	.L__stack_usage = 0
 327               		.loc 4 200 0
 328 0000 80E0      		ldi r24,lo8(_ZN14rosserial_msgsL12REQUESTPARAME)
 329 0002 90E0      		ldi r25,hi8(_ZN14rosserial_msgsL12REQUESTPARAME)
 330               	.LVL24:
 331 0004 0895      		ret
 332               		.cfi_endproc
 333               	.LFE63:
 335               		.section	.rodata.str1.1
 336               	.LC6:
 337 009d 3966 3065 		.string	"9f0e98bda65981986ddf53afa7a40e49"
 337      3938 6264 
 337      6136 3539 
 337      3831 3938 
 337      3664 6466 
 338               		.section	.text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev,"axG",@progbits,_ZN14rosserial_m
 339               		.weak	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
 341               	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:
 342               	.LFB64:
 201:./ros_lib/rosserial_msgs/RequestParam.h ****     virtual const char * getMD5() override { return "9f0e98bda65981986ddf53afa7a40e49"; };
 343               		.loc 4 201 0
 344               		.cfi_startproc
 345               	.LVL25:
 346               	/* prologue: function */
 347               	/* frame size = 0 */
 348               	/* stack size = 0 */
 349               	.L__stack_usage = 0
 350               		.loc 4 201 0
 351 0000 80E0      		ldi r24,lo8(.LC6)
 352 0002 90E0      		ldi r25,hi8(.LC6)
 353               	.LVL26:
 354 0004 0895      		ret
 355               		.cfi_endproc
 356               	.LFE64:
 358               		.section	.rodata.str1.1
 359               	.LC7:
 360 00be 7374 645F 		.string	"std_msgs/String"
 360      6D73 6773 
 360      2F53 7472 
 360      696E 6700 
 361               		.section	.text._ZN8std_msgs6String7getTypeEv,"axG",@progbits,_ZN8std_msgs6String7getTypeEv,comdat
 362               		.weak	_ZN8std_msgs6String7getTypeEv
 364               	_ZN8std_msgs6String7getTypeEv:
 365               	.LFB137:
 366               		.file 5 "./ros_lib/std_msgs/String.h"
   1:./ros_lib/std_msgs/String.h **** #ifndef _ROS_std_msgs_String_h
   2:./ros_lib/std_msgs/String.h **** #define _ROS_std_msgs_String_h
   3:./ros_lib/std_msgs/String.h **** 
   4:./ros_lib/std_msgs/String.h **** #include <stdint.h>
   5:./ros_lib/std_msgs/String.h **** #include <string.h>
   6:./ros_lib/std_msgs/String.h **** #include <stdlib.h>
   7:./ros_lib/std_msgs/String.h **** #include "ros/msg.h"
   8:./ros_lib/std_msgs/String.h **** 
   9:./ros_lib/std_msgs/String.h **** namespace std_msgs
  10:./ros_lib/std_msgs/String.h **** {
  11:./ros_lib/std_msgs/String.h **** 
  12:./ros_lib/std_msgs/String.h ****   class String : public ros::Msg
  13:./ros_lib/std_msgs/String.h ****   {
  14:./ros_lib/std_msgs/String.h ****     public:
  15:./ros_lib/std_msgs/String.h ****       typedef const char* _data_type;
  16:./ros_lib/std_msgs/String.h ****       _data_type data;
  17:./ros_lib/std_msgs/String.h **** 
  18:./ros_lib/std_msgs/String.h ****     String():
  19:./ros_lib/std_msgs/String.h ****       data("")
  20:./ros_lib/std_msgs/String.h ****     {
  21:./ros_lib/std_msgs/String.h ****     }
  22:./ros_lib/std_msgs/String.h **** 
  23:./ros_lib/std_msgs/String.h ****     virtual int serialize(unsigned char *outbuffer) const override
  24:./ros_lib/std_msgs/String.h ****     {
  25:./ros_lib/std_msgs/String.h ****       int offset = 0;
  26:./ros_lib/std_msgs/String.h ****       uint32_t length_data = strlen(this->data);
  27:./ros_lib/std_msgs/String.h ****       varToArr(outbuffer + offset, length_data);
  28:./ros_lib/std_msgs/String.h ****       offset += 4;
  29:./ros_lib/std_msgs/String.h ****       memcpy(outbuffer + offset, this->data, length_data);
  30:./ros_lib/std_msgs/String.h ****       offset += length_data;
  31:./ros_lib/std_msgs/String.h ****       return offset;
  32:./ros_lib/std_msgs/String.h ****     }
  33:./ros_lib/std_msgs/String.h **** 
  34:./ros_lib/std_msgs/String.h ****     virtual int deserialize(unsigned char *inbuffer) override
  35:./ros_lib/std_msgs/String.h ****     {
  36:./ros_lib/std_msgs/String.h ****       int offset = 0;
  37:./ros_lib/std_msgs/String.h ****       uint32_t length_data;
  38:./ros_lib/std_msgs/String.h ****       arrToVar(length_data, (inbuffer + offset));
  39:./ros_lib/std_msgs/String.h ****       offset += 4;
  40:./ros_lib/std_msgs/String.h ****       for(unsigned int k= offset; k< offset+length_data; ++k){
  41:./ros_lib/std_msgs/String.h ****           inbuffer[k-1]=inbuffer[k];
  42:./ros_lib/std_msgs/String.h ****       }
  43:./ros_lib/std_msgs/String.h ****       inbuffer[offset+length_data-1]=0;
  44:./ros_lib/std_msgs/String.h ****       this->data = (char *)(inbuffer + offset-1);
  45:./ros_lib/std_msgs/String.h ****       offset += length_data;
  46:./ros_lib/std_msgs/String.h ****      return offset;
  47:./ros_lib/std_msgs/String.h ****     }
  48:./ros_lib/std_msgs/String.h **** 
  49:./ros_lib/std_msgs/String.h ****     virtual const char * getType() override { return "std_msgs/String"; };
 367               		.loc 5 49 0
 368               		.cfi_startproc
 369               	.LVL27:
 370               	/* prologue: function */
 371               	/* frame size = 0 */
 372               	/* stack size = 0 */
 373               	.L__stack_usage = 0
 374               		.loc 5 49 0
 375 0000 80E0      		ldi r24,lo8(.LC7)
 376 0002 90E0      		ldi r25,hi8(.LC7)
 377               	.LVL28:
 378 0004 0895      		ret
 379               		.cfi_endproc
 380               	.LFE137:
 382               		.section	.rodata.str1.1
 383               	.LC8:
 384 00ce 3939 3263 		.string	"992ce8a1687cec8c8bd883ec73ca41d1"
 384      6538 6131 
 384      3638 3763 
 384      6563 3863 
 384      3862 6438 
 385               		.section	.text._ZN8std_msgs6String6getMD5Ev,"axG",@progbits,_ZN8std_msgs6String6getMD5Ev,comdat
 386               		.weak	_ZN8std_msgs6String6getMD5Ev
 388               	_ZN8std_msgs6String6getMD5Ev:
 389               	.LFB138:
  50:./ros_lib/std_msgs/String.h ****     virtual const char * getMD5() override { return "992ce8a1687cec8c8bd883ec73ca41d1"; };
 390               		.loc 5 50 0
 391               		.cfi_startproc
 392               	.LVL29:
 393               	/* prologue: function */
 394               	/* frame size = 0 */
 395               	/* stack size = 0 */
 396               	.L__stack_usage = 0
 397               		.loc 5 50 0
 398 0000 80E0      		ldi r24,lo8(.LC8)
 399 0002 90E0      		ldi r25,hi8(.LC8)
 400               	.LVL30:
 401 0004 0895      		ret
 402               		.cfi_endproc
 403               	.LFE138:
 405               		.section	.text._ZN3ros11NodeHandle_I17Atmega32AHardwareLi25ELi25ELi512ELi512EE9connectedEv,"axG",@
 406               		.weak	_ZN3ros11NodeHandle_I17Atmega32AHardwareLi25ELi25ELi512ELi512EE9connectedEv
 408               	_ZN3ros11NodeHandle_I17Atmega32AHardwareLi25ELi25ELi512ELi512EE9connectedEv:
 409               	.LFB164:
 410               		.file 6 "./ros_lib/ros/node_handle.h"
   1:./ros_lib/ros/node_handle.h **** /*
   2:./ros_lib/ros/node_handle.h ****  * Software License Agreement (BSD License)
   3:./ros_lib/ros/node_handle.h ****  *
   4:./ros_lib/ros/node_handle.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./ros_lib/ros/node_handle.h ****  * All rights reserved.
   6:./ros_lib/ros/node_handle.h ****  *
   7:./ros_lib/ros/node_handle.h ****  * Redistribution and use in source and binary forms, with or without
   8:./ros_lib/ros/node_handle.h ****  * modification, are permitted provided that the following conditions
   9:./ros_lib/ros/node_handle.h ****  * are met:
  10:./ros_lib/ros/node_handle.h ****  *
  11:./ros_lib/ros/node_handle.h ****  *  * Redistributions of source code must retain the above copyright
  12:./ros_lib/ros/node_handle.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./ros_lib/ros/node_handle.h ****  *  * Redistributions in binary form must reproduce the above
  14:./ros_lib/ros/node_handle.h ****  *    copyright notice, this list of conditions and the following
  15:./ros_lib/ros/node_handle.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./ros_lib/ros/node_handle.h ****  *    with the distribution.
  17:./ros_lib/ros/node_handle.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./ros_lib/ros/node_handle.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./ros_lib/ros/node_handle.h ****  *    from this software without specific prior written permission.
  20:./ros_lib/ros/node_handle.h ****  *
  21:./ros_lib/ros/node_handle.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./ros_lib/ros/node_handle.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./ros_lib/ros/node_handle.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./ros_lib/ros/node_handle.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./ros_lib/ros/node_handle.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./ros_lib/ros/node_handle.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./ros_lib/ros/node_handle.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./ros_lib/ros/node_handle.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./ros_lib/ros/node_handle.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./ros_lib/ros/node_handle.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./ros_lib/ros/node_handle.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./ros_lib/ros/node_handle.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./ros_lib/ros/node_handle.h ****  */
  34:./ros_lib/ros/node_handle.h **** 
  35:./ros_lib/ros/node_handle.h **** #ifndef ROS_NODE_HANDLE_H_
  36:./ros_lib/ros/node_handle.h **** #define ROS_NODE_HANDLE_H_
  37:./ros_lib/ros/node_handle.h **** 
  38:./ros_lib/ros/node_handle.h **** #include <stdint.h>
  39:./ros_lib/ros/node_handle.h **** 
  40:./ros_lib/ros/node_handle.h **** #include "std_msgs/Time.h"
  41:./ros_lib/ros/node_handle.h **** #include "rosserial_msgs/TopicInfo.h"
  42:./ros_lib/ros/node_handle.h **** #include "rosserial_msgs/Log.h"
  43:./ros_lib/ros/node_handle.h **** #include "rosserial_msgs/RequestParam.h"
  44:./ros_lib/ros/node_handle.h **** 
  45:./ros_lib/ros/node_handle.h **** #include "ros/msg.h"
  46:./ros_lib/ros/node_handle.h **** 
  47:./ros_lib/ros/node_handle.h **** namespace ros
  48:./ros_lib/ros/node_handle.h **** {
  49:./ros_lib/ros/node_handle.h **** 
  50:./ros_lib/ros/node_handle.h **** class NodeHandleBase_
  51:./ros_lib/ros/node_handle.h **** {
  52:./ros_lib/ros/node_handle.h **** public:
  53:./ros_lib/ros/node_handle.h ****   virtual int publish(int id, const Msg* msg) = 0;
  54:./ros_lib/ros/node_handle.h ****   virtual int spinOnce() = 0;
  55:./ros_lib/ros/node_handle.h ****   virtual bool connected() = 0;
  56:./ros_lib/ros/node_handle.h **** };
  57:./ros_lib/ros/node_handle.h **** }
  58:./ros_lib/ros/node_handle.h **** 
  59:./ros_lib/ros/node_handle.h **** #include "ros/publisher.h"
  60:./ros_lib/ros/node_handle.h **** #include "ros/subscriber.h"
  61:./ros_lib/ros/node_handle.h **** #include "ros/service_server.h"
  62:./ros_lib/ros/node_handle.h **** #include "ros/service_client.h"
  63:./ros_lib/ros/node_handle.h **** 
  64:./ros_lib/ros/node_handle.h **** namespace ros
  65:./ros_lib/ros/node_handle.h **** {
  66:./ros_lib/ros/node_handle.h **** 
  67:./ros_lib/ros/node_handle.h **** const int SPIN_OK = 0;
  68:./ros_lib/ros/node_handle.h **** const int SPIN_ERR = -1;
  69:./ros_lib/ros/node_handle.h **** const int SPIN_TIMEOUT = -2;
  70:./ros_lib/ros/node_handle.h **** const int SPIN_TX_STOP_REQUESTED = -3;
  71:./ros_lib/ros/node_handle.h **** const int SPIN_TIME_RECV = -4;
  72:./ros_lib/ros/node_handle.h **** 
  73:./ros_lib/ros/node_handle.h **** const uint8_t SYNC_SECONDS  = 5;
  74:./ros_lib/ros/node_handle.h **** const uint8_t MODE_FIRST_FF = 0;
  75:./ros_lib/ros/node_handle.h **** /*
  76:./ros_lib/ros/node_handle.h ****  * The second sync byte is a protocol version. It's value is 0xff for the first
  77:./ros_lib/ros/node_handle.h ****  * version of the rosserial protocol (used up to hydro), 0xfe for the second version
  78:./ros_lib/ros/node_handle.h ****  * (introduced in hydro), 0xfd for the next, and so on. Its purpose is to enable
  79:./ros_lib/ros/node_handle.h ****  * detection of mismatched protocol versions (e.g. hydro rosserial_python with groovy
  80:./ros_lib/ros/node_handle.h ****  * rosserial_arduino. It must be changed in both this file and in
  81:./ros_lib/ros/node_handle.h ****  * rosserial_python/src/rosserial_python/SerialClient.py
  82:./ros_lib/ros/node_handle.h ****  */
  83:./ros_lib/ros/node_handle.h **** const uint8_t MODE_PROTOCOL_VER   = 1;
  84:./ros_lib/ros/node_handle.h **** const uint8_t PROTOCOL_VER1       = 0xff; // through groovy
  85:./ros_lib/ros/node_handle.h **** const uint8_t PROTOCOL_VER2       = 0xfe; // in hydro
  86:./ros_lib/ros/node_handle.h **** const uint8_t PROTOCOL_VER        = PROTOCOL_VER2;
  87:./ros_lib/ros/node_handle.h **** const uint8_t MODE_SIZE_L         = 2;
  88:./ros_lib/ros/node_handle.h **** const uint8_t MODE_SIZE_H         = 3;
  89:./ros_lib/ros/node_handle.h **** const uint8_t MODE_SIZE_CHECKSUM  = 4;    // checksum for msg size received from size L and H
  90:./ros_lib/ros/node_handle.h **** const uint8_t MODE_TOPIC_L        = 5;    // waiting for topic id
  91:./ros_lib/ros/node_handle.h **** const uint8_t MODE_TOPIC_H        = 6;
  92:./ros_lib/ros/node_handle.h **** const uint8_t MODE_MESSAGE        = 7;
  93:./ros_lib/ros/node_handle.h **** const uint8_t MODE_MSG_CHECKSUM   = 8;    // checksum for msg and topic id
  94:./ros_lib/ros/node_handle.h **** 
  95:./ros_lib/ros/node_handle.h **** 
  96:./ros_lib/ros/node_handle.h **** const uint8_t SERIAL_MSG_TIMEOUT  = 20;   // 20 milliseconds to recieve all of message data
  97:./ros_lib/ros/node_handle.h **** 
  98:./ros_lib/ros/node_handle.h **** using rosserial_msgs::TopicInfo;
  99:./ros_lib/ros/node_handle.h **** 
 100:./ros_lib/ros/node_handle.h **** /* Node Handle */
 101:./ros_lib/ros/node_handle.h **** template<class Hardware,
 102:./ros_lib/ros/node_handle.h ****          int MAX_SUBSCRIBERS = 25,
 103:./ros_lib/ros/node_handle.h ****          int MAX_PUBLISHERS = 25,
 104:./ros_lib/ros/node_handle.h ****          int INPUT_SIZE = 512,
 105:./ros_lib/ros/node_handle.h ****          int OUTPUT_SIZE = 512>
 106:./ros_lib/ros/node_handle.h **** class NodeHandle_ : public NodeHandleBase_
 107:./ros_lib/ros/node_handle.h **** {
 108:./ros_lib/ros/node_handle.h **** protected:
 109:./ros_lib/ros/node_handle.h ****   Hardware hardware_{};
 110:./ros_lib/ros/node_handle.h **** 
 111:./ros_lib/ros/node_handle.h ****   /* time used for syncing */
 112:./ros_lib/ros/node_handle.h ****   uint32_t rt_time{0};
 113:./ros_lib/ros/node_handle.h **** 
 114:./ros_lib/ros/node_handle.h ****   /* used for computing current time */
 115:./ros_lib/ros/node_handle.h ****   uint32_t sec_offset{0}, nsec_offset{0};
 116:./ros_lib/ros/node_handle.h **** 
 117:./ros_lib/ros/node_handle.h ****   /* Spinonce maximum work timeout */
 118:./ros_lib/ros/node_handle.h ****   uint32_t spin_timeout_{0};
 119:./ros_lib/ros/node_handle.h **** 
 120:./ros_lib/ros/node_handle.h ****   uint8_t message_in[INPUT_SIZE] = {0};
 121:./ros_lib/ros/node_handle.h ****   uint8_t message_out[OUTPUT_SIZE] = {0};
 122:./ros_lib/ros/node_handle.h **** 
 123:./ros_lib/ros/node_handle.h ****   Publisher * publishers[MAX_PUBLISHERS] = {nullptr};
 124:./ros_lib/ros/node_handle.h ****   Subscriber_ * subscribers[MAX_SUBSCRIBERS] {nullptr};
 125:./ros_lib/ros/node_handle.h **** 
 126:./ros_lib/ros/node_handle.h ****   /*
 127:./ros_lib/ros/node_handle.h ****    * Setup Functions
 128:./ros_lib/ros/node_handle.h ****    */
 129:./ros_lib/ros/node_handle.h **** public:
 130:./ros_lib/ros/node_handle.h ****   Hardware* getHardware()
 131:./ros_lib/ros/node_handle.h ****   {
 132:./ros_lib/ros/node_handle.h ****     return &hardware_;
 133:./ros_lib/ros/node_handle.h ****   }
 134:./ros_lib/ros/node_handle.h **** 
 135:./ros_lib/ros/node_handle.h ****   /* Start serial, initialize buffers */
 136:./ros_lib/ros/node_handle.h ****   void initNode()
 137:./ros_lib/ros/node_handle.h ****   {
 138:./ros_lib/ros/node_handle.h ****     hardware_.init();
 139:./ros_lib/ros/node_handle.h ****     mode_ = 0;
 140:./ros_lib/ros/node_handle.h ****     bytes_ = 0;
 141:./ros_lib/ros/node_handle.h ****     index_ = 0;
 142:./ros_lib/ros/node_handle.h ****     topic_ = 0;
 143:./ros_lib/ros/node_handle.h ****   };
 144:./ros_lib/ros/node_handle.h **** 
 145:./ros_lib/ros/node_handle.h ****   /* Start a named port, which may be network server IP, initialize buffers */
 146:./ros_lib/ros/node_handle.h ****   void initNode(char *portName)
 147:./ros_lib/ros/node_handle.h ****   {
 148:./ros_lib/ros/node_handle.h ****     hardware_.init(portName);
 149:./ros_lib/ros/node_handle.h ****     mode_ = 0;
 150:./ros_lib/ros/node_handle.h ****     bytes_ = 0;
 151:./ros_lib/ros/node_handle.h ****     index_ = 0;
 152:./ros_lib/ros/node_handle.h ****     topic_ = 0;
 153:./ros_lib/ros/node_handle.h ****   };
 154:./ros_lib/ros/node_handle.h **** 
 155:./ros_lib/ros/node_handle.h ****   /**
 156:./ros_lib/ros/node_handle.h ****    * @brief Sets the maximum time in millisconds that spinOnce() can work.
 157:./ros_lib/ros/node_handle.h ****    * This will not effect the processing of the buffer, as spinOnce processes
 158:./ros_lib/ros/node_handle.h ****    * one byte at a time. It simply sets the maximum time that one call can
 159:./ros_lib/ros/node_handle.h ****    * process for. You can choose to clear the buffer if that is beneficial if
 160:./ros_lib/ros/node_handle.h ****    * SPIN_TIMEOUT is returned from spinOnce().
 161:./ros_lib/ros/node_handle.h ****    * @param timeout The timeout in milliseconds that spinOnce will function.
 162:./ros_lib/ros/node_handle.h ****    */
 163:./ros_lib/ros/node_handle.h ****   void setSpinTimeout(const uint32_t& timeout)
 164:./ros_lib/ros/node_handle.h ****   {
 165:./ros_lib/ros/node_handle.h ****      spin_timeout_ = timeout;
 166:./ros_lib/ros/node_handle.h ****   }
 167:./ros_lib/ros/node_handle.h **** 
 168:./ros_lib/ros/node_handle.h **** protected:
 169:./ros_lib/ros/node_handle.h ****   // State machine variables for spinOnce
 170:./ros_lib/ros/node_handle.h ****   int mode_{0};
 171:./ros_lib/ros/node_handle.h ****   int bytes_{0};
 172:./ros_lib/ros/node_handle.h ****   int topic_{0};
 173:./ros_lib/ros/node_handle.h ****   int index_{0};
 174:./ros_lib/ros/node_handle.h ****   int checksum_{0};
 175:./ros_lib/ros/node_handle.h **** 
 176:./ros_lib/ros/node_handle.h ****   bool configured_{false};
 177:./ros_lib/ros/node_handle.h **** 
 178:./ros_lib/ros/node_handle.h ****   /* used for syncing the time */
 179:./ros_lib/ros/node_handle.h ****   uint32_t last_sync_time{0};
 180:./ros_lib/ros/node_handle.h ****   uint32_t last_sync_receive_time{0};
 181:./ros_lib/ros/node_handle.h ****   uint32_t last_msg_timeout_time{0};
 182:./ros_lib/ros/node_handle.h **** 
 183:./ros_lib/ros/node_handle.h **** public:
 184:./ros_lib/ros/node_handle.h ****   /* This function goes in your loop() function, it handles
 185:./ros_lib/ros/node_handle.h ****    *  serial input and callbacks for subscribers.
 186:./ros_lib/ros/node_handle.h ****    */
 187:./ros_lib/ros/node_handle.h **** 
 188:./ros_lib/ros/node_handle.h **** 
 189:./ros_lib/ros/node_handle.h ****   virtual int spinOnce() override
 190:./ros_lib/ros/node_handle.h ****   {
 191:./ros_lib/ros/node_handle.h ****     /* restart if timed out */
 192:./ros_lib/ros/node_handle.h ****     uint32_t c_time = hardware_.time();
 193:./ros_lib/ros/node_handle.h ****     if ((c_time - last_sync_receive_time) > (SYNC_SECONDS * 2200))
 194:./ros_lib/ros/node_handle.h ****     {
 195:./ros_lib/ros/node_handle.h ****       configured_ = false;
 196:./ros_lib/ros/node_handle.h ****     }
 197:./ros_lib/ros/node_handle.h **** 
 198:./ros_lib/ros/node_handle.h ****     /* reset if message has timed out */
 199:./ros_lib/ros/node_handle.h ****     if (mode_ != MODE_FIRST_FF)
 200:./ros_lib/ros/node_handle.h ****     {
 201:./ros_lib/ros/node_handle.h ****       if (c_time > last_msg_timeout_time)
 202:./ros_lib/ros/node_handle.h ****       {
 203:./ros_lib/ros/node_handle.h ****         mode_ = MODE_FIRST_FF;
 204:./ros_lib/ros/node_handle.h ****       }
 205:./ros_lib/ros/node_handle.h ****     }
 206:./ros_lib/ros/node_handle.h **** 
 207:./ros_lib/ros/node_handle.h ****     bool tx_stop_requested = false;
 208:./ros_lib/ros/node_handle.h ****     bool saw_time_msg = false;
 209:./ros_lib/ros/node_handle.h **** 
 210:./ros_lib/ros/node_handle.h ****     /* while available buffer, read data */
 211:./ros_lib/ros/node_handle.h ****     while (true)
 212:./ros_lib/ros/node_handle.h ****     {
 213:./ros_lib/ros/node_handle.h ****       // If a timeout has been specified, check how long spinOnce has been running.
 214:./ros_lib/ros/node_handle.h ****       if (spin_timeout_ > 0)
 215:./ros_lib/ros/node_handle.h ****       {
 216:./ros_lib/ros/node_handle.h ****         // If the maximum processing timeout has been exceeded, exit with error.
 217:./ros_lib/ros/node_handle.h ****         // The next spinOnce can continue where it left off, or optionally
 218:./ros_lib/ros/node_handle.h ****         // based on the application in use, the hardware buffer could be flushed
 219:./ros_lib/ros/node_handle.h ****         // and start fresh.
 220:./ros_lib/ros/node_handle.h ****         if ((hardware_.time() - c_time) > spin_timeout_)
 221:./ros_lib/ros/node_handle.h ****         {
 222:./ros_lib/ros/node_handle.h ****           // Exit the spin, processing timeout exceeded.
 223:./ros_lib/ros/node_handle.h ****           return SPIN_TIMEOUT;
 224:./ros_lib/ros/node_handle.h ****         }
 225:./ros_lib/ros/node_handle.h ****       }
 226:./ros_lib/ros/node_handle.h ****       int data = hardware_.read();
 227:./ros_lib/ros/node_handle.h ****       if (data < 0)
 228:./ros_lib/ros/node_handle.h ****         break;
 229:./ros_lib/ros/node_handle.h ****       checksum_ += data;
 230:./ros_lib/ros/node_handle.h ****       if (mode_ == MODE_MESSAGE)          /* message data being recieved */
 231:./ros_lib/ros/node_handle.h ****       {
 232:./ros_lib/ros/node_handle.h ****         message_in[index_++] = data;
 233:./ros_lib/ros/node_handle.h ****         bytes_--;
 234:./ros_lib/ros/node_handle.h ****         if (bytes_ == 0)                 /* is message complete? if so, checksum */
 235:./ros_lib/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 236:./ros_lib/ros/node_handle.h ****       }
 237:./ros_lib/ros/node_handle.h ****       else if (mode_ == MODE_FIRST_FF)
 238:./ros_lib/ros/node_handle.h ****       {
 239:./ros_lib/ros/node_handle.h ****         if (data == 0xff)
 240:./ros_lib/ros/node_handle.h ****         {
 241:./ros_lib/ros/node_handle.h ****           mode_++;
 242:./ros_lib/ros/node_handle.h ****           last_msg_timeout_time = c_time + SERIAL_MSG_TIMEOUT;
 243:./ros_lib/ros/node_handle.h ****         }
 244:./ros_lib/ros/node_handle.h ****         else if (hardware_.time() - c_time > (SYNC_SECONDS * 1000))
 245:./ros_lib/ros/node_handle.h ****         {
 246:./ros_lib/ros/node_handle.h ****           /* We have been stuck in spinOnce too long, return error */
 247:./ros_lib/ros/node_handle.h ****           configured_ = false;
 248:./ros_lib/ros/node_handle.h ****           return SPIN_TIMEOUT;
 249:./ros_lib/ros/node_handle.h ****         }
 250:./ros_lib/ros/node_handle.h ****       }
 251:./ros_lib/ros/node_handle.h ****       else if (mode_ == MODE_PROTOCOL_VER)
 252:./ros_lib/ros/node_handle.h ****       {
 253:./ros_lib/ros/node_handle.h ****         if (data == PROTOCOL_VER)
 254:./ros_lib/ros/node_handle.h ****         {
 255:./ros_lib/ros/node_handle.h ****           mode_++;
 256:./ros_lib/ros/node_handle.h ****         }
 257:./ros_lib/ros/node_handle.h ****         else
 258:./ros_lib/ros/node_handle.h ****         {
 259:./ros_lib/ros/node_handle.h ****           mode_ = MODE_FIRST_FF;
 260:./ros_lib/ros/node_handle.h ****           if (configured_ == false)
 261:./ros_lib/ros/node_handle.h ****             requestSyncTime();  /* send a msg back showing our protocol version */
 262:./ros_lib/ros/node_handle.h ****         }
 263:./ros_lib/ros/node_handle.h ****       }
 264:./ros_lib/ros/node_handle.h ****       else if (mode_ == MODE_SIZE_L)      /* bottom half of message size */
 265:./ros_lib/ros/node_handle.h ****       {
 266:./ros_lib/ros/node_handle.h ****         bytes_ = data;
 267:./ros_lib/ros/node_handle.h ****         index_ = 0;
 268:./ros_lib/ros/node_handle.h ****         mode_++;
 269:./ros_lib/ros/node_handle.h ****         checksum_ = data;               /* first byte for calculating size checksum */
 270:./ros_lib/ros/node_handle.h ****       }
 271:./ros_lib/ros/node_handle.h ****       else if (mode_ == MODE_SIZE_H)      /* top half of message size */
 272:./ros_lib/ros/node_handle.h ****       {
 273:./ros_lib/ros/node_handle.h ****         bytes_ += data << 8;
 274:./ros_lib/ros/node_handle.h ****         mode_++;
 275:./ros_lib/ros/node_handle.h ****       }
 276:./ros_lib/ros/node_handle.h ****       else if (mode_ == MODE_SIZE_CHECKSUM)
 277:./ros_lib/ros/node_handle.h ****       {
 278:./ros_lib/ros/node_handle.h ****         if ((checksum_ % 256) == 255)
 279:./ros_lib/ros/node_handle.h ****           mode_++;
 280:./ros_lib/ros/node_handle.h ****         else
 281:./ros_lib/ros/node_handle.h ****           mode_ = MODE_FIRST_FF;          /* Abandon the frame if the msg len is wrong */
 282:./ros_lib/ros/node_handle.h ****       }
 283:./ros_lib/ros/node_handle.h ****       else if (mode_ == MODE_TOPIC_L)     /* bottom half of topic id */
 284:./ros_lib/ros/node_handle.h ****       {
 285:./ros_lib/ros/node_handle.h ****         topic_ = data;
 286:./ros_lib/ros/node_handle.h ****         mode_++;
 287:./ros_lib/ros/node_handle.h ****         checksum_ = data;               /* first byte included in checksum */
 288:./ros_lib/ros/node_handle.h ****       }
 289:./ros_lib/ros/node_handle.h ****       else if (mode_ == MODE_TOPIC_H)     /* top half of topic id */
 290:./ros_lib/ros/node_handle.h ****       {
 291:./ros_lib/ros/node_handle.h ****         topic_ += data << 8;
 292:./ros_lib/ros/node_handle.h ****         mode_ = MODE_MESSAGE;
 293:./ros_lib/ros/node_handle.h ****         if (bytes_ == 0)
 294:./ros_lib/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 295:./ros_lib/ros/node_handle.h ****       }
 296:./ros_lib/ros/node_handle.h ****       else if (mode_ == MODE_MSG_CHECKSUM)    /* do checksum */
 297:./ros_lib/ros/node_handle.h ****       {
 298:./ros_lib/ros/node_handle.h ****         mode_ = MODE_FIRST_FF;
 299:./ros_lib/ros/node_handle.h ****         if ((checksum_ % 256) == 255)
 300:./ros_lib/ros/node_handle.h ****         {
 301:./ros_lib/ros/node_handle.h ****           if (topic_ == TopicInfo::ID_PUBLISHER)
 302:./ros_lib/ros/node_handle.h ****           {
 303:./ros_lib/ros/node_handle.h ****             requestSyncTime();
 304:./ros_lib/ros/node_handle.h ****             negotiateTopics();
 305:./ros_lib/ros/node_handle.h ****             last_sync_time = c_time;
 306:./ros_lib/ros/node_handle.h ****             last_sync_receive_time = c_time;
 307:./ros_lib/ros/node_handle.h ****             return SPIN_ERR;
 308:./ros_lib/ros/node_handle.h ****           }
 309:./ros_lib/ros/node_handle.h ****           else if (topic_ == TopicInfo::ID_TIME)
 310:./ros_lib/ros/node_handle.h ****           {
 311:./ros_lib/ros/node_handle.h ****             saw_time_msg = true;
 312:./ros_lib/ros/node_handle.h ****             syncTime(message_in);
 313:./ros_lib/ros/node_handle.h ****           }
 314:./ros_lib/ros/node_handle.h ****           else if (topic_ == TopicInfo::ID_PARAMETER_REQUEST)
 315:./ros_lib/ros/node_handle.h ****           {
 316:./ros_lib/ros/node_handle.h ****             req_param_resp.deserialize(message_in);
 317:./ros_lib/ros/node_handle.h ****             param_received = true;
 318:./ros_lib/ros/node_handle.h ****           }
 319:./ros_lib/ros/node_handle.h ****           else if (topic_ == TopicInfo::ID_TX_STOP)
 320:./ros_lib/ros/node_handle.h ****           {
 321:./ros_lib/ros/node_handle.h ****             configured_ = false;
 322:./ros_lib/ros/node_handle.h ****             tx_stop_requested = true;
 323:./ros_lib/ros/node_handle.h ****           }
 324:./ros_lib/ros/node_handle.h ****           else
 325:./ros_lib/ros/node_handle.h ****           {
 326:./ros_lib/ros/node_handle.h ****             if (subscribers[topic_ - 100])
 327:./ros_lib/ros/node_handle.h ****               subscribers[topic_ - 100]->callback(message_in);
 328:./ros_lib/ros/node_handle.h ****           }
 329:./ros_lib/ros/node_handle.h ****         }
 330:./ros_lib/ros/node_handle.h ****       }
 331:./ros_lib/ros/node_handle.h ****     }
 332:./ros_lib/ros/node_handle.h **** 
 333:./ros_lib/ros/node_handle.h ****     /* occasionally sync time */
 334:./ros_lib/ros/node_handle.h ****     if (configured_ && ((c_time - last_sync_time) > (SYNC_SECONDS * 500)))
 335:./ros_lib/ros/node_handle.h ****     {
 336:./ros_lib/ros/node_handle.h ****       requestSyncTime();
 337:./ros_lib/ros/node_handle.h ****       last_sync_time = c_time;
 338:./ros_lib/ros/node_handle.h ****     }
 339:./ros_lib/ros/node_handle.h **** 
 340:./ros_lib/ros/node_handle.h ****     return saw_time_msg ? SPIN_TIME_RECV : (tx_stop_requested ? SPIN_TX_STOP_REQUESTED : SPIN_OK);
 341:./ros_lib/ros/node_handle.h ****   }
 342:./ros_lib/ros/node_handle.h **** 
 343:./ros_lib/ros/node_handle.h **** 
 344:./ros_lib/ros/node_handle.h ****   /* Are we connected to the PC? */
 345:./ros_lib/ros/node_handle.h ****   virtual bool connected() override
 411               		.loc 6 345 0
 412               		.cfi_startproc
 413               	.LVL31:
 414               	/* prologue: function */
 415               	/* frame size = 0 */
 416               	/* stack size = 0 */
 417               	.L__stack_usage = 0
 346:./ros_lib/ros/node_handle.h ****   {
 347:./ros_lib/ros/node_handle.h ****     return configured_;
 418               		.loc 6 347 0
 419 0000 8F57      		subi r24,127
 420 0002 9B4F      		sbci r25,-5
 421               	.LVL32:
 348:./ros_lib/ros/node_handle.h ****   };
 422               		.loc 6 348 0
 423 0004 FC01      		movw r30,r24
 424 0006 8081      		ld r24,Z
 425               	.LVL33:
 426 0008 0895      		ret
 427               		.cfi_endproc
 428               	.LFE164:
 430               		.section	.rodata.str1.1
 431               	.LC9:
 432 00ef 4D65 7373 		.string	"Message from device dropped: message larger than buffer."
 432      6167 6520 
 432      6672 6F6D 
 432      2064 6576 
 432      6963 6520 
 433               		.section	.text._ZN3ros11NodeHandle_I17Atmega32AHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE
 434               		.weak	_ZN3ros11NodeHandle_I17Atmega32AHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE
 436               	_ZN3ros11NodeHandle_I17Atmega32AHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE:
 437               	.LFB159:
 349:./ros_lib/ros/node_handle.h **** 
 350:./ros_lib/ros/node_handle.h ****   /********************************************************************
 351:./ros_lib/ros/node_handle.h ****    * Time functions
 352:./ros_lib/ros/node_handle.h ****    */
 353:./ros_lib/ros/node_handle.h **** 
 354:./ros_lib/ros/node_handle.h ****   void requestSyncTime()
 355:./ros_lib/ros/node_handle.h ****   {
 356:./ros_lib/ros/node_handle.h ****     std_msgs::Time t;
 357:./ros_lib/ros/node_handle.h ****     publish(TopicInfo::ID_TIME, &t);
 358:./ros_lib/ros/node_handle.h ****     rt_time = hardware_.time();
 359:./ros_lib/ros/node_handle.h ****   }
 360:./ros_lib/ros/node_handle.h **** 
 361:./ros_lib/ros/node_handle.h ****   void syncTime(uint8_t * data)
 362:./ros_lib/ros/node_handle.h ****   {
 363:./ros_lib/ros/node_handle.h ****     std_msgs::Time t;
 364:./ros_lib/ros/node_handle.h ****     uint32_t offset = hardware_.time() - rt_time;
 365:./ros_lib/ros/node_handle.h **** 
 366:./ros_lib/ros/node_handle.h ****     t.deserialize(data);
 367:./ros_lib/ros/node_handle.h ****     t.data.sec += offset / 1000;
 368:./ros_lib/ros/node_handle.h ****     t.data.nsec += (offset % 1000) * 1000000UL;
 369:./ros_lib/ros/node_handle.h **** 
 370:./ros_lib/ros/node_handle.h ****     this->setNow(t.data);
 371:./ros_lib/ros/node_handle.h ****     last_sync_receive_time = hardware_.time();
 372:./ros_lib/ros/node_handle.h ****   }
 373:./ros_lib/ros/node_handle.h **** 
 374:./ros_lib/ros/node_handle.h ****   Time now()
 375:./ros_lib/ros/node_handle.h ****   {
 376:./ros_lib/ros/node_handle.h ****     uint32_t ms = hardware_.time();
 377:./ros_lib/ros/node_handle.h ****     Time current_time;
 378:./ros_lib/ros/node_handle.h ****     current_time.sec = ms / 1000 + sec_offset;
 379:./ros_lib/ros/node_handle.h ****     current_time.nsec = (ms % 1000) * 1000000UL + nsec_offset;
 380:./ros_lib/ros/node_handle.h ****     normalizeSecNSec(current_time.sec, current_time.nsec);
 381:./ros_lib/ros/node_handle.h ****     return current_time;
 382:./ros_lib/ros/node_handle.h ****   }
 383:./ros_lib/ros/node_handle.h **** 
 384:./ros_lib/ros/node_handle.h ****   void setNow(const Time & new_now)
 385:./ros_lib/ros/node_handle.h ****   {
 386:./ros_lib/ros/node_handle.h ****     uint32_t ms = hardware_.time();
 387:./ros_lib/ros/node_handle.h ****     sec_offset = new_now.sec - ms / 1000 - 1;
 388:./ros_lib/ros/node_handle.h ****     nsec_offset = new_now.nsec - (ms % 1000) * 1000000UL + 1000000000UL;
 389:./ros_lib/ros/node_handle.h ****     normalizeSecNSec(sec_offset, nsec_offset);
 390:./ros_lib/ros/node_handle.h ****   }
 391:./ros_lib/ros/node_handle.h **** 
 392:./ros_lib/ros/node_handle.h ****   /********************************************************************
 393:./ros_lib/ros/node_handle.h ****    * Topic Management
 394:./ros_lib/ros/node_handle.h ****    */
 395:./ros_lib/ros/node_handle.h **** 
 396:./ros_lib/ros/node_handle.h ****   /* Register a new publisher */
 397:./ros_lib/ros/node_handle.h ****   bool advertise(Publisher & p)
 398:./ros_lib/ros/node_handle.h ****   {
 399:./ros_lib/ros/node_handle.h ****     for (int i = 0; i < MAX_PUBLISHERS; i++)
 400:./ros_lib/ros/node_handle.h ****     {
 401:./ros_lib/ros/node_handle.h ****       if (publishers[i] == 0) // empty slot
 402:./ros_lib/ros/node_handle.h ****       {
 403:./ros_lib/ros/node_handle.h ****         publishers[i] = &p;
 404:./ros_lib/ros/node_handle.h ****         p.id_ = i + 100 + MAX_SUBSCRIBERS;
 405:./ros_lib/ros/node_handle.h ****         p.nh_ = this;
 406:./ros_lib/ros/node_handle.h ****         return true;
 407:./ros_lib/ros/node_handle.h ****       }
 408:./ros_lib/ros/node_handle.h ****     }
 409:./ros_lib/ros/node_handle.h ****     return false;
 410:./ros_lib/ros/node_handle.h ****   }
 411:./ros_lib/ros/node_handle.h **** 
 412:./ros_lib/ros/node_handle.h ****   /* Register a new subscriber */
 413:./ros_lib/ros/node_handle.h ****   bool subscribe(Subscriber_& s)
 414:./ros_lib/ros/node_handle.h ****   {
 415:./ros_lib/ros/node_handle.h ****     for (int i = 0; i < MAX_SUBSCRIBERS; i++)
 416:./ros_lib/ros/node_handle.h ****     {
 417:./ros_lib/ros/node_handle.h ****       if (subscribers[i] == 0) // empty slot
 418:./ros_lib/ros/node_handle.h ****       {
 419:./ros_lib/ros/node_handle.h ****         subscribers[i] = &s;
 420:./ros_lib/ros/node_handle.h ****         s.id_ = i + 100;
 421:./ros_lib/ros/node_handle.h ****         return true;
 422:./ros_lib/ros/node_handle.h ****       }
 423:./ros_lib/ros/node_handle.h ****     }
 424:./ros_lib/ros/node_handle.h ****     return false;
 425:./ros_lib/ros/node_handle.h ****   }
 426:./ros_lib/ros/node_handle.h **** 
 427:./ros_lib/ros/node_handle.h ****   /* Register a new Service Server */
 428:./ros_lib/ros/node_handle.h ****   template<typename MReq, typename MRes, typename ObjT>
 429:./ros_lib/ros/node_handle.h ****   bool advertiseService(ServiceServer<MReq, MRes, ObjT>& srv)
 430:./ros_lib/ros/node_handle.h ****   {
 431:./ros_lib/ros/node_handle.h ****     bool v = advertise(srv.pub);
 432:./ros_lib/ros/node_handle.h ****     bool w = subscribe(srv);
 433:./ros_lib/ros/node_handle.h ****     return v && w;
 434:./ros_lib/ros/node_handle.h ****   }
 435:./ros_lib/ros/node_handle.h **** 
 436:./ros_lib/ros/node_handle.h ****   /* Register a new Service Client */
 437:./ros_lib/ros/node_handle.h ****   template<typename MReq, typename MRes>
 438:./ros_lib/ros/node_handle.h ****   bool serviceClient(ServiceClient<MReq, MRes>& srv)
 439:./ros_lib/ros/node_handle.h ****   {
 440:./ros_lib/ros/node_handle.h ****     bool v = advertise(srv.pub);
 441:./ros_lib/ros/node_handle.h ****     bool w = subscribe(srv);
 442:./ros_lib/ros/node_handle.h ****     return v && w;
 443:./ros_lib/ros/node_handle.h ****   }
 444:./ros_lib/ros/node_handle.h **** 
 445:./ros_lib/ros/node_handle.h ****   void negotiateTopics()
 446:./ros_lib/ros/node_handle.h ****   {
 447:./ros_lib/ros/node_handle.h ****     rosserial_msgs::TopicInfo ti;
 448:./ros_lib/ros/node_handle.h ****     int i;
 449:./ros_lib/ros/node_handle.h ****     for (i = 0; i < MAX_PUBLISHERS; i++)
 450:./ros_lib/ros/node_handle.h ****     {
 451:./ros_lib/ros/node_handle.h ****       if (publishers[i] != 0) // non-empty slot
 452:./ros_lib/ros/node_handle.h ****       {
 453:./ros_lib/ros/node_handle.h ****         ti.topic_id = publishers[i]->id_;
 454:./ros_lib/ros/node_handle.h ****         ti.topic_name = (char *) publishers[i]->topic_;
 455:./ros_lib/ros/node_handle.h ****         ti.message_type = (char *) publishers[i]->msg_->getType();
 456:./ros_lib/ros/node_handle.h ****         ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 457:./ros_lib/ros/node_handle.h ****         ti.buffer_size = OUTPUT_SIZE;
 458:./ros_lib/ros/node_handle.h ****         publish(publishers[i]->getEndpointType(), &ti);
 459:./ros_lib/ros/node_handle.h ****       }
 460:./ros_lib/ros/node_handle.h ****     }
 461:./ros_lib/ros/node_handle.h ****     for (i = 0; i < MAX_SUBSCRIBERS; i++)
 462:./ros_lib/ros/node_handle.h ****     {
 463:./ros_lib/ros/node_handle.h ****       if (subscribers[i] != 0) // non-empty slot
 464:./ros_lib/ros/node_handle.h ****       {
 465:./ros_lib/ros/node_handle.h ****         ti.topic_id = subscribers[i]->id_;
 466:./ros_lib/ros/node_handle.h ****         ti.topic_name = (char *) subscribers[i]->topic_;
 467:./ros_lib/ros/node_handle.h ****         ti.message_type = (char *) subscribers[i]->getMsgType();
 468:./ros_lib/ros/node_handle.h ****         ti.md5sum = (char *) subscribers[i]->getMsgMD5();
 469:./ros_lib/ros/node_handle.h ****         ti.buffer_size = INPUT_SIZE;
 470:./ros_lib/ros/node_handle.h ****         publish(subscribers[i]->getEndpointType(), &ti);
 471:./ros_lib/ros/node_handle.h ****       }
 472:./ros_lib/ros/node_handle.h ****     }
 473:./ros_lib/ros/node_handle.h ****     configured_ = true;
 474:./ros_lib/ros/node_handle.h ****   }
 475:./ros_lib/ros/node_handle.h **** 
 476:./ros_lib/ros/node_handle.h ****   virtual int publish(int id, const Msg * msg) override
 438               		.loc 6 476 0
 439               		.cfi_startproc
 440               	.LVL34:
 441 0000 CF92      		push r12
 442               	.LCFI0:
 443               		.cfi_def_cfa_offset 3
 444               		.cfi_offset 12, -2
 445 0002 DF92      		push r13
 446               	.LCFI1:
 447               		.cfi_def_cfa_offset 4
 448               		.cfi_offset 13, -3
 449 0004 EF92      		push r14
 450               	.LCFI2:
 451               		.cfi_def_cfa_offset 5
 452               		.cfi_offset 14, -4
 453 0006 FF92      		push r15
 454               	.LCFI3:
 455               		.cfi_def_cfa_offset 6
 456               		.cfi_offset 15, -5
 457 0008 0F93      		push r16
 458               	.LCFI4:
 459               		.cfi_def_cfa_offset 7
 460               		.cfi_offset 16, -6
 461 000a 1F93      		push r17
 462               	.LCFI5:
 463               		.cfi_def_cfa_offset 8
 464               		.cfi_offset 17, -7
 465 000c CF93      		push r28
 466               	.LCFI6:
 467               		.cfi_def_cfa_offset 9
 468               		.cfi_offset 28, -8
 469 000e DF93      		push r29
 470               	.LCFI7:
 471               		.cfi_def_cfa_offset 10
 472               		.cfi_offset 29, -9
 473 0010 00D0      		rcall .
 474 0012 00D0      		rcall .
 475 0014 1F92      		push __zero_reg__
 476               	.LCFI8:
 477               		.cfi_def_cfa_offset 15
 478 0016 CDB7      		in r28,__SP_L__
 479 0018 DEB7      		in r29,__SP_H__
 480               	.LCFI9:
 481               		.cfi_def_cfa_register 28
 482               	/* prologue: function */
 483               	/* frame size = 5 */
 484               	/* stack size = 13 */
 485               	.L__stack_usage = 13
 477:./ros_lib/ros/node_handle.h ****   {
 478:./ros_lib/ros/node_handle.h ****     if (id >= 100 && !configured_)
 486               		.loc 6 478 0
 487 001a 6436      		cpi r22,100
 488 001c 7105      		cpc r23,__zero_reg__
 489 001e 04F0      		brlt .L15
 490               		.loc 6 478 0 is_stmt 0 discriminator 1
 491 0020 FC01      		movw r30,r24
 492 0022 EF57      		subi r30,127
 493 0024 FB4F      		sbci r31,-5
 494 0026 2081      		ld r18,Z
 495 0028 2223      		tst r18
 496 002a 01F4      		brne .+2
 497 002c 00C0      		rjmp .L21
 498               	.L15:
 499 002e DA01      		movw r26,r20
 500 0030 7B01      		movw r14,r22
 501 0032 8C01      		movw r16,r24
 479:./ros_lib/ros/node_handle.h ****       return 0;
 480:./ros_lib/ros/node_handle.h **** 
 481:./ros_lib/ros/node_handle.h ****     /* serialize message */
 482:./ros_lib/ros/node_handle.h ****     int l = msg->serialize(message_out + 7);
 502               		.loc 6 482 0 is_stmt 1
 503 0034 BC01      		movw r22,r24
 504               	.LVL35:
 505 0036 665E      		subi r22,-26
 506 0038 7D4F      		sbci r23,-3
 507 003a ED91      		ld r30,X+
 508 003c FC91      		ld r31,X
 509 003e 0190      		ld __tmp_reg__,Z+
 510 0040 F081      		ld r31,Z
 511 0042 E02D      		mov r30,__tmp_reg__
 512 0044 CA01      		movw r24,r20
 513               	.LVL36:
 514 0046 0995      		icall
 515               	.LVL37:
 483:./ros_lib/ros/node_handle.h **** 
 484:./ros_lib/ros/node_handle.h ****     /* setup the header */
 485:./ros_lib/ros/node_handle.h ****     message_out[0] = 0xff;
 516               		.loc 6 485 0
 517 0048 6801      		movw r12,r16
 518 004a 2DEE      		ldi r18,-19
 519 004c C21A      		sub r12,r18
 520 004e 2DEF      		ldi r18,-3
 521 0050 D20A      		sbc r13,r18
 522 0052 2FEF      		ldi r18,lo8(-1)
 523 0054 D601      		movw r26,r12
 524 0056 2C93      		st X,r18
 486:./ros_lib/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 525               		.loc 6 486 0
 526 0058 F801      		movw r30,r16
 527 005a EC5E      		subi r30,-20
 528 005c FD4F      		sbci r31,-3
 529 005e 2EEF      		ldi r18,lo8(-2)
 530 0060 2083      		st Z,r18
 487:./ros_lib/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 531               		.loc 6 487 0
 532 0062 3196      		adiw r30,1
 533 0064 8083      		st Z,r24
 488:./ros_lib/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 534               		.loc 6 488 0
 535 0066 3196      		adiw r30,1
 536 0068 9083      		st Z,r25
 489:./ros_lib/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 537               		.loc 6 489 0
 538 006a 3196      		adiw r30,1
 539 006c 292F      		mov r18,r25
 540 006e 280F      		add r18,r24
 541 0070 2095      		com r18
 542 0072 2083      		st Z,r18
 490:./ros_lib/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 543               		.loc 6 490 0
 544 0074 3196      		adiw r30,1
 545 0076 E082      		st Z,r14
 491:./ros_lib/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 546               		.loc 6 491 0
 547 0078 1696      		adiw r26,6
 548 007a FC92      		st X,r15
 549               	.LVL38:
 550               	.LBB88:
 492:./ros_lib/ros/node_handle.h **** 
 493:./ros_lib/ros/node_handle.h ****     /* calculate checksum */
 494:./ros_lib/ros/node_handle.h ****     int chk = 0;
 495:./ros_lib/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 551               		.loc 6 495 0
 552 007c 45E0      		ldi r20,lo8(5)
 553 007e 50E0      		ldi r21,0
 554               	.LBE88:
 494:./ros_lib/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 555               		.loc 6 494 0
 556 0080 20E0      		ldi r18,0
 557 0082 30E0      		ldi r19,0
 558               	.LBB89:
 559               		.loc 6 495 0
 560 0084 DC01      		movw r26,r24
 561 0086 1696      		adiw r26,6
 562               	.LVL39:
 563               	.L18:
 564               		.loc 6 495 0 is_stmt 0 discriminator 3
 565 0088 A417      		cp r26,r20
 566 008a B507      		cpc r27,r21
 567 008c 04F0      		brlt .L17
 496:./ros_lib/ros/node_handle.h ****       chk += message_out[i];
 568               		.loc 6 496 0 is_stmt 1 discriminator 2
 569 008e 6191      		ld r22,Z+
 570 0090 260F      		add r18,r22
 571 0092 311D      		adc r19,__zero_reg__
 572               	.LVL40:
 495:./ros_lib/ros/node_handle.h ****       chk += message_out[i];
 573               		.loc 6 495 0 discriminator 2
 574 0094 4F5F      		subi r20,-1
 575 0096 5F4F      		sbci r21,-1
 576               	.LVL41:
 577 0098 00C0      		rjmp .L18
 578               	.L17:
 579               	.LVL42:
 580               	.LBE89:
 497:./ros_lib/ros/node_handle.h ****     l += 7;
 498:./ros_lib/ros/node_handle.h ****     message_out[l++] = 255 - (chk % 256);
 581               		.loc 6 498 0
 582 009a 7C01      		movw r14,r24
 583               	.LVL43:
 584 009c B8E0      		ldi r27,8
 585 009e EB0E      		add r14,r27
 586 00a0 F11C      		adc r15,__zero_reg__
 587               	.LVL44:
 588 00a2 800F      		add r24,r16
 589 00a4 911F      		adc r25,r17
 590 00a6 FC01      		movw r30,r24
 591 00a8 E65E      		subi r30,-26
 592 00aa FD4F      		sbci r31,-3
 593 00ac 2095      		com r18
 594               	.LVL45:
 595 00ae 2083      		st Z,r18
 499:./ros_lib/ros/node_handle.h **** 
 500:./ros_lib/ros/node_handle.h ****     if (l <= OUTPUT_SIZE)
 596               		.loc 6 500 0
 597 00b0 E1E0      		ldi r30,1
 598 00b2 EE16      		cp r14,r30
 599 00b4 E2E0      		ldi r30,2
 600 00b6 FE06      		cpc r15,r30
 601 00b8 04F4      		brge .L19
 602               	.LVL46:
 501:./ros_lib/ros/node_handle.h ****     {
 502:./ros_lib/ros/node_handle.h ****       hardware_.write(message_out, l);
 603               		.loc 6 502 0
 604 00ba 8601      		movw r16,r12
 605               	.LVL47:
 606               	.L20:
 607               	.LBB90:
 608               	.LBB91:
 609               		.file 7 "Atmega32Hardware.h"
   1:Atmega32Hardware.h **** #ifndef _ATMEGA32AHARDWARE_H_
   2:Atmega32Hardware.h **** #define _ATMEGA32AHARDWARE_H_
   3:Atmega32Hardware.h **** 
   4:Atmega32Hardware.h **** extern "C"
   5:Atmega32Hardware.h **** {
   6:Atmega32Hardware.h ****   #include <avr/interrupt.h>
   7:Atmega32Hardware.h ****   #include <avr/wdt.h>
   8:Atmega32Hardware.h ****   #include "avr_time.h"
   9:Atmega32Hardware.h ****   #include "avr_uart.h"
  10:Atmega32Hardware.h **** }
  11:Atmega32Hardware.h **** 
  12:Atmega32Hardware.h **** class Atmega32AHardware {
  13:Atmega32Hardware.h ****   public:
  14:Atmega32Hardware.h ****     Atmega32AHardware() {}
  15:Atmega32Hardware.h **** 
  16:Atmega32Hardware.h **** 
  17:Atmega32Hardware.h ****     // Initialize the AVR
  18:Atmega32Hardware.h ****     void init()
  19:Atmega32Hardware.h ****     {
  20:Atmega32Hardware.h ****       wdt_disable();
  21:Atmega32Hardware.h ****       avr_time_init();
  22:Atmega32Hardware.h ****       avr_uart_init();
  23:Atmega32Hardware.h ****       sei();
  24:Atmega32Hardware.h ****     }
  25:Atmega32Hardware.h **** 
  26:Atmega32Hardware.h ****     // Read a byte of data from ROS connection.
  27:Atmega32Hardware.h ****     // If no data, returns -1
  28:Atmega32Hardware.h ****     int read()
  29:Atmega32Hardware.h ****     {
  30:Atmega32Hardware.h ****       return avr_uart_receive_byte();
  31:Atmega32Hardware.h ****     }
  32:Atmega32Hardware.h **** 
  33:Atmega32Hardware.h **** 
  34:Atmega32Hardware.h ****     // Send a byte of data to ROS connection
  35:Atmega32Hardware.h ****     void write(uint8_t* data, int length)
  36:Atmega32Hardware.h ****     {
  37:Atmega32Hardware.h ****       for(int i = 0; i < length; i++)
 610               		.loc 7 37 0
 611 00bc C801      		movw r24,r16
 612 00be 8C19      		sub r24,r12
 613 00c0 9D09      		sbc r25,r13
 614 00c2 8E15      		cp r24,r14
 615 00c4 9F05      		cpc r25,r15
 616 00c6 04F4      		brge .L22
  38:Atmega32Hardware.h ****       {
  39:Atmega32Hardware.h ****         avr_uart_send_byte(data[i]);
 617               		.loc 7 39 0
 618 00c8 D801      		movw r26,r16
 619 00ca 8D91      		ld r24,X+
 620 00cc 8D01      		movw r16,r26
 621               	.LVL48:
 622 00ce 0E94 0000 		call avr_uart_send_byte
 623               	.LVL49:
 624 00d2 00C0      		rjmp .L20
 625               	.LVL50:
 626               	.L19:
 627               	.LBE91:
 628               	.LBE90:
 629               	.LBB93:
 630               	.LBB94:
 631               	.LBB95:
 632               	.LBB96:
 633               	.LBB97:
  27:./ros_lib/rosserial_msgs/Log.h ****     {
 634               		.loc 3 27 0
 635 00d4 80E0      		ldi r24,lo8(_ZTVN14rosserial_msgs3LogE+4)
 636 00d6 90E0      		ldi r25,hi8(_ZTVN14rosserial_msgs3LogE+4)
 637 00d8 9A83      		std Y+2,r25
 638 00da 8983      		std Y+1,r24
 639               	.LVL51:
 640               	.LBE97:
 641               	.LBE96:
 503:./ros_lib/ros/node_handle.h ****       return l;
 504:./ros_lib/ros/node_handle.h ****     }
 505:./ros_lib/ros/node_handle.h ****     else
 506:./ros_lib/ros/node_handle.h ****     {
 507:./ros_lib/ros/node_handle.h ****       logerror("Message from device dropped: message larger than buffer.");
 508:./ros_lib/ros/node_handle.h ****       return -1;
 509:./ros_lib/ros/node_handle.h ****     }
 510:./ros_lib/ros/node_handle.h ****   }
 511:./ros_lib/ros/node_handle.h **** 
 512:./ros_lib/ros/node_handle.h ****   /********************************************************************
 513:./ros_lib/ros/node_handle.h ****    * Logging
 514:./ros_lib/ros/node_handle.h ****    */
 515:./ros_lib/ros/node_handle.h **** 
 516:./ros_lib/ros/node_handle.h **** protected:
 517:./ros_lib/ros/node_handle.h ****   void log(char byte, const char * msg)
 518:./ros_lib/ros/node_handle.h ****   {
 519:./ros_lib/ros/node_handle.h ****     rosserial_msgs::Log l;
 520:./ros_lib/ros/node_handle.h ****     l.level = byte;
 642               		.loc 6 520 0
 643 00dc 83E0      		ldi r24,lo8(3)
 644 00de 8B83      		std Y+3,r24
 521:./ros_lib/ros/node_handle.h ****     l.msg = (char*)msg;
 645               		.loc 6 521 0
 646 00e0 80E0      		ldi r24,lo8(.LC9)
 647 00e2 90E0      		ldi r25,hi8(.LC9)
 648 00e4 9D83      		std Y+5,r25
 649 00e6 8C83      		std Y+4,r24
 522:./ros_lib/ros/node_handle.h ****     publish(rosserial_msgs::TopicInfo::ID_LOG, &l);
 650               		.loc 6 522 0
 651 00e8 D801      		movw r26,r16
 652 00ea ED91      		ld r30,X+
 653 00ec FC91      		ld r31,X
 654 00ee 0190      		ld __tmp_reg__,Z+
 655 00f0 F081      		ld r31,Z
 656 00f2 E02D      		mov r30,__tmp_reg__
 657 00f4 AE01      		movw r20,r28
 658               	.LVL52:
 659 00f6 4F5F      		subi r20,-1
 660 00f8 5F4F      		sbci r21,-1
 661 00fa 67E0      		ldi r22,lo8(7)
 662 00fc 70E0      		ldi r23,0
 663 00fe C801      		movw r24,r16
 664 0100 0995      		icall
 665               	.LVL53:
 666               	.LBE95:
 667               	.LBE94:
 668               	.LBE93:
 508:./ros_lib/ros/node_handle.h ****     }
 669               		.loc 6 508 0
 670 0102 8FEF      		ldi r24,lo8(-1)
 671 0104 9FEF      		ldi r25,lo8(-1)
 672 0106 00C0      		rjmp .L16
 673               	.LVL54:
 674               	.L21:
 479:./ros_lib/ros/node_handle.h **** 
 675               		.loc 6 479 0
 676 0108 80E0      		ldi r24,0
 677               	.LVL55:
 678 010a 90E0      		ldi r25,0
 679 010c 00C0      		rjmp .L16
 680               	.LVL56:
 681               	.L22:
 682               	.LBB98:
 683               	.LBB92:
  37:Atmega32Hardware.h ****       {
 684               		.loc 7 37 0
 685 010e C701      		movw r24,r14
 686               	.LVL57:
 687               	.L16:
 688               	/* epilogue start */
 689               	.LBE92:
 690               	.LBE98:
 510:./ros_lib/ros/node_handle.h **** 
 691               		.loc 6 510 0
 692 0110 0F90      		pop __tmp_reg__
 693 0112 0F90      		pop __tmp_reg__
 694 0114 0F90      		pop __tmp_reg__
 695 0116 0F90      		pop __tmp_reg__
 696 0118 0F90      		pop __tmp_reg__
 697 011a DF91      		pop r29
 698 011c CF91      		pop r28
 699 011e 1F91      		pop r17
 700 0120 0F91      		pop r16
 701 0122 FF90      		pop r15
 702 0124 EF90      		pop r14
 703 0126 DF90      		pop r13
 704 0128 CF90      		pop r12
 705 012a 0895      		ret
 706               		.cfi_endproc
 707               	.LFE159:
 709               		.text
 710               	.global	__cxa_pure_virtual
 712               	__cxa_pure_virtual:
 713               	.LFB143:
 714               		.file 8 "avr_chatter.cpp"
   1:avr_chatter.cpp **** #include "ros.h"
   2:avr_chatter.cpp **** #include "std_msgs/String.h"
   3:avr_chatter.cpp **** 
   4:avr_chatter.cpp **** // Include C headers (ie, non C++ headers) in this block
   5:avr_chatter.cpp **** extern "C"
   6:avr_chatter.cpp **** {
   7:avr_chatter.cpp ****   #include <util/delay.h>
   8:avr_chatter.cpp **** }
   9:avr_chatter.cpp **** 
  10:avr_chatter.cpp **** // Needed for AVR to use virtual functions
  11:avr_chatter.cpp **** extern "C" void __cxa_pure_virtual(void);
  12:avr_chatter.cpp **** void __cxa_pure_virtual(void) {}
 715               		.loc 8 12 0
 716               		.cfi_startproc
 717               	/* prologue: function */
 718               	/* frame size = 0 */
 719               	/* stack size = 0 */
 720               	.L__stack_usage = 0
 721 0000 0895      		ret
 722               		.cfi_endproc
 723               	.LFE143:
 725               		.section	.text._ZN3ros3Msg8varToArrIPhmEEvT_T0_,"axG",@progbits,_ZN3ros3Msg8varToArrIPhmEEvT_T0_,c
 726               		.weak	_ZN3ros3Msg8varToArrIPhmEEvT_T0_
 728               	_ZN3ros3Msg8varToArrIPhmEEvT_T0_:
 729               	.LFB151:
 730               		.file 9 "./ros_lib/ros/msg.h"
   1:./ros_lib/ros/msg.h **** /*
   2:./ros_lib/ros/msg.h ****  * Software License Agreement (BSD License)
   3:./ros_lib/ros/msg.h ****  *
   4:./ros_lib/ros/msg.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./ros_lib/ros/msg.h ****  * All rights reserved.
   6:./ros_lib/ros/msg.h ****  *
   7:./ros_lib/ros/msg.h ****  * Redistribution and use in source and binary forms, with or without
   8:./ros_lib/ros/msg.h ****  * modification, are permitted provided that the following conditions
   9:./ros_lib/ros/msg.h ****  * are met:
  10:./ros_lib/ros/msg.h ****  *
  11:./ros_lib/ros/msg.h ****  *  * Redistributions of source code must retain the above copyright
  12:./ros_lib/ros/msg.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./ros_lib/ros/msg.h ****  *  * Redistributions in binary form must reproduce the above
  14:./ros_lib/ros/msg.h ****  *    copyright notice, this list of conditions and the following
  15:./ros_lib/ros/msg.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./ros_lib/ros/msg.h ****  *    with the distribution.
  17:./ros_lib/ros/msg.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./ros_lib/ros/msg.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./ros_lib/ros/msg.h ****  *    from this software without specific prior written permission.
  20:./ros_lib/ros/msg.h ****  *
  21:./ros_lib/ros/msg.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./ros_lib/ros/msg.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./ros_lib/ros/msg.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./ros_lib/ros/msg.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./ros_lib/ros/msg.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./ros_lib/ros/msg.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./ros_lib/ros/msg.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./ros_lib/ros/msg.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./ros_lib/ros/msg.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./ros_lib/ros/msg.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./ros_lib/ros/msg.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./ros_lib/ros/msg.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./ros_lib/ros/msg.h ****  */
  34:./ros_lib/ros/msg.h **** 
  35:./ros_lib/ros/msg.h **** #ifndef _ROS_MSG_H_
  36:./ros_lib/ros/msg.h **** #define _ROS_MSG_H_
  37:./ros_lib/ros/msg.h **** 
  38:./ros_lib/ros/msg.h **** #include <stdint.h>
  39:./ros_lib/ros/msg.h **** #include <stddef.h>
  40:./ros_lib/ros/msg.h **** #include <string.h>
  41:./ros_lib/ros/msg.h **** 
  42:./ros_lib/ros/msg.h **** namespace ros
  43:./ros_lib/ros/msg.h **** {
  44:./ros_lib/ros/msg.h **** 
  45:./ros_lib/ros/msg.h **** /* Base Message Type */
  46:./ros_lib/ros/msg.h **** class Msg
  47:./ros_lib/ros/msg.h **** {
  48:./ros_lib/ros/msg.h **** public:
  49:./ros_lib/ros/msg.h ****   virtual int serialize(unsigned char *outbuffer) const = 0;
  50:./ros_lib/ros/msg.h ****   virtual int deserialize(unsigned char *data) = 0;
  51:./ros_lib/ros/msg.h ****   virtual const char * getType() = 0;
  52:./ros_lib/ros/msg.h ****   virtual const char * getMD5() = 0;
  53:./ros_lib/ros/msg.h **** 
  54:./ros_lib/ros/msg.h ****   /**
  55:./ros_lib/ros/msg.h ****    * @brief This tricky function handles promoting a 32bit float to a 64bit
  56:./ros_lib/ros/msg.h ****    *        double, so that AVR can publish messages containing float64
  57:./ros_lib/ros/msg.h ****    *        fields, despite AVR having no native support for double.
  58:./ros_lib/ros/msg.h ****    *
  59:./ros_lib/ros/msg.h ****    * @param[out] outbuffer pointer for buffer to serialize to.
  60:./ros_lib/ros/msg.h ****    * @param[in] f value to serialize.
  61:./ros_lib/ros/msg.h ****    *
  62:./ros_lib/ros/msg.h ****    * @return number of bytes to advance the buffer pointer.
  63:./ros_lib/ros/msg.h ****    *
  64:./ros_lib/ros/msg.h ****    */
  65:./ros_lib/ros/msg.h ****   static int serializeAvrFloat64(unsigned char* outbuffer, const float f)
  66:./ros_lib/ros/msg.h ****   {
  67:./ros_lib/ros/msg.h ****     int32_t val;
  68:./ros_lib/ros/msg.h ****     memcpy(&val, &f, sizeof(val));
  69:./ros_lib/ros/msg.h **** 
  70:./ros_lib/ros/msg.h ****     int16_t exp = ((val >> 23) & 255);
  71:./ros_lib/ros/msg.h ****     uint32_t mantissa = val & 0x7FFFFF;
  72:./ros_lib/ros/msg.h **** 
  73:./ros_lib/ros/msg.h ****     if (exp == 255)
  74:./ros_lib/ros/msg.h ****     {
  75:./ros_lib/ros/msg.h ****       exp = 2047; // Special value for NaN, infinity etc.
  76:./ros_lib/ros/msg.h ****     }
  77:./ros_lib/ros/msg.h ****     else if (exp != 0)
  78:./ros_lib/ros/msg.h ****     {
  79:./ros_lib/ros/msg.h ****       exp += 1023 - 127; // Normal case
  80:./ros_lib/ros/msg.h ****     }
  81:./ros_lib/ros/msg.h ****     else if (!mantissa)
  82:./ros_lib/ros/msg.h ****     {
  83:./ros_lib/ros/msg.h ****       exp = 0; // Zero
  84:./ros_lib/ros/msg.h ****     }
  85:./ros_lib/ros/msg.h ****     else
  86:./ros_lib/ros/msg.h ****     {
  87:./ros_lib/ros/msg.h ****       // Denormalized value in float, will fit as normalized value in double
  88:./ros_lib/ros/msg.h ****       exp += 1023 - 127;
  89:./ros_lib/ros/msg.h ****       mantissa <<= 1;
  90:./ros_lib/ros/msg.h ****       while (!(mantissa & 0x800000))
  91:./ros_lib/ros/msg.h ****       {
  92:./ros_lib/ros/msg.h ****           mantissa <<= 1;
  93:./ros_lib/ros/msg.h ****           exp--;
  94:./ros_lib/ros/msg.h ****       }
  95:./ros_lib/ros/msg.h ****       mantissa &= 0x7FFFFF;
  96:./ros_lib/ros/msg.h ****     }
  97:./ros_lib/ros/msg.h **** 
  98:./ros_lib/ros/msg.h ****     *(outbuffer++) = 0;
  99:./ros_lib/ros/msg.h ****     *(outbuffer++) = 0;
 100:./ros_lib/ros/msg.h ****     *(outbuffer++) = 0;
 101:./ros_lib/ros/msg.h ****     *(outbuffer++) = (mantissa << 5) & 0xff;
 102:./ros_lib/ros/msg.h ****     *(outbuffer++) = (mantissa >> 3) & 0xff;
 103:./ros_lib/ros/msg.h ****     *(outbuffer++) = (mantissa >> 11) & 0xff;
 104:./ros_lib/ros/msg.h ****     *(outbuffer++) = ((exp << 4) & 0xF0) | ((mantissa >> 19) & 0x0F);
 105:./ros_lib/ros/msg.h ****     *(outbuffer++) = (exp >> 4) & 0x7F;
 106:./ros_lib/ros/msg.h **** 
 107:./ros_lib/ros/msg.h ****     // Mark negative bit as necessary.
 108:./ros_lib/ros/msg.h ****     if (f < 0)
 109:./ros_lib/ros/msg.h ****     {
 110:./ros_lib/ros/msg.h ****       *(outbuffer - 1) |= 0x80;
 111:./ros_lib/ros/msg.h ****     }
 112:./ros_lib/ros/msg.h **** 
 113:./ros_lib/ros/msg.h ****     return 8;
 114:./ros_lib/ros/msg.h ****   }
 115:./ros_lib/ros/msg.h **** 
 116:./ros_lib/ros/msg.h ****   /**
 117:./ros_lib/ros/msg.h ****    * @brief This tricky function handles demoting a 64bit double to a
 118:./ros_lib/ros/msg.h ****    *        32bit float, so that AVR can understand messages containing
 119:./ros_lib/ros/msg.h ****    *        float64 fields, despite AVR having no native support for double.
 120:./ros_lib/ros/msg.h ****    *
 121:./ros_lib/ros/msg.h ****    * @param[in] inbuffer pointer for buffer to deserialize from.
 122:./ros_lib/ros/msg.h ****    * @param[out] f pointer to place the deserialized value in.
 123:./ros_lib/ros/msg.h ****    *
 124:./ros_lib/ros/msg.h ****    * @return number of bytes to advance the buffer pointer.
 125:./ros_lib/ros/msg.h ****    */
 126:./ros_lib/ros/msg.h ****   static int deserializeAvrFloat64(const unsigned char* inbuffer, float* f)
 127:./ros_lib/ros/msg.h ****   {
 128:./ros_lib/ros/msg.h ****     int16_t exp;
 129:./ros_lib/ros/msg.h ****     uint32_t mantissa;
 130:./ros_lib/ros/msg.h **** 
 131:./ros_lib/ros/msg.h ****     // Skip lowest 24 bits
 132:./ros_lib/ros/msg.h ****     inbuffer += 3;
 133:./ros_lib/ros/msg.h **** 
 134:./ros_lib/ros/msg.h ****     // Copy truncated mantissa.
 135:./ros_lib/ros/msg.h ****     mantissa = ((uint32_t)(*(inbuffer++)) >> 4 & 0x0F);
 136:./ros_lib/ros/msg.h ****     mantissa |= ((uint32_t)(*(inbuffer++)) & 0xff) << 4;
 137:./ros_lib/ros/msg.h ****     mantissa |= ((uint32_t)(*(inbuffer++)) & 0xff) << 12;
 138:./ros_lib/ros/msg.h ****     mantissa |= ((uint32_t)(*inbuffer) & 0x0f) << 20;
 139:./ros_lib/ros/msg.h **** 
 140:./ros_lib/ros/msg.h ****     // Copy exponent.
 141:./ros_lib/ros/msg.h ****     exp = ((uint32_t)(*(inbuffer++)) & 0xf0) >> 4;
 142:./ros_lib/ros/msg.h ****     exp |= ((uint32_t)(*inbuffer) & 0x7f) << 4;
 143:./ros_lib/ros/msg.h **** 
 144:./ros_lib/ros/msg.h ****     if (exp == 2047)
 145:./ros_lib/ros/msg.h ****     {
 146:./ros_lib/ros/msg.h ****       exp = 255; // NaN, infinity etc.
 147:./ros_lib/ros/msg.h ****     }
 148:./ros_lib/ros/msg.h ****     else if (exp - 1023 > 127)
 149:./ros_lib/ros/msg.h ****     {
 150:./ros_lib/ros/msg.h ****       exp = 255;
 151:./ros_lib/ros/msg.h ****       mantissa = 0; // Too large for float, convert to infinity
 152:./ros_lib/ros/msg.h ****     }
 153:./ros_lib/ros/msg.h ****     else if (exp - 1023 >= -126)
 154:./ros_lib/ros/msg.h ****     {
 155:./ros_lib/ros/msg.h ****       exp -= 1023 - 127; // Normal case
 156:./ros_lib/ros/msg.h ****     }
 157:./ros_lib/ros/msg.h ****     else if (exp - 1023 < -150)
 158:./ros_lib/ros/msg.h ****     {
 159:./ros_lib/ros/msg.h ****       exp = 0; // Too small or zero
 160:./ros_lib/ros/msg.h ****     }
 161:./ros_lib/ros/msg.h ****     else
 162:./ros_lib/ros/msg.h ****     {
 163:./ros_lib/ros/msg.h ****       // Have to convert to denormalized representation for float
 164:./ros_lib/ros/msg.h ****       mantissa |= 0x1000000;
 165:./ros_lib/ros/msg.h ****       mantissa >>= ((-126 + 1023) - exp);
 166:./ros_lib/ros/msg.h ****       exp = 0;
 167:./ros_lib/ros/msg.h ****     }
 168:./ros_lib/ros/msg.h **** 
 169:./ros_lib/ros/msg.h ****     // Round off mantissa
 170:./ros_lib/ros/msg.h ****     if (mantissa != 0xFFFFFF)
 171:./ros_lib/ros/msg.h ****       mantissa += 1;
 172:./ros_lib/ros/msg.h **** 
 173:./ros_lib/ros/msg.h ****     mantissa >>= 1;
 174:./ros_lib/ros/msg.h **** 
 175:./ros_lib/ros/msg.h ****     // Put mantissa and exponent into place
 176:./ros_lib/ros/msg.h ****     uint32_t val = mantissa;
 177:./ros_lib/ros/msg.h ****     val |= static_cast<uint32_t>(exp) << 23;
 178:./ros_lib/ros/msg.h **** 
 179:./ros_lib/ros/msg.h ****     // Copy negative sign.
 180:./ros_lib/ros/msg.h ****     val |= (static_cast<uint32_t>(*(inbuffer++)) & 0x80) << 24;
 181:./ros_lib/ros/msg.h **** 
 182:./ros_lib/ros/msg.h ****     memcpy(f, &val, sizeof(val));
 183:./ros_lib/ros/msg.h ****     return 8;
 184:./ros_lib/ros/msg.h ****   }
 185:./ros_lib/ros/msg.h **** 
 186:./ros_lib/ros/msg.h ****   // Copy data from variable into a byte array
 187:./ros_lib/ros/msg.h ****   template<typename A, typename V>
 188:./ros_lib/ros/msg.h ****   static void varToArr(A arr, const V var)
 731               		.loc 9 188 0
 732               		.cfi_startproc
 733               	.LVL58:
 734               		.loc 9 188 0
 735 0000 CF92      		push r12
 736               	.LCFI10:
 737               		.cfi_def_cfa_offset 3
 738               		.cfi_offset 12, -2
 739 0002 DF92      		push r13
 740               	.LCFI11:
 741               		.cfi_def_cfa_offset 4
 742               		.cfi_offset 13, -3
 743 0004 EF92      		push r14
 744               	.LCFI12:
 745               		.cfi_def_cfa_offset 5
 746               		.cfi_offset 14, -4
 747 0006 FF92      		push r15
 748               	.LCFI13:
 749               		.cfi_def_cfa_offset 6
 750               		.cfi_offset 15, -5
 751               	/* prologue: function */
 752               	/* frame size = 0 */
 753               	/* stack size = 4 */
 754               	.L__stack_usage = 4
 755               	.LVL59:
 756               		.loc 9 188 0
 757 0008 20E0      		ldi r18,0
 758 000a 30E0      		ldi r19,0
 759               	.LVL60:
 760               	.L26:
 761               	.LBB99:
 189:./ros_lib/ros/msg.h ****   {
 190:./ros_lib/ros/msg.h ****     for (size_t i = 0; i < sizeof(V); i++)
 191:./ros_lib/ros/msg.h ****       arr[i] = (var >> (8 * i));
 762               		.loc 9 191 0 discriminator 2
 763 000c 6A01      		movw r12,r20
 764 000e 7B01      		movw r14,r22
 765 0010 022E      		mov r0,r18
 766 0012 00C0      		rjmp 2f
 767               		1:
 768 0014 F694      		lsr r15
 769 0016 E794      		ror r14
 770 0018 D794      		ror r13
 771 001a C794      		ror r12
 772               		2:
 773 001c 0A94      		dec r0
 774 001e 02F4      		brpl 1b
 775 0020 FC01      		movw r30,r24
 776 0022 C192      		st Z+,r12
 777 0024 CF01      		movw r24,r30
 778               	.LVL61:
 779 0026 285F      		subi r18,-8
 780 0028 3F4F      		sbci r19,-1
 190:./ros_lib/ros/msg.h ****       arr[i] = (var >> (8 * i));
 781               		.loc 9 190 0 discriminator 2
 782 002a 2032      		cpi r18,32
 783 002c 3105      		cpc r19,__zero_reg__
 784 002e 01F4      		brne .L26
 785               	/* epilogue start */
 786               	.LBE99:
 192:./ros_lib/ros/msg.h ****   }
 787               		.loc 9 192 0
 788 0030 FF90      		pop r15
 789 0032 EF90      		pop r14
 790 0034 DF90      		pop r13
 791 0036 CF90      		pop r12
 792 0038 0895      		ret
 793               		.cfi_endproc
 794               	.LFE151:
 796               		.section	.text._ZNK8std_msgs6String9serializeEPh,"axG",@progbits,_ZNK8std_msgs6String9serializeEPh
 797               		.weak	_ZNK8std_msgs6String9serializeEPh
 799               	_ZNK8std_msgs6String9serializeEPh:
 800               	.LFB135:
  23:./ros_lib/std_msgs/String.h ****     {
 801               		.loc 5 23 0
 802               		.cfi_startproc
 803               	.LVL62:
 804 0000 EF92      		push r14
 805               	.LCFI14:
 806               		.cfi_def_cfa_offset 3
 807               		.cfi_offset 14, -2
 808 0002 FF92      		push r15
 809               	.LCFI15:
 810               		.cfi_def_cfa_offset 4
 811               		.cfi_offset 15, -3
 812 0004 0F93      		push r16
 813               	.LCFI16:
 814               		.cfi_def_cfa_offset 5
 815               		.cfi_offset 16, -4
 816 0006 1F93      		push r17
 817               	.LCFI17:
 818               		.cfi_def_cfa_offset 6
 819               		.cfi_offset 17, -5
 820 0008 CF93      		push r28
 821               	.LCFI18:
 822               		.cfi_def_cfa_offset 7
 823               		.cfi_offset 28, -6
 824 000a DF93      		push r29
 825               	.LCFI19:
 826               		.cfi_def_cfa_offset 8
 827               		.cfi_offset 29, -7
 828               	/* prologue: function */
 829               	/* frame size = 0 */
 830               	/* stack size = 6 */
 831               	.L__stack_usage = 6
 832 000c 7C01      		movw r14,r24
 833 000e 8B01      		movw r16,r22
 834               	.LVL63:
  26:./ros_lib/std_msgs/String.h ****       varToArr(outbuffer + offset, length_data);
 835               		.loc 5 26 0
 836 0010 DC01      		movw r26,r24
 837 0012 1296      		adiw r26,2
 838 0014 ED91      		ld r30,X+
 839 0016 FC91      		ld r31,X
 840 0018 1397      		sbiw r26,2+1
 841 001a EF01      		movw r28,r30
 842               		0:
 843 001c 0990      		ld __tmp_reg__,Y+
 844 001e 0020      		tst __tmp_reg__
 845 0020 01F4      		brne 0b
 846 0022 2197      		sbiw r28,1
 847 0024 CE1B      		sub r28,r30
 848 0026 DF0B      		sbc r29,r31
 849               	.LVL64:
  27:./ros_lib/std_msgs/String.h ****       offset += 4;
 850               		.loc 5 27 0
 851 0028 AE01      		movw r20,r28
 852 002a 60E0      		ldi r22,0
 853 002c 70E0      		ldi r23,0
 854               	.LVL65:
 855 002e C801      		movw r24,r16
 856               	.LVL66:
 857 0030 0E94 0000 		call _ZN3ros3Msg8varToArrIPhmEEvT_T0_
 858               	.LVL67:
  29:./ros_lib/std_msgs/String.h ****       offset += length_data;
 859               		.loc 5 29 0
 860 0034 F701      		movw r30,r14
 861 0036 6281      		ldd r22,Z+2
 862 0038 7381      		ldd r23,Z+3
 863 003a AE01      		movw r20,r28
 864 003c C801      		movw r24,r16
 865 003e 0496      		adiw r24,4
 866 0040 0E94 0000 		call memcpy
 867               	.LVL68:
  32:./ros_lib/std_msgs/String.h **** 
 868               		.loc 5 32 0
 869 0044 CE01      		movw r24,r28
 870 0046 0496      		adiw r24,4
 871               	.LVL69:
 872               	/* epilogue start */
 873 0048 DF91      		pop r29
 874 004a CF91      		pop r28
 875               	.LVL70:
 876 004c 1F91      		pop r17
 877 004e 0F91      		pop r16
 878               	.LVL71:
 879 0050 FF90      		pop r15
 880 0052 EF90      		pop r14
 881               	.LVL72:
 882 0054 0895      		ret
 883               		.cfi_endproc
 884               	.LFE135:
 886               		.section	.text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh,"axG",@progbits,_ZNK14rosse
 887               		.weak	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
 889               	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:
 890               	.LFB61:
  78:./ros_lib/rosserial_msgs/RequestParam.h ****     {
 891               		.loc 4 78 0
 892               		.cfi_startproc
 893               	.LVL73:
 894 0000 4F92      		push r4
 895               	.LCFI20:
 896               		.cfi_def_cfa_offset 3
 897               		.cfi_offset 4, -2
 898 0002 5F92      		push r5
 899               	.LCFI21:
 900               		.cfi_def_cfa_offset 4
 901               		.cfi_offset 5, -3
 902 0004 6F92      		push r6
 903               	.LCFI22:
 904               		.cfi_def_cfa_offset 5
 905               		.cfi_offset 6, -4
 906 0006 7F92      		push r7
 907               	.LCFI23:
 908               		.cfi_def_cfa_offset 6
 909               		.cfi_offset 7, -5
 910 0008 AF92      		push r10
 911               	.LCFI24:
 912               		.cfi_def_cfa_offset 7
 913               		.cfi_offset 10, -6
 914 000a BF92      		push r11
 915               	.LCFI25:
 916               		.cfi_def_cfa_offset 8
 917               		.cfi_offset 11, -7
 918 000c CF92      		push r12
 919               	.LCFI26:
 920               		.cfi_def_cfa_offset 9
 921               		.cfi_offset 12, -8
 922 000e DF92      		push r13
 923               	.LCFI27:
 924               		.cfi_def_cfa_offset 10
 925               		.cfi_offset 13, -9
 926 0010 EF92      		push r14
 927               	.LCFI28:
 928               		.cfi_def_cfa_offset 11
 929               		.cfi_offset 14, -10
 930 0012 FF92      		push r15
 931               	.LCFI29:
 932               		.cfi_def_cfa_offset 12
 933               		.cfi_offset 15, -11
 934 0014 0F93      		push r16
 935               	.LCFI30:
 936               		.cfi_def_cfa_offset 13
 937               		.cfi_offset 16, -12
 938 0016 1F93      		push r17
 939               	.LCFI31:
 940               		.cfi_def_cfa_offset 14
 941               		.cfi_offset 17, -13
 942 0018 CF93      		push r28
 943               	.LCFI32:
 944               		.cfi_def_cfa_offset 15
 945               		.cfi_offset 28, -14
 946 001a DF93      		push r29
 947               	.LCFI33:
 948               		.cfi_def_cfa_offset 16
 949               		.cfi_offset 29, -15
 950               	/* prologue: function */
 951               	/* frame size = 0 */
 952               	/* stack size = 14 */
 953               	.L__stack_usage = 14
 954 001c EC01      		movw r28,r24
 955 001e 8B01      		movw r16,r22
 956               	.LVL74:
  81:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (this->ints_length >> (8 * 1)) & 0xFF;
 957               		.loc 4 81 0
 958 0020 8A81      		ldd r24,Y+2
 959               	.LVL75:
 960 0022 FB01      		movw r30,r22
 961 0024 8083      		st Z,r24
  82:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (this->ints_length >> (8 * 2)) & 0xFF;
 962               		.loc 4 82 0
 963 0026 8B81      		ldd r24,Y+3
 964 0028 8183      		std Z+1,r24
  83:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (this->ints_length >> (8 * 3)) & 0xFF;
 965               		.loc 4 83 0
 966 002a 8C81      		ldd r24,Y+4
 967 002c 8283      		std Z+2,r24
  84:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints_length);
 968               		.loc 4 84 0
 969 002e 8D81      		ldd r24,Y+5
 970 0030 8383      		std Z+3,r24
 971               	.LVL76:
 972 0032 DB01      		movw r26,r22
 973               	.LBB100:
  86:./ros_lib/rosserial_msgs/RequestParam.h ****       union {
 974               		.loc 4 86 0
 975 0034 40E0      		ldi r20,0
 976 0036 50E0      		ldi r21,0
 977 0038 BA01      		movw r22,r20
 978               	.LBE100:
  85:./ros_lib/rosserial_msgs/RequestParam.h ****       for( uint32_t i = 0; i < ints_length; i++){
 979               		.loc 4 85 0
 980 003a E4E0      		ldi r30,lo8(4)
 981 003c F0E0      		ldi r31,0
 982               	.LVL77:
 983               	.L31:
 984 003e 1496      		adiw r26,4
 985               	.LBB102:
  86:./ros_lib/rosserial_msgs/RequestParam.h ****       union {
 986               		.loc 4 86 0 discriminator 3
 987 0040 CA80      		ldd r12,Y+2
 988 0042 DB80      		ldd r13,Y+3
 989 0044 EC80      		ldd r14,Y+4
 990 0046 FD80      		ldd r15,Y+5
 991 0048 CF01      		movw r24,r30
 992 004a 0496      		adiw r24,4
 993 004c 4C15      		cp r20,r12
 994 004e 5D05      		cpc r21,r13
 995 0050 6E05      		cpc r22,r14
 996 0052 7F05      		cpc r23,r15
 997 0054 00F4      		brsh .L30
 998               	.LBB101:
  91:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_intsi.base >> (8 * 0)) & 0xFF;
 999               		.loc 4 91 0 discriminator 2
 1000 0056 2A85      		ldd r18,Y+10
 1001 0058 3B85      		ldd r19,Y+11
 1002 005a E20F      		add r30,r18
 1003 005c F31F      		adc r31,r19
 1004 005e 3497      		sbiw r30,4
 1005 0060 D080      		ld r13,Z
 1006               	.LVL78:
  92:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_intsi.base >> (8 * 1)) & 0xFF;
 1007               		.loc 4 92 0 discriminator 2
 1008 0062 F180      		ldd r15,Z+1
 1009 0064 3281      		ldd r19,Z+2
 1010 0066 2381      		ldd r18,Z+3
 1011 0068 DC92      		st X,r13
 1012               	.LVL79:
  93:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
 1013               		.loc 4 93 0 discriminator 2
 1014 006a 1196      		adiw r26,1
 1015 006c FC92      		st X,r15
 1016 006e 1197      		sbiw r26,1
  94:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
 1017               		.loc 4 94 0 discriminator 2
 1018 0070 1296      		adiw r26,2
 1019 0072 3C93      		st X,r19
 1020 0074 1297      		sbiw r26,2
  95:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
 1021               		.loc 4 95 0 discriminator 2
 1022 0076 1396      		adiw r26,3
 1023 0078 2C93      		st X,r18
 1024 007a 1397      		sbiw r26,3
 1025               	.LVL80:
 1026 007c FC01      		movw r30,r24
 1027               	.LVL81:
 1028               	.LBE101:
  86:./ros_lib/rosserial_msgs/RequestParam.h ****       union {
 1029               		.loc 4 86 0 discriminator 2
 1030 007e 4F5F      		subi r20,-1
 1031 0080 5F4F      		sbci r21,-1
 1032 0082 6F4F      		sbci r22,-1
 1033 0084 7F4F      		sbci r23,-1
 1034               	.LVL82:
 1035 0086 00C0      		rjmp .L31
 1036               	.LVL83:
 1037               	.L30:
 1038               	.LBE102:
  98:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (this->floats_length >> (8 * 1)) & 0xFF;
 1039               		.loc 4 98 0
 1040 0088 5F01      		movw r10,r30
 1041 008a A00E      		add r10,r16
 1042 008c B11E      		adc r11,r17
 1043 008e 2C85      		ldd r18,Y+12
 1044 0090 F501      		movw r30,r10
 1045 0092 2083      		st Z,r18
  99:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (this->floats_length >> (8 * 2)) & 0xFF;
 1046               		.loc 4 99 0
 1047 0094 2D85      		ldd r18,Y+13
 1048 0096 2183      		std Z+1,r18
 100:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (this->floats_length >> (8 * 3)) & 0xFF;
 1049               		.loc 4 100 0
 1050 0098 2E85      		ldd r18,Y+14
 1051 009a 2283      		std Z+2,r18
 101:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->floats_length);
 1052               		.loc 4 101 0
 1053 009c 2F85      		ldd r18,Y+15
 1054 009e 2383      		std Z+3,r18
 1055               	.LVL84:
 1056 00a0 D501      		movw r26,r10
 1057               	.LBB103:
 103:./ros_lib/rosserial_msgs/RequestParam.h ****       union {
 1058               		.loc 4 103 0
 1059 00a2 40E0      		ldi r20,0
 1060 00a4 50E0      		ldi r21,0
 1061 00a6 BA01      		movw r22,r20
 1062               	.LVL85:
 1063               	.L33:
 103:./ros_lib/rosserial_msgs/RequestParam.h ****       union {
 1064               		.loc 4 103 0 is_stmt 0 discriminator 3
 1065 00a8 CC84      		ldd r12,Y+12
 1066 00aa DD84      		ldd r13,Y+13
 1067 00ac EE84      		ldd r14,Y+14
 1068 00ae FF84      		ldd r15,Y+15
 1069 00b0 9C01      		movw r18,r24
 1070 00b2 2C5F      		subi r18,-4
 1071 00b4 3F4F      		sbci r19,-1
 1072 00b6 4C15      		cp r20,r12
 1073 00b8 5D05      		cpc r21,r13
 1074 00ba 6E05      		cpc r22,r14
 1075 00bc 7F05      		cpc r23,r15
 1076 00be 00F4      		brsh .L32
 1077               	.LVL86:
 1078               	.LBB104:
 108:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_floatsi.base >> (8 * 0)) & 0xFF;
 1079               		.loc 4 108 0 is_stmt 1 discriminator 2
 1080 00c0 CD01      		movw r24,r26
 1081               	.LVL87:
 1082 00c2 8A19      		sub r24,r10
 1083 00c4 9B09      		sbc r25,r11
 1084 00c6 EC88      		ldd r14,Y+20
 1085 00c8 FD88      		ldd r15,Y+21
 1086 00ca 8E0D      		add r24,r14
 1087 00cc 9F1D      		adc r25,r15
 109:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
 1088               		.loc 4 109 0 discriminator 2
 1089 00ce FC01      		movw r30,r24
 1090 00d0 D080      		ld r13,Z
 1091 00d2 E180      		ldd r14,Z+1
 1092 00d4 F280      		ldd r15,Z+2
 1093 00d6 8381      		ldd r24,Z+3
 1094 00d8 1496      		adiw r26,4
 1095 00da DC92      		st X,r13
 1096 00dc 1497      		sbiw r26,4
 110:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
 1097               		.loc 4 110 0 discriminator 2
 1098 00de 1596      		adiw r26,5
 1099 00e0 EC92      		st X,r14
 1100 00e2 1597      		sbiw r26,5
 111:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
 1101               		.loc 4 111 0 discriminator 2
 1102 00e4 1696      		adiw r26,6
 1103 00e6 FC92      		st X,r15
 1104 00e8 1697      		sbiw r26,6
 112:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->floats[i]);
 1105               		.loc 4 112 0 discriminator 2
 1106 00ea 1796      		adiw r26,7
 1107 00ec 8C93      		st X,r24
 1108 00ee 1797      		sbiw r26,7
 1109 00f0 C901      		movw r24,r18
 1110               	.LVL88:
 1111               	.LBE104:
 103:./ros_lib/rosserial_msgs/RequestParam.h ****       union {
 1112               		.loc 4 103 0 discriminator 2
 1113 00f2 4F5F      		subi r20,-1
 1114 00f4 5F4F      		sbci r21,-1
 1115 00f6 6F4F      		sbci r22,-1
 1116 00f8 7F4F      		sbci r23,-1
 1117               	.LVL89:
 1118 00fa 1496      		adiw r26,4
 1119 00fc 00C0      		rjmp .L33
 1120               	.LVL90:
 1121               	.L32:
 1122               	.LBE103:
 115:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (this->strings_length >> (8 * 1)) & 0xFF;
 1123               		.loc 4 115 0
 1124 00fe F801      		movw r30,r16
 1125 0100 E80F      		add r30,r24
 1126 0102 F91F      		adc r31,r25
 1127 0104 8E89      		ldd r24,Y+22
 1128               	.LVL91:
 1129 0106 8083      		st Z,r24
 116:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (this->strings_length >> (8 * 2)) & 0xFF;
 1130               		.loc 4 116 0
 1131 0108 8F89      		ldd r24,Y+23
 1132 010a 8183      		std Z+1,r24
 117:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (this->strings_length >> (8 * 3)) & 0xFF;
 1133               		.loc 4 117 0
 1134 010c 888D      		ldd r24,Y+24
 1135 010e 8283      		std Z+2,r24
 118:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->strings_length);
 1136               		.loc 4 118 0
 1137 0110 898D      		ldd r24,Y+25
 1138 0112 8383      		std Z+3,r24
 119:./ros_lib/rosserial_msgs/RequestParam.h ****       for( uint32_t i = 0; i < strings_length; i++){
 1139               		.loc 4 119 0
 1140 0114 7901      		movw r14,r18
 1141               	.LVL92:
 1142 0116 A12C      		mov r10,__zero_reg__
 1143 0118 B12C      		mov r11,__zero_reg__
 1144               	.LBB105:
 120:./ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 1145               		.loc 4 120 0
 1146 011a 412C      		mov r4,__zero_reg__
 1147 011c 512C      		mov r5,__zero_reg__
 1148 011e 3201      		movw r6,r4
 1149               	.LVL93:
 1150               	.L35:
 120:./ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 1151               		.loc 4 120 0 is_stmt 0 discriminator 3
 1152 0120 8E89      		ldd r24,Y+22
 1153 0122 9F89      		ldd r25,Y+23
 1154 0124 A88D      		ldd r26,Y+24
 1155 0126 B98D      		ldd r27,Y+25
 1156 0128 4816      		cp r4,r24
 1157 012a 5906      		cpc r5,r25
 1158 012c 6A06      		cpc r6,r26
 1159 012e 7B06      		cpc r7,r27
 1160 0130 00F4      		brsh .L34
 1161               	.LBB106:
 121:./ros_lib/rosserial_msgs/RequestParam.h ****       varToArr(outbuffer + offset, length_stringsi);
 1162               		.loc 4 121 0 is_stmt 1 discriminator 2
 1163 0132 EC8D      		ldd r30,Y+28
 1164 0134 FD8D      		ldd r31,Y+29
 1165 0136 EA0D      		add r30,r10
 1166 0138 FB1D      		adc r31,r11
 1167 013a A081      		ld r26,Z
 1168 013c B181      		ldd r27,Z+1
 1169 013e FD01      		movw r30,r26
 1170               		0:
 1171 0140 0190      		ld __tmp_reg__,Z+
 1172 0142 0020      		tst __tmp_reg__
 1173 0144 01F4      		brne 0b
 1174 0146 3197      		sbiw r30,1
 1175 0148 6F01      		movw r12,r30
 1176 014a CA1A      		sub r12,r26
 1177 014c DB0A      		sbc r13,r27
 1178               	.LVL94:
 122:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 1179               		.loc 4 122 0 discriminator 2
 1180 014e A601      		movw r20,r12
 1181 0150 60E0      		ldi r22,0
 1182 0152 70E0      		ldi r23,0
 1183 0154 C801      		movw r24,r16
 1184 0156 8E0D      		add r24,r14
 1185 0158 9F1D      		adc r25,r15
 1186 015a 0E94 0000 		call _ZN3ros3Msg8varToArrIPhmEEvT_T0_
 1187               	.LVL95:
 124:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 1188               		.loc 4 124 0 discriminator 2
 1189 015e F4E0      		ldi r31,4
 1190 0160 EF0E      		add r14,r31
 1191 0162 F11C      		adc r15,__zero_reg__
 1192               	.LVL96:
 1193 0164 EC8D      		ldd r30,Y+28
 1194 0166 FD8D      		ldd r31,Y+29
 1195 0168 EA0D      		add r30,r10
 1196 016a FB1D      		adc r31,r11
 1197 016c 6081      		ld r22,Z
 1198 016e 7181      		ldd r23,Z+1
 1199 0170 A601      		movw r20,r12
 1200 0172 C801      		movw r24,r16
 1201 0174 8E0D      		add r24,r14
 1202 0176 9F1D      		adc r25,r15
 1203 0178 0E94 0000 		call memcpy
 1204               	.LVL97:
 125:./ros_lib/rosserial_msgs/RequestParam.h ****       }
 1205               		.loc 4 125 0 discriminator 2
 1206 017c EC0C      		add r14,r12
 1207 017e FD1C      		adc r15,r13
 1208               	.LVL98:
 1209               	.LBE106:
 120:./ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 1210               		.loc 4 120 0 discriminator 2
 1211 0180 8FEF      		ldi r24,-1
 1212 0182 481A      		sub r4,r24
 1213 0184 580A      		sbc r5,r24
 1214 0186 680A      		sbc r6,r24
 1215 0188 780A      		sbc r7,r24
 1216               	.LVL99:
 1217 018a E2E0      		ldi r30,2
 1218 018c AE0E      		add r10,r30
 1219 018e B11C      		adc r11,__zero_reg__
 1220 0190 00C0      		rjmp .L35
 1221               	.LVL100:
 1222               	.L34:
 1223               	.LBE105:
 128:./ros_lib/rosserial_msgs/RequestParam.h **** 
 1224               		.loc 4 128 0
 1225 0192 C701      		movw r24,r14
 1226               	/* epilogue start */
 1227 0194 DF91      		pop r29
 1228 0196 CF91      		pop r28
 1229               	.LVL101:
 1230 0198 1F91      		pop r17
 1231 019a 0F91      		pop r16
 1232               	.LVL102:
 1233 019c FF90      		pop r15
 1234 019e EF90      		pop r14
 1235               	.LVL103:
 1236 01a0 DF90      		pop r13
 1237 01a2 CF90      		pop r12
 1238 01a4 BF90      		pop r11
 1239 01a6 AF90      		pop r10
 1240 01a8 7F90      		pop r7
 1241 01aa 6F90      		pop r6
 1242 01ac 5F90      		pop r5
 1243 01ae 4F90      		pop r4
 1244               	.LVL104:
 1245 01b0 0895      		ret
 1246               		.cfi_endproc
 1247               	.LFE61:
 1249               		.section	.text._ZNK14rosserial_msgs3Log9serializeEPh,"axG",@progbits,_ZNK14rosserial_msgs3Log9seri
 1250               		.weak	_ZNK14rosserial_msgs3Log9serializeEPh
 1252               	_ZNK14rosserial_msgs3Log9serializeEPh:
 1253               	.LFB47:
  31:./ros_lib/rosserial_msgs/Log.h ****     {
 1254               		.loc 3 31 0
 1255               		.cfi_startproc
 1256               	.LVL105:
 1257 0000 EF92      		push r14
 1258               	.LCFI34:
 1259               		.cfi_def_cfa_offset 3
 1260               		.cfi_offset 14, -2
 1261 0002 FF92      		push r15
 1262               	.LCFI35:
 1263               		.cfi_def_cfa_offset 4
 1264               		.cfi_offset 15, -3
 1265 0004 0F93      		push r16
 1266               	.LCFI36:
 1267               		.cfi_def_cfa_offset 5
 1268               		.cfi_offset 16, -4
 1269 0006 1F93      		push r17
 1270               	.LCFI37:
 1271               		.cfi_def_cfa_offset 6
 1272               		.cfi_offset 17, -5
 1273 0008 CF93      		push r28
 1274               	.LCFI38:
 1275               		.cfi_def_cfa_offset 7
 1276               		.cfi_offset 28, -6
 1277 000a DF93      		push r29
 1278               	.LCFI39:
 1279               		.cfi_def_cfa_offset 8
 1280               		.cfi_offset 29, -7
 1281               	/* prologue: function */
 1282               	/* frame size = 0 */
 1283               	/* stack size = 6 */
 1284               	.L__stack_usage = 6
 1285 000c 8C01      		movw r16,r24
 1286 000e 7B01      		movw r14,r22
 1287               	.LVL106:
  34:./ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 1288               		.loc 3 34 0
 1289 0010 DC01      		movw r26,r24
 1290 0012 1296      		adiw r26,2
 1291 0014 2C91      		ld r18,X
 1292 0016 1297      		sbiw r26,2
 1293 0018 FB01      		movw r30,r22
 1294 001a 2193      		st Z+,r18
 1295 001c CF01      		movw r24,r30
 1296               	.LVL107:
  36:./ros_lib/rosserial_msgs/Log.h ****       varToArr(outbuffer + offset, length_msg);
 1297               		.loc 3 36 0
 1298 001e 1396      		adiw r26,3
 1299 0020 ED91      		ld r30,X+
 1300 0022 FC91      		ld r31,X
 1301 0024 1497      		sbiw r26,3+1
 1302 0026 EF01      		movw r28,r30
 1303               		0:
 1304 0028 0990      		ld __tmp_reg__,Y+
 1305 002a 0020      		tst __tmp_reg__
 1306 002c 01F4      		brne 0b
 1307 002e 2197      		sbiw r28,1
 1308 0030 CE1B      		sub r28,r30
 1309 0032 DF0B      		sbc r29,r31
 1310               	.LVL108:
  37:./ros_lib/rosserial_msgs/Log.h ****       offset += 4;
 1311               		.loc 3 37 0
 1312 0034 AE01      		movw r20,r28
 1313 0036 60E0      		ldi r22,0
 1314 0038 70E0      		ldi r23,0
 1315               	.LVL109:
 1316 003a 0E94 0000 		call _ZN3ros3Msg8varToArrIPhmEEvT_T0_
 1317               	.LVL110:
  39:./ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
 1318               		.loc 3 39 0
 1319 003e D801      		movw r26,r16
 1320 0040 1396      		adiw r26,3
 1321 0042 6D91      		ld r22,X+
 1322 0044 7C91      		ld r23,X
 1323 0046 1497      		sbiw r26,3+1
 1324 0048 AE01      		movw r20,r28
 1325 004a C701      		movw r24,r14
 1326 004c 0596      		adiw r24,5
 1327 004e 0E94 0000 		call memcpy
 1328               	.LVL111:
  42:./ros_lib/rosserial_msgs/Log.h **** 
 1329               		.loc 3 42 0
 1330 0052 CE01      		movw r24,r28
 1331 0054 0596      		adiw r24,5
 1332               	.LVL112:
 1333               	/* epilogue start */
 1334 0056 DF91      		pop r29
 1335 0058 CF91      		pop r28
 1336               	.LVL113:
 1337 005a 1F91      		pop r17
 1338 005c 0F91      		pop r16
 1339               	.LVL114:
 1340 005e FF90      		pop r15
 1341 0060 EF90      		pop r14
 1342               	.LVL115:
 1343 0062 0895      		ret
 1344               		.cfi_endproc
 1345               	.LFE47:
 1347               		.section	.text._ZNK14rosserial_msgs9TopicInfo9serializeEPh,"axG",@progbits,_ZNK14rosserial_msgs9To
 1348               		.weak	_ZNK14rosserial_msgs9TopicInfo9serializeEPh
 1350               	_ZNK14rosserial_msgs9TopicInfo9serializeEPh:
 1351               	.LFB40:
  43:./ros_lib/rosserial_msgs/TopicInfo.h ****     {
 1352               		.loc 2 43 0
 1353               		.cfi_startproc
 1354               	.LVL116:
 1355 0000 CF92      		push r12
 1356               	.LCFI40:
 1357               		.cfi_def_cfa_offset 3
 1358               		.cfi_offset 12, -2
 1359 0002 DF92      		push r13
 1360               	.LCFI41:
 1361               		.cfi_def_cfa_offset 4
 1362               		.cfi_offset 13, -3
 1363 0004 EF92      		push r14
 1364               	.LCFI42:
 1365               		.cfi_def_cfa_offset 5
 1366               		.cfi_offset 14, -4
 1367 0006 FF92      		push r15
 1368               	.LCFI43:
 1369               		.cfi_def_cfa_offset 6
 1370               		.cfi_offset 15, -5
 1371 0008 0F93      		push r16
 1372               	.LCFI44:
 1373               		.cfi_def_cfa_offset 7
 1374               		.cfi_offset 16, -6
 1375 000a 1F93      		push r17
 1376               	.LCFI45:
 1377               		.cfi_def_cfa_offset 8
 1378               		.cfi_offset 17, -7
 1379 000c CF93      		push r28
 1380               	.LCFI46:
 1381               		.cfi_def_cfa_offset 9
 1382               		.cfi_offset 28, -8
 1383 000e DF93      		push r29
 1384               	.LCFI47:
 1385               		.cfi_def_cfa_offset 10
 1386               		.cfi_offset 29, -9
 1387               	/* prologue: function */
 1388               	/* frame size = 0 */
 1389               	/* stack size = 8 */
 1390               	.L__stack_usage = 8
 1391 0010 7C01      		movw r14,r24
 1392 0012 8B01      		movw r16,r22
 1393               	.LVL117:
  46:./ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
 1394               		.loc 2 46 0
 1395 0014 DC01      		movw r26,r24
 1396 0016 1296      		adiw r26,2
 1397 0018 8C91      		ld r24,X
 1398 001a 1297      		sbiw r26,2
 1399               	.LVL118:
 1400 001c FB01      		movw r30,r22
 1401 001e 8083      		st Z,r24
  47:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 1402               		.loc 2 47 0
 1403 0020 1396      		adiw r26,3
 1404 0022 8C91      		ld r24,X
 1405 0024 1397      		sbiw r26,3
 1406 0026 8183      		std Z+1,r24
 1407               	.LVL119:
  49:./ros_lib/rosserial_msgs/TopicInfo.h ****       varToArr(outbuffer + offset, length_topic_name);
 1408               		.loc 2 49 0
 1409 0028 1496      		adiw r26,4
 1410 002a ED91      		ld r30,X+
 1411 002c FC91      		ld r31,X
 1412 002e 1597      		sbiw r26,4+1
 1413 0030 EF01      		movw r28,r30
 1414               		0:
 1415 0032 0990      		ld __tmp_reg__,Y+
 1416 0034 0020      		tst __tmp_reg__
 1417 0036 01F4      		brne 0b
 1418 0038 2197      		sbiw r28,1
 1419 003a CE1B      		sub r28,r30
 1420 003c DF0B      		sbc r29,r31
 1421               	.LVL120:
  50:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1422               		.loc 2 50 0
 1423 003e AE01      		movw r20,r28
 1424 0040 60E0      		ldi r22,0
 1425 0042 70E0      		ldi r23,0
 1426               	.LVL121:
 1427 0044 C801      		movw r24,r16
 1428 0046 0296      		adiw r24,2
 1429 0048 0E94 0000 		call _ZN3ros3Msg8varToArrIPhmEEvT_T0_
 1430               	.LVL122:
  52:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
 1431               		.loc 2 52 0
 1432 004c D701      		movw r26,r14
 1433 004e 1496      		adiw r26,4
 1434 0050 6D91      		ld r22,X+
 1435 0052 7C91      		ld r23,X
 1436 0054 1597      		sbiw r26,4+1
 1437 0056 AE01      		movw r20,r28
 1438 0058 C801      		movw r24,r16
 1439 005a 0696      		adiw r24,6
 1440 005c 0E94 0000 		call memcpy
 1441               	.LVL123:
  53:./ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type = strlen(this->message_type);
 1442               		.loc 2 53 0
 1443 0060 CE01      		movw r24,r28
 1444 0062 0696      		adiw r24,6
 1445               	.LVL124:
  54:./ros_lib/rosserial_msgs/TopicInfo.h ****       varToArr(outbuffer + offset, length_message_type);
 1446               		.loc 2 54 0
 1447 0064 F701      		movw r30,r14
 1448 0066 A681      		ldd r26,Z+6
 1449 0068 B781      		ldd r27,Z+7
 1450 006a FD01      		movw r30,r26
 1451               		0:
 1452 006c 0190      		ld __tmp_reg__,Z+
 1453 006e 0020      		tst __tmp_reg__
 1454 0070 01F4      		brne 0b
 1455 0072 3197      		sbiw r30,1
 1456 0074 6F01      		movw r12,r30
 1457 0076 CA1A      		sub r12,r26
 1458 0078 DB0A      		sbc r13,r27
 1459               	.LVL125:
  55:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1460               		.loc 2 55 0
 1461 007a A601      		movw r20,r12
 1462 007c 60E0      		ldi r22,0
 1463 007e 70E0      		ldi r23,0
 1464 0080 800F      		add r24,r16
 1465 0082 911F      		adc r25,r17
 1466               	.LVL126:
 1467 0084 0E94 0000 		call _ZN3ros3Msg8varToArrIPhmEEvT_T0_
 1468               	.LVL127:
  57:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 1469               		.loc 2 57 0
 1470 0088 2A96      		adiw r28,10
 1471               	.LVL128:
 1472 008a D701      		movw r26,r14
 1473 008c 1696      		adiw r26,6
 1474 008e 6D91      		ld r22,X+
 1475 0090 7C91      		ld r23,X
 1476 0092 1797      		sbiw r26,6+1
 1477 0094 A601      		movw r20,r12
 1478 0096 C801      		movw r24,r16
 1479 0098 8C0F      		add r24,r28
 1480 009a 9D1F      		adc r25,r29
 1481 009c 0E94 0000 		call memcpy
 1482               	.LVL129:
  58:./ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum = strlen(this->md5sum);
 1483               		.loc 2 58 0
 1484 00a0 CC0D      		add r28,r12
 1485 00a2 DD1D      		adc r29,r13
 1486               	.LVL130:
  59:./ros_lib/rosserial_msgs/TopicInfo.h ****       varToArr(outbuffer + offset, length_md5sum);
 1487               		.loc 2 59 0
 1488 00a4 D701      		movw r26,r14
 1489 00a6 1896      		adiw r26,8
 1490 00a8 ED91      		ld r30,X+
 1491 00aa FC91      		ld r31,X
 1492 00ac 1997      		sbiw r26,8+1
 1493 00ae DF01      		movw r26,r30
 1494               		0:
 1495 00b0 0D90      		ld __tmp_reg__,X+
 1496 00b2 0020      		tst __tmp_reg__
 1497 00b4 01F4      		brne 0b
 1498 00b6 1197      		sbiw r26,1
 1499 00b8 6D01      		movw r12,r26
 1500               	.LVL131:
 1501 00ba CE1A      		sub r12,r30
 1502 00bc DF0A      		sbc r13,r31
 1503               	.LVL132:
  60:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1504               		.loc 2 60 0
 1505 00be A601      		movw r20,r12
 1506 00c0 60E0      		ldi r22,0
 1507 00c2 70E0      		ldi r23,0
 1508 00c4 C801      		movw r24,r16
 1509 00c6 8C0F      		add r24,r28
 1510 00c8 9D1F      		adc r25,r29
 1511 00ca 0E94 0000 		call _ZN3ros3Msg8varToArrIPhmEEvT_T0_
 1512               	.LVL133:
  62:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 1513               		.loc 2 62 0
 1514 00ce 2496      		adiw r28,4
 1515               	.LVL134:
 1516 00d0 F701      		movw r30,r14
 1517 00d2 6085      		ldd r22,Z+8
 1518 00d4 7185      		ldd r23,Z+9
 1519 00d6 A601      		movw r20,r12
 1520 00d8 C801      		movw r24,r16
 1521 00da 8C0F      		add r24,r28
 1522 00dc 9D1F      		adc r25,r29
 1523 00de 0E94 0000 		call memcpy
 1524               	.LVL135:
  63:./ros_lib/rosserial_msgs/TopicInfo.h ****       union {
 1525               		.loc 2 63 0
 1526 00e2 C601      		movw r24,r12
 1527 00e4 8C0F      		add r24,r28
 1528 00e6 9D1F      		adc r25,r29
 1529               	.LVL136:
  68:./ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (u_buffer_size.base >> (8 * 0)) & 0xFF;
 1530               		.loc 2 68 0
 1531 00e8 D701      		movw r26,r14
 1532 00ea 1A96      		adiw r26,10
 1533 00ec 6C91      		ld r22,X
 1534 00ee 1A97      		sbiw r26,10
  69:./ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (u_buffer_size.base >> (8 * 1)) & 0xFF;
 1535               		.loc 2 69 0
 1536 00f0 1B96      		adiw r26,11
 1537 00f2 4C91      		ld r20,X
 1538 00f4 1B97      		sbiw r26,11
 1539 00f6 1C96      		adiw r26,12
 1540 00f8 3C91      		ld r19,X
 1541 00fa 1C97      		sbiw r26,12
 1542 00fc 1D96      		adiw r26,13
 1543 00fe 2C91      		ld r18,X
 1544 0100 F801      		movw r30,r16
 1545 0102 E80F      		add r30,r24
 1546 0104 F91F      		adc r31,r25
 1547 0106 6083      		st Z,r22
  70:./ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 2) = (u_buffer_size.base >> (8 * 2)) & 0xFF;
 1548               		.loc 2 70 0
 1549 0108 4183      		std Z+1,r20
  71:./ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
 1550               		.loc 2 71 0
 1551 010a 3283      		std Z+2,r19
  72:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 1552               		.loc 2 72 0
 1553 010c 2383      		std Z+3,r18
 1554               	.LVL137:
  75:./ros_lib/rosserial_msgs/TopicInfo.h **** 
 1555               		.loc 2 75 0
 1556 010e 0496      		adiw r24,4
 1557               	.LVL138:
 1558               	/* epilogue start */
 1559 0110 DF91      		pop r29
 1560 0112 CF91      		pop r28
 1561 0114 1F91      		pop r17
 1562 0116 0F91      		pop r16
 1563               	.LVL139:
 1564 0118 FF90      		pop r15
 1565 011a EF90      		pop r14
 1566               	.LVL140:
 1567 011c DF90      		pop r13
 1568 011e CF90      		pop r12
 1569               	.LVL141:
 1570 0120 0895      		ret
 1571               		.cfi_endproc
 1572               	.LFE40:
 1574               		.section	.text._ZN3ros3Msg8arrToVarImPhEEvRT_T0_,"axG",@progbits,_ZN3ros3Msg8arrToVarImPhEEvRT_T0_
 1575               		.weak	_ZN3ros3Msg8arrToVarImPhEEvRT_T0_
 1577               	_ZN3ros3Msg8arrToVarImPhEEvRT_T0_:
 1578               	.LFB152:
 193:./ros_lib/ros/msg.h **** 
 194:./ros_lib/ros/msg.h ****   // Copy data from a byte array into variable
 195:./ros_lib/ros/msg.h ****   template<typename V, typename A>
 196:./ros_lib/ros/msg.h ****   static void arrToVar(V& var, const A arr)
 1579               		.loc 9 196 0
 1580               		.cfi_startproc
 1581               	.LVL142:
 1582 0000 CF92      		push r12
 1583               	.LCFI48:
 1584               		.cfi_def_cfa_offset 3
 1585               		.cfi_offset 12, -2
 1586 0002 DF92      		push r13
 1587               	.LCFI49:
 1588               		.cfi_def_cfa_offset 4
 1589               		.cfi_offset 13, -3
 1590 0004 EF92      		push r14
 1591               	.LCFI50:
 1592               		.cfi_def_cfa_offset 5
 1593               		.cfi_offset 14, -4
 1594 0006 FF92      		push r15
 1595               	.LCFI51:
 1596               		.cfi_def_cfa_offset 6
 1597               		.cfi_offset 15, -5
 1598               	/* prologue: function */
 1599               	/* frame size = 0 */
 1600               	/* stack size = 4 */
 1601               	.L__stack_usage = 4
 1602 0008 FC01      		movw r30,r24
 197:./ros_lib/ros/msg.h ****   {
 198:./ros_lib/ros/msg.h ****     var = 0;
 1603               		.loc 9 198 0
 1604 000a 1082      		st Z,__zero_reg__
 1605 000c 1182      		std Z+1,__zero_reg__
 1606 000e 1282      		std Z+2,__zero_reg__
 1607 0010 1382      		std Z+3,__zero_reg__
 1608               	.LVL143:
 1609 0012 DB01      		movw r26,r22
 1610 0014 20E0      		ldi r18,0
 1611 0016 30E0      		ldi r19,0
 1612               	.LVL144:
 1613               	.L39:
 1614               	.LBB107:
 199:./ros_lib/ros/msg.h ****     for (size_t i = 0; i < sizeof(V); i++)
 200:./ros_lib/ros/msg.h ****       var |= (arr[i] << (8 * i));
 1615               		.loc 9 200 0 discriminator 2
 1616 0018 4D91      		ld r20,X+
 1617               	.LVL145:
 1618 001a 50E0      		ldi r21,0
 1619 001c 022E      		mov r0,r18
 1620 001e 00C0      		rjmp 2f
 1621               		1:
 1622 0020 440F      		lsl r20
 1623 0022 551F      		rol r21
 1624               		2:
 1625 0024 0A94      		dec r0
 1626 0026 02F4      		brpl 1b
 1627 0028 052E      		mov __tmp_reg__,r21
 1628 002a 000C      		lsl r0
 1629 002c 660B      		sbc r22,r22
 1630 002e 770B      		sbc r23,r23
 1631 0030 C080      		ld r12,Z
 1632 0032 D180      		ldd r13,Z+1
 1633 0034 E280      		ldd r14,Z+2
 1634 0036 F380      		ldd r15,Z+3
 1635 0038 4C29      		or r20,r12
 1636 003a 5D29      		or r21,r13
 1637 003c 6E29      		or r22,r14
 1638 003e 7F29      		or r23,r15
 1639 0040 4083      		st Z,r20
 1640 0042 5183      		std Z+1,r21
 1641 0044 6283      		std Z+2,r22
 1642 0046 7383      		std Z+3,r23
 1643               	.LVL146:
 1644 0048 285F      		subi r18,-8
 1645 004a 3F4F      		sbci r19,-1
 199:./ros_lib/ros/msg.h ****     for (size_t i = 0; i < sizeof(V); i++)
 1646               		.loc 9 199 0 discriminator 2
 1647 004c 2032      		cpi r18,32
 1648 004e 3105      		cpc r19,__zero_reg__
 1649 0050 01F4      		brne .L39
 1650               	/* epilogue start */
 1651               	.LBE107:
 201:./ros_lib/ros/msg.h ****   }
 1652               		.loc 9 201 0
 1653 0052 FF90      		pop r15
 1654 0054 EF90      		pop r14
 1655 0056 DF90      		pop r13
 1656 0058 CF90      		pop r12
 1657 005a 0895      		ret
 1658               		.cfi_endproc
 1659               	.LFE152:
 1661               		.section	.text._ZN14rosserial_msgs3Log11deserializeEPh,"axG",@progbits,_ZN14rosserial_msgs3Log11de
 1662               		.weak	_ZN14rosserial_msgs3Log11deserializeEPh
 1664               	_ZN14rosserial_msgs3Log11deserializeEPh:
 1665               	.LFB48:
  44:./ros_lib/rosserial_msgs/Log.h ****     {
 1666               		.loc 3 44 0
 1667               		.cfi_startproc
 1668               	.LVL147:
 1669 0000 4F92      		push r4
 1670               	.LCFI52:
 1671               		.cfi_def_cfa_offset 3
 1672               		.cfi_offset 4, -2
 1673 0002 5F92      		push r5
 1674               	.LCFI53:
 1675               		.cfi_def_cfa_offset 4
 1676               		.cfi_offset 5, -3
 1677 0004 6F92      		push r6
 1678               	.LCFI54:
 1679               		.cfi_def_cfa_offset 5
 1680               		.cfi_offset 6, -4
 1681 0006 7F92      		push r7
 1682               	.LCFI55:
 1683               		.cfi_def_cfa_offset 6
 1684               		.cfi_offset 7, -5
 1685 0008 8F92      		push r8
 1686               	.LCFI56:
 1687               		.cfi_def_cfa_offset 7
 1688               		.cfi_offset 8, -6
 1689 000a 9F92      		push r9
 1690               	.LCFI57:
 1691               		.cfi_def_cfa_offset 8
 1692               		.cfi_offset 9, -7
 1693 000c AF92      		push r10
 1694               	.LCFI58:
 1695               		.cfi_def_cfa_offset 9
 1696               		.cfi_offset 10, -8
 1697 000e BF92      		push r11
 1698               	.LCFI59:
 1699               		.cfi_def_cfa_offset 10
 1700               		.cfi_offset 11, -9
 1701 0010 EF92      		push r14
 1702               	.LCFI60:
 1703               		.cfi_def_cfa_offset 11
 1704               		.cfi_offset 14, -10
 1705 0012 FF92      		push r15
 1706               	.LCFI61:
 1707               		.cfi_def_cfa_offset 12
 1708               		.cfi_offset 15, -11
 1709 0014 0F93      		push r16
 1710               	.LCFI62:
 1711               		.cfi_def_cfa_offset 13
 1712               		.cfi_offset 16, -12
 1713 0016 1F93      		push r17
 1714               	.LCFI63:
 1715               		.cfi_def_cfa_offset 14
 1716               		.cfi_offset 17, -13
 1717 0018 CF93      		push r28
 1718               	.LCFI64:
 1719               		.cfi_def_cfa_offset 15
 1720               		.cfi_offset 28, -14
 1721 001a DF93      		push r29
 1722               	.LCFI65:
 1723               		.cfi_def_cfa_offset 16
 1724               		.cfi_offset 29, -15
 1725 001c 00D0      		rcall .
 1726 001e 00D0      		rcall .
 1727               	.LCFI66:
 1728               		.cfi_def_cfa_offset 20
 1729 0020 CDB7      		in r28,__SP_L__
 1730 0022 DEB7      		in r29,__SP_H__
 1731               	.LCFI67:
 1732               		.cfi_def_cfa_register 28
 1733               	/* prologue: function */
 1734               	/* frame size = 4 */
 1735               	/* stack size = 18 */
 1736               	.L__stack_usage = 18
 1737 0024 7C01      		movw r14,r24
 1738 0026 8B01      		movw r16,r22
 1739               	.LVL148:
  47:./ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 1740               		.loc 3 47 0
 1741 0028 FB01      		movw r30,r22
 1742 002a 8191      		ld r24,Z+
 1743               	.LVL149:
 1744 002c BF01      		movw r22,r30
 1745               	.LVL150:
 1746 002e F701      		movw r30,r14
 1747 0030 8283      		std Z+2,r24
 1748               	.LVL151:
  50:./ros_lib/rosserial_msgs/Log.h ****       offset += 4;
 1749               		.loc 3 50 0
 1750 0032 CE01      		movw r24,r28
 1751 0034 0196      		adiw r24,1
 1752 0036 0E94 0000 		call _ZN3ros3Msg8arrToVarImPhEEvRT_T0_
 1753               	.LVL152:
 1754               	.LBB108:
  52:./ros_lib/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 1755               		.loc 3 52 0
 1756 003a 8981      		ldd r24,Y+1
 1757 003c 9A81      		ldd r25,Y+2
 1758 003e AB81      		ldd r26,Y+3
 1759 0040 BC81      		ldd r27,Y+4
 1760 0042 4C01      		movw r8,r24
 1761 0044 5D01      		movw r10,r26
 1762 0046 F5E0      		ldi r31,5
 1763 0048 8F0E      		add r8,r31
 1764 004a 911C      		adc r9,__zero_reg__
 1765 004c A11C      		adc r10,__zero_reg__
 1766 004e B11C      		adc r11,__zero_reg__
 1767 0050 A801      		movw r20,r16
 1768 0052 4C5F      		subi r20,-4
 1769 0054 5F4F      		sbci r21,-1
 1770 0056 FA01      		movw r30,r20
 1771 0058 25E0      		ldi r18,lo8(5)
 1772 005a 30E0      		ldi r19,0
 1773               	.LVL153:
 1774               	.L43:
  52:./ros_lib/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 1775               		.loc 3 52 0 is_stmt 0 discriminator 3
 1776 005c 2901      		movw r4,r18
 1777 005e 612C      		mov r6,__zero_reg__
 1778 0060 712C      		mov r7,__zero_reg__
 1779 0062 4814      		cp r4,r8
 1780 0064 5904      		cpc r5,r9
 1781 0066 6A04      		cpc r6,r10
 1782 0068 7B04      		cpc r7,r11
 1783 006a 00F4      		brsh .L42
  53:./ros_lib/rosserial_msgs/Log.h ****       }
 1784               		.loc 3 53 0 is_stmt 1 discriminator 2
 1785 006c 6181      		ldd r22,Z+1
 1786 006e 6193      		st Z+,r22
  52:./ros_lib/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 1787               		.loc 3 52 0 discriminator 2
 1788 0070 2F5F      		subi r18,-1
 1789 0072 3F4F      		sbci r19,-1
 1790               	.LVL154:
 1791 0074 00C0      		rjmp .L43
 1792               	.LVL155:
 1793               	.L42:
 1794               	.LBE108:
  55:./ros_lib/rosserial_msgs/Log.h ****       this->msg = (char *)(inbuffer + offset-1);
 1795               		.loc 3 55 0
 1796 0076 F801      		movw r30,r16
 1797 0078 E80F      		add r30,r24
 1798 007a F91F      		adc r31,r25
 1799 007c 1482      		std Z+4,__zero_reg__
  56:./ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
 1800               		.loc 3 56 0
 1801 007e F701      		movw r30,r14
 1802 0080 5483      		std Z+4,r21
 1803 0082 4383      		std Z+3,r20
 1804               	.LVL156:
  59:./ros_lib/rosserial_msgs/Log.h **** 
 1805               		.loc 3 59 0
 1806 0084 0596      		adiw r24,5
 1807               	.LVL157:
 1808               	/* epilogue start */
 1809 0086 0F90      		pop __tmp_reg__
 1810 0088 0F90      		pop __tmp_reg__
 1811 008a 0F90      		pop __tmp_reg__
 1812 008c 0F90      		pop __tmp_reg__
 1813 008e DF91      		pop r29
 1814 0090 CF91      		pop r28
 1815               	.LVL158:
 1816 0092 1F91      		pop r17
 1817               	.LVL159:
 1818 0094 0F91      		pop r16
 1819               	.LVL160:
 1820 0096 FF90      		pop r15
 1821               	.LVL161:
 1822 0098 EF90      		pop r14
 1823               	.LVL162:
 1824 009a BF90      		pop r11
 1825               	.LVL163:
 1826 009c AF90      		pop r10
 1827               	.LVL164:
 1828 009e 9F90      		pop r9
 1829               	.LVL165:
 1830 00a0 8F90      		pop r8
 1831               	.LVL166:
 1832 00a2 7F90      		pop r7
 1833               	.LVL167:
 1834 00a4 6F90      		pop r6
 1835               	.LVL168:
 1836 00a6 5F90      		pop r5
 1837               	.LVL169:
 1838 00a8 4F90      		pop r4
 1839               	.LVL170:
 1840 00aa 0895      		ret
 1841               		.cfi_endproc
 1842               	.LFE48:
 1844               		.section	.text._ZN14rosserial_msgs9TopicInfo11deserializeEPh,"axG",@progbits,_ZN14rosserial_msgs9T
 1845               		.weak	_ZN14rosserial_msgs9TopicInfo11deserializeEPh
 1847               	_ZN14rosserial_msgs9TopicInfo11deserializeEPh:
 1848               	.LFB41:
  77:./ros_lib/rosserial_msgs/TopicInfo.h ****     {
 1849               		.loc 2 77 0
 1850               		.cfi_startproc
 1851               	.LVL171:
 1852 0000 4F92      		push r4
 1853               	.LCFI68:
 1854               		.cfi_def_cfa_offset 3
 1855               		.cfi_offset 4, -2
 1856 0002 5F92      		push r5
 1857               	.LCFI69:
 1858               		.cfi_def_cfa_offset 4
 1859               		.cfi_offset 5, -3
 1860 0004 6F92      		push r6
 1861               	.LCFI70:
 1862               		.cfi_def_cfa_offset 5
 1863               		.cfi_offset 6, -4
 1864 0006 7F92      		push r7
 1865               	.LCFI71:
 1866               		.cfi_def_cfa_offset 6
 1867               		.cfi_offset 7, -5
 1868 0008 8F92      		push r8
 1869               	.LCFI72:
 1870               		.cfi_def_cfa_offset 7
 1871               		.cfi_offset 8, -6
 1872 000a 9F92      		push r9
 1873               	.LCFI73:
 1874               		.cfi_def_cfa_offset 8
 1875               		.cfi_offset 9, -7
 1876 000c AF92      		push r10
 1877               	.LCFI74:
 1878               		.cfi_def_cfa_offset 9
 1879               		.cfi_offset 10, -8
 1880 000e BF92      		push r11
 1881               	.LCFI75:
 1882               		.cfi_def_cfa_offset 10
 1883               		.cfi_offset 11, -9
 1884 0010 CF92      		push r12
 1885               	.LCFI76:
 1886               		.cfi_def_cfa_offset 11
 1887               		.cfi_offset 12, -10
 1888 0012 DF92      		push r13
 1889               	.LCFI77:
 1890               		.cfi_def_cfa_offset 12
 1891               		.cfi_offset 13, -11
 1892 0014 EF92      		push r14
 1893               	.LCFI78:
 1894               		.cfi_def_cfa_offset 13
 1895               		.cfi_offset 14, -12
 1896 0016 FF92      		push r15
 1897               	.LCFI79:
 1898               		.cfi_def_cfa_offset 14
 1899               		.cfi_offset 15, -13
 1900 0018 0F93      		push r16
 1901               	.LCFI80:
 1902               		.cfi_def_cfa_offset 15
 1903               		.cfi_offset 16, -14
 1904 001a 1F93      		push r17
 1905               	.LCFI81:
 1906               		.cfi_def_cfa_offset 16
 1907               		.cfi_offset 17, -15
 1908 001c CF93      		push r28
 1909               	.LCFI82:
 1910               		.cfi_def_cfa_offset 17
 1911               		.cfi_offset 28, -16
 1912 001e DF93      		push r29
 1913               	.LCFI83:
 1914               		.cfi_def_cfa_offset 18
 1915               		.cfi_offset 29, -17
 1916 0020 CDB7      		in r28,__SP_L__
 1917 0022 DEB7      		in r29,__SP_H__
 1918               	.LCFI84:
 1919               		.cfi_def_cfa_register 28
 1920 0024 2C97      		sbiw r28,12
 1921               	.LCFI85:
 1922               		.cfi_def_cfa_offset 30
 1923 0026 0FB6      		in __tmp_reg__,__SREG__
 1924 0028 F894      		cli
 1925 002a DEBF      		out __SP_H__,r29
 1926 002c 0FBE      		out __SREG__,__tmp_reg__
 1927 002e CDBF      		out __SP_L__,r28
 1928               	/* prologue: function */
 1929               	/* frame size = 12 */
 1930               	/* stack size = 28 */
 1931               	.L__stack_usage = 28
 1932 0030 7C01      		movw r14,r24
 1933 0032 8B01      		movw r16,r22
 1934               	.LVL172:
  80:./ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_id |= ((uint16_t) (*(inbuffer + offset + 1))) << (8 * 1);
 1935               		.loc 2 80 0
 1936 0034 DB01      		movw r26,r22
 1937 0036 8C91      		ld r24,X
 1938               	.LVL173:
 1939 0038 90E0      		ldi r25,0
 1940 003a F701      		movw r30,r14
 1941 003c 9383      		std Z+3,r25
 1942 003e 8283      		std Z+2,r24
  81:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 1943               		.loc 2 81 0
 1944 0040 1196      		adiw r26,1
 1945 0042 2C91      		ld r18,X
 1946 0044 922B      		or r25,r18
 1947 0046 9383      		std Z+3,r25
 1948 0048 8283      		std Z+2,r24
 1949               	.LVL174:
  84:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1950               		.loc 2 84 0
 1951 004a 6E5F      		subi r22,-2
 1952 004c 7F4F      		sbci r23,-1
 1953               	.LVL175:
 1954 004e CE01      		movw r24,r28
 1955 0050 0996      		adiw r24,9
 1956 0052 0E94 0000 		call _ZN3ros3Msg8arrToVarImPhEEvRT_T0_
 1957               	.LVL176:
 1958               	.LBB109:
  86:./ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 1959               		.loc 2 86 0
 1960 0056 8984      		ldd r8,Y+9
 1961 0058 9A84      		ldd r9,Y+10
 1962 005a AB84      		ldd r10,Y+11
 1963 005c BC84      		ldd r11,Y+12
 1964 005e 2401      		movw r4,r8
 1965 0060 3501      		movw r6,r10
 1966 0062 F6E0      		ldi r31,6
 1967 0064 4F0E      		add r4,r31
 1968 0066 511C      		adc r5,__zero_reg__
 1969 0068 611C      		adc r6,__zero_reg__
 1970 006a 711C      		adc r7,__zero_reg__
 1971 006c 9801      		movw r18,r16
 1972 006e 2B5F      		subi r18,-5
 1973 0070 3F4F      		sbci r19,-1
 1974 0072 F901      		movw r30,r18
 1975 0074 86E0      		ldi r24,lo8(6)
 1976 0076 90E0      		ldi r25,0
 1977               	.LVL177:
 1978               	.L46:
  86:./ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 1979               		.loc 2 86 0 is_stmt 0 discriminator 3
 1980 0078 AC01      		movw r20,r24
 1981 007a 60E0      		ldi r22,0
 1982 007c 70E0      		ldi r23,0
 1983 007e 4415      		cp r20,r4
 1984 0080 5505      		cpc r21,r5
 1985 0082 6605      		cpc r22,r6
 1986 0084 7705      		cpc r23,r7
 1987 0086 00F4      		brsh .L45
  87:./ros_lib/rosserial_msgs/TopicInfo.h ****       }
 1988               		.loc 2 87 0 is_stmt 1 discriminator 2
 1989 0088 4181      		ldd r20,Z+1
 1990 008a 4193      		st Z+,r20
  86:./ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 1991               		.loc 2 86 0 discriminator 2
 1992 008c 0196      		adiw r24,1
 1993               	.LVL178:
 1994 008e 00C0      		rjmp .L46
 1995               	.LVL179:
 1996               	.L45:
 1997               	.LBE109:
  89:./ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_name = (char *)(inbuffer + offset-1);
 1998               		.loc 2 89 0
 1999 0090 F801      		movw r30,r16
 2000 0092 E80D      		add r30,r8
 2001 0094 F91D      		adc r31,r9
 2002 0096 1582      		std Z+5,__zero_reg__
  90:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
 2003               		.loc 2 90 0
 2004 0098 D701      		movw r26,r14
 2005 009a 1596      		adiw r26,4+1
 2006 009c 3C93      		st X,r19
 2007 009e 2E93      		st -X,r18
 2008 00a0 1497      		sbiw r26,4
  91:./ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type;
 2009               		.loc 2 91 0
 2010 00a2 B401      		movw r22,r8
 2011 00a4 6A5F      		subi r22,-6
 2012 00a6 7F4F      		sbci r23,-1
 2013               	.LVL180:
  93:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2014               		.loc 2 93 0
 2015 00a8 600F      		add r22,r16
 2016 00aa 711F      		adc r23,r17
 2017               	.LVL181:
 2018 00ac CE01      		movw r24,r28
 2019 00ae 0596      		adiw r24,5
 2020 00b0 0E94 0000 		call _ZN3ros3Msg8arrToVarImPhEEvRT_T0_
 2021               	.LVL182:
  94:./ros_lib/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_message_type; ++k){
 2022               		.loc 2 94 0
 2023 00b4 BAE0      		ldi r27,10
 2024 00b6 8B0E      		add r8,r27
 2025 00b8 911C      		adc r9,__zero_reg__
 2026               	.LVL183:
 2027               	.LBB110:
  95:./ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2028               		.loc 2 95 0
 2029 00ba 4D80      		ldd r4,Y+5
 2030 00bc 5E80      		ldd r5,Y+6
 2031 00be 6F80      		ldd r6,Y+7
 2032 00c0 7884      		ldd r7,Y+8
 2033 00c2 A401      		movw r20,r8
 2034 00c4 092C      		mov __tmp_reg__,r9
 2035 00c6 000C      		lsl r0
 2036 00c8 660B      		sbc r22,r22
 2037 00ca 770B      		sbc r23,r23
 2038 00cc 440D      		add r20,r4
 2039 00ce 551D      		adc r21,r5
 2040 00d0 661D      		adc r22,r6
 2041 00d2 771D      		adc r23,r7
 2042 00d4 D801      		movw r26,r16
 2043 00d6 A80D      		add r26,r8
 2044 00d8 B91D      		adc r27,r9
 2045               	.LVL184:
 2046               	.L48:
  95:./ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2047               		.loc 2 95 0 is_stmt 0 discriminator 3
 2048 00da CD01      		movw r24,r26
 2049 00dc 801B      		sub r24,r16
 2050 00de 910B      		sbc r25,r17
 2051               	.LVL185:
 2052 00e0 5C01      		movw r10,r24
 2053 00e2 C12C      		mov r12,__zero_reg__
 2054 00e4 D12C      		mov r13,__zero_reg__
 2055 00e6 A416      		cp r10,r20
 2056 00e8 B506      		cpc r11,r21
 2057 00ea C606      		cpc r12,r22
 2058 00ec D706      		cpc r13,r23
 2059 00ee 00F4      		brsh .L47
  96:./ros_lib/rosserial_msgs/TopicInfo.h ****       }
 2060               		.loc 2 96 0 is_stmt 1 discriminator 2
 2061 00f0 8D91      		ld r24,X+
 2062               	.LVL186:
 2063 00f2 FD01      		movw r30,r26
 2064 00f4 3297      		sbiw r30,2
 2065 00f6 8083      		st Z,r24
 2066               	.LVL187:
  95:./ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2067               		.loc 2 95 0 discriminator 2
 2068 00f8 00C0      		rjmp .L48
 2069               	.LVL188:
 2070               	.L47:
 2071               	.LBE110:
  98:./ros_lib/rosserial_msgs/TopicInfo.h ****       this->message_type = (char *)(inbuffer + offset-1);
 2072               		.loc 2 98 0
 2073 00fa 5401      		movw r10,r8
 2074               	.LVL189:
 2075 00fc A40C      		add r10,r4
 2076 00fe B51C      		adc r11,r5
 2077 0100 B801      		movw r22,r16
 2078 0102 6A0D      		add r22,r10
 2079 0104 7B1D      		adc r23,r11
 2080 0106 FB01      		movw r30,r22
 2081 0108 3197      		sbiw r30,1
 2082 010a 1082      		st Z,__zero_reg__
  99:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 2083               		.loc 2 99 0
 2084 010c C401      		movw r24,r8
 2085               	.LVL190:
 2086 010e 0197      		sbiw r24,1
 2087 0110 800F      		add r24,r16
 2088 0112 911F      		adc r25,r17
 2089 0114 F701      		movw r30,r14
 2090 0116 9783      		std Z+7,r25
 2091 0118 8683      		std Z+6,r24
 2092               	.LVL191:
 102:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2093               		.loc 2 102 0
 2094 011a CE01      		movw r24,r28
 2095 011c 0196      		adiw r24,1
 2096 011e 0E94 0000 		call _ZN3ros3Msg8arrToVarImPhEEvRT_T0_
 2097               	.LVL192:
 103:./ros_lib/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_md5sum; ++k){
 2098               		.loc 2 103 0
 2099 0122 9501      		movw r18,r10
 2100 0124 2C5F      		subi r18,-4
 2101 0126 3F4F      		sbci r19,-1
 2102               	.LVL193:
 2103               	.LBB111:
 104:./ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2104               		.loc 2 104 0
 2105 0128 8981      		ldd r24,Y+1
 2106 012a 9A81      		ldd r25,Y+2
 2107 012c AB81      		ldd r26,Y+3
 2108 012e BC81      		ldd r27,Y+4
 2109 0130 2901      		movw r4,r18
 2110 0132 032E      		mov __tmp_reg__,r19
 2111 0134 000C      		lsl r0
 2112 0136 6608      		sbc r6,r6
 2113 0138 7708      		sbc r7,r7
 2114 013a 480E      		add r4,r24
 2115 013c 591E      		adc r5,r25
 2116 013e 6A1E      		adc r6,r26
 2117 0140 7B1E      		adc r7,r27
 2118 0142 F501      		movw r30,r10
 2119 0144 3396      		adiw r30,3
 2120 0146 E00F      		add r30,r16
 2121 0148 F11F      		adc r31,r17
 2122 014a A901      		movw r20,r18
 2123               	.LVL194:
 2124               	.L50:
 104:./ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2125               		.loc 2 104 0 is_stmt 0 discriminator 3
 2126 014c 4A01      		movw r8,r20
 2127 014e A12C      		mov r10,__zero_reg__
 2128 0150 B12C      		mov r11,__zero_reg__
 2129 0152 8414      		cp r8,r4
 2130 0154 9504      		cpc r9,r5
 2131 0156 A604      		cpc r10,r6
 2132 0158 B704      		cpc r11,r7
 2133 015a 00F4      		brsh .L49
 2134               	.LVL195:
 105:./ros_lib/rosserial_msgs/TopicInfo.h ****       }
 2135               		.loc 2 105 0 is_stmt 1 discriminator 2
 2136 015c 6181      		ldd r22,Z+1
 2137 015e 6193      		st Z+,r22
 104:./ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2138               		.loc 2 104 0 discriminator 2
 2139 0160 4F5F      		subi r20,-1
 2140 0162 5F4F      		sbci r21,-1
 2141               	.LVL196:
 2142 0164 00C0      		rjmp .L50
 2143               	.LVL197:
 2144               	.L49:
 2145               	.LBE111:
 107:./ros_lib/rosserial_msgs/TopicInfo.h ****       this->md5sum = (char *)(inbuffer + offset-1);
 2146               		.loc 2 107 0
 2147 0166 820F      		add r24,r18
 2148 0168 931F      		adc r25,r19
 2149 016a F801      		movw r30,r16
 2150 016c E80F      		add r30,r24
 2151 016e F91F      		adc r31,r25
 2152 0170 DF01      		movw r26,r30
 2153 0172 1197      		sbiw r26,1
 2154 0174 1C92      		st X,__zero_reg__
 108:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 2155               		.loc 2 108 0
 2156 0176 2150      		subi r18,1
 2157 0178 3109      		sbc r19,__zero_reg__
 2158               	.LVL198:
 2159 017a 020F      		add r16,r18
 2160 017c 131F      		adc r17,r19
 2161               	.LVL199:
 2162 017e D701      		movw r26,r14
 2163 0180 1996      		adiw r26,8+1
 2164 0182 1C93      		st X,r17
 2165 0184 0E93      		st -X,r16
 2166 0186 1897      		sbiw r26,8
 2167               	.LVL200:
 119:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 2168               		.loc 2 119 0
 2169 0188 2181      		ldd r18,Z+1
 2170 018a 4281      		ldd r20,Z+2
 2171 018c 50E0      		ldi r21,0
 2172 018e 60E0      		ldi r22,0
 2173 0190 70E0      		ldi r23,0
 2174 0192 BA01      		movw r22,r20
 2175 0194 5527      		clr r21
 2176 0196 4427      		clr r20
 2177 0198 522B      		or r21,r18
 2178 019a 2081      		ld r18,Z
 2179 019c 422B      		or r20,r18
 2180 019e 2381      		ldd r18,Z+3
 2181 01a0 722B      		or r23,r18
 2182 01a2 F701      		movw r30,r14
 2183 01a4 4287      		std Z+10,r20
 2184 01a6 5387      		std Z+11,r21
 2185 01a8 6487      		std Z+12,r22
 2186 01aa 7587      		std Z+13,r23
 2187               	.LVL201:
 122:./ros_lib/rosserial_msgs/TopicInfo.h **** 
 2188               		.loc 2 122 0
 2189 01ac 0496      		adiw r24,4
 2190               	.LVL202:
 2191               	/* epilogue start */
 2192 01ae 2C96      		adiw r28,12
 2193 01b0 0FB6      		in __tmp_reg__,__SREG__
 2194 01b2 F894      		cli
 2195 01b4 DEBF      		out __SP_H__,r29
 2196 01b6 0FBE      		out __SREG__,__tmp_reg__
 2197 01b8 CDBF      		out __SP_L__,r28
 2198 01ba DF91      		pop r29
 2199 01bc CF91      		pop r28
 2200 01be 1F91      		pop r17
 2201 01c0 0F91      		pop r16
 2202 01c2 FF90      		pop r15
 2203 01c4 EF90      		pop r14
 2204               	.LVL203:
 2205 01c6 DF90      		pop r13
 2206 01c8 CF90      		pop r12
 2207 01ca BF90      		pop r11
 2208 01cc AF90      		pop r10
 2209 01ce 9F90      		pop r9
 2210 01d0 8F90      		pop r8
 2211               	.LVL204:
 2212 01d2 7F90      		pop r7
 2213 01d4 6F90      		pop r6
 2214 01d6 5F90      		pop r5
 2215 01d8 4F90      		pop r4
 2216 01da 0895      		ret
 2217               		.cfi_endproc
 2218               	.LFE41:
 2220               		.section	.text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh,"axG",@progbits,_ZN14ross
 2221               		.weak	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 2223               	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:
 2224               	.LFB62:
 130:./ros_lib/rosserial_msgs/RequestParam.h ****     {
 2225               		.loc 4 130 0
 2226               		.cfi_startproc
 2227               	.LVL205:
 2228 0000 2F92      		push r2
 2229               	.LCFI86:
 2230               		.cfi_def_cfa_offset 3
 2231               		.cfi_offset 2, -2
 2232 0002 3F92      		push r3
 2233               	.LCFI87:
 2234               		.cfi_def_cfa_offset 4
 2235               		.cfi_offset 3, -3
 2236 0004 4F92      		push r4
 2237               	.LCFI88:
 2238               		.cfi_def_cfa_offset 5
 2239               		.cfi_offset 4, -4
 2240 0006 5F92      		push r5
 2241               	.LCFI89:
 2242               		.cfi_def_cfa_offset 6
 2243               		.cfi_offset 5, -5
 2244 0008 6F92      		push r6
 2245               	.LCFI90:
 2246               		.cfi_def_cfa_offset 7
 2247               		.cfi_offset 6, -6
 2248 000a 7F92      		push r7
 2249               	.LCFI91:
 2250               		.cfi_def_cfa_offset 8
 2251               		.cfi_offset 7, -7
 2252 000c 8F92      		push r8
 2253               	.LCFI92:
 2254               		.cfi_def_cfa_offset 9
 2255               		.cfi_offset 8, -8
 2256 000e 9F92      		push r9
 2257               	.LCFI93:
 2258               		.cfi_def_cfa_offset 10
 2259               		.cfi_offset 9, -9
 2260 0010 AF92      		push r10
 2261               	.LCFI94:
 2262               		.cfi_def_cfa_offset 11
 2263               		.cfi_offset 10, -10
 2264 0012 BF92      		push r11
 2265               	.LCFI95:
 2266               		.cfi_def_cfa_offset 12
 2267               		.cfi_offset 11, -11
 2268 0014 CF92      		push r12
 2269               	.LCFI96:
 2270               		.cfi_def_cfa_offset 13
 2271               		.cfi_offset 12, -12
 2272 0016 DF92      		push r13
 2273               	.LCFI97:
 2274               		.cfi_def_cfa_offset 14
 2275               		.cfi_offset 13, -13
 2276 0018 EF92      		push r14
 2277               	.LCFI98:
 2278               		.cfi_def_cfa_offset 15
 2279               		.cfi_offset 14, -14
 2280 001a FF92      		push r15
 2281               	.LCFI99:
 2282               		.cfi_def_cfa_offset 16
 2283               		.cfi_offset 15, -15
 2284 001c 0F93      		push r16
 2285               	.LCFI100:
 2286               		.cfi_def_cfa_offset 17
 2287               		.cfi_offset 16, -16
 2288 001e 1F93      		push r17
 2289               	.LCFI101:
 2290               		.cfi_def_cfa_offset 18
 2291               		.cfi_offset 17, -17
 2292 0020 CF93      		push r28
 2293               	.LCFI102:
 2294               		.cfi_def_cfa_offset 19
 2295               		.cfi_offset 28, -18
 2296 0022 DF93      		push r29
 2297               	.LCFI103:
 2298               		.cfi_def_cfa_offset 20
 2299               		.cfi_offset 29, -19
 2300 0024 CDB7      		in r28,__SP_L__
 2301 0026 DEB7      		in r29,__SP_H__
 2302               	.LCFI104:
 2303               		.cfi_def_cfa_register 28
 2304 0028 6097      		sbiw r28,16
 2305               	.LCFI105:
 2306               		.cfi_def_cfa_offset 36
 2307 002a 0FB6      		in __tmp_reg__,__SREG__
 2308 002c F894      		cli
 2309 002e DEBF      		out __SP_H__,r29
 2310 0030 0FBE      		out __SREG__,__tmp_reg__
 2311 0032 CDBF      		out __SP_L__,r28
 2312               	/* prologue: function */
 2313               	/* frame size = 16 */
 2314               	/* stack size = 34 */
 2315               	.L__stack_usage = 34
 2316 0034 8C01      		movw r16,r24
 2317 0036 6B01      		movw r12,r22
 2318               	.LVL206:
 136:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints_length);
 2319               		.loc 4 136 0
 2320 0038 DB01      		movw r26,r22
 2321 003a 8D90      		ld r8,X+
 2322 003c 9D90      		ld r9,X+
 2323 003e AD90      		ld r10,X+
 2324 0040 BC90      		ld r11,X
 2325               	.LVL207:
 138:./ros_lib/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 2326               		.loc 4 138 0
 2327 0042 FC01      		movw r30,r24
 2328 0044 8281      		ldd r24,Z+2
 2329 0046 9381      		ldd r25,Z+3
 2330 0048 A481      		ldd r26,Z+4
 2331 004a B581      		ldd r27,Z+5
 2332               	.LVL208:
 2333 004c 8815      		cp r24,r8
 2334 004e 9905      		cpc r25,r9
 2335 0050 AA05      		cpc r26,r10
 2336 0052 BB05      		cpc r27,r11
 2337 0054 00F4      		brsh .L52
 139:./ros_lib/rosserial_msgs/RequestParam.h ****       ints_length = ints_lengthT;
 2338               		.loc 4 139 0
 2339 0056 B401      		movw r22,r8
 2340               	.LVL209:
 2341 0058 660F      		lsl r22
 2342 005a 771F      		rol r23
 2343 005c 660F      		lsl r22
 2344 005e 771F      		rol r23
 2345 0060 8285      		ldd r24,Z+10
 2346 0062 9385      		ldd r25,Z+11
 2347 0064 0E94 0000 		call realloc
 2348               	.LVL210:
 2349 0068 D801      		movw r26,r16
 2350 006a 1B96      		adiw r26,10+1
 2351 006c 9C93      		st X,r25
 2352 006e 8E93      		st -X,r24
 2353 0070 1A97      		sbiw r26,10
 2354               	.L52:
 140:./ros_lib/rosserial_msgs/RequestParam.h ****       for( uint32_t i = 0; i < ints_length; i++){
 2355               		.loc 4 140 0
 2356 0072 F801      		movw r30,r16
 2357 0074 8282      		std Z+2,r8
 2358 0076 9382      		std Z+3,r9
 2359 0078 A482      		std Z+4,r10
 2360 007a B582      		std Z+5,r11
 2361               	.LVL211:
 2362 007c 9601      		movw r18,r12
 2363               	.LBB112:
 141:./ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2364               		.loc 4 141 0
 2365 007e 812C      		mov r8,__zero_reg__
 2366 0080 912C      		mov r9,__zero_reg__
 2367 0082 5401      		movw r10,r8
 2368               	.LBE112:
 137:./ros_lib/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 2369               		.loc 4 137 0
 2370 0084 44E0      		ldi r20,lo8(4)
 2371 0086 50E0      		ldi r21,0
 2372               	.LBB115:
 2373               	.LBB113:
 153:./ros_lib/rosserial_msgs/RequestParam.h ****       }
 2374               		.loc 4 153 0
 2375 0088 B801      		movw r22,r16
 2376 008a 6A5F      		subi r22,-6
 2377 008c 7F4F      		sbci r23,-1
 2378               	.LVL212:
 2379               	.L54:
 2380 008e 2C5F      		subi r18,-4
 2381 0090 3F4F      		sbci r19,-1
 2382               	.LBE113:
 141:./ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2383               		.loc 4 141 0 discriminator 3
 2384 0092 F801      		movw r30,r16
 2385 0094 8281      		ldd r24,Z+2
 2386 0096 9381      		ldd r25,Z+3
 2387 0098 A481      		ldd r26,Z+4
 2388 009a B581      		ldd r27,Z+5
 2389 009c FA01      		movw r30,r20
 2390 009e 3496      		adiw r30,4
 2391 00a0 1F01      		movw r2,r30
 2392 00a2 8816      		cp r8,r24
 2393 00a4 9906      		cpc r9,r25
 2394 00a6 AA06      		cpc r10,r26
 2395 00a8 BB06      		cpc r11,r27
 2396 00aa 00F4      		brsh .L53
 2397               	.LVL213:
 2398               	.LBB114:
 151:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 2399               		.loc 4 151 0 discriminator 2
 2400 00ac D901      		movw r26,r18
 2401 00ae 1196      		adiw r26,1
 2402 00b0 FC90      		ld r15,X
 2403 00b2 1197      		sbiw r26,1
 2404 00b4 1296      		adiw r26,2
 2405 00b6 8C91      		ld r24,X
 2406 00b8 90E0      		ldi r25,0
 2407 00ba A0E0      		ldi r26,0
 2408 00bc B0E0      		ldi r27,0
 2409 00be DC01      		movw r26,r24
 2410 00c0 9927      		clr r25
 2411 00c2 8827      		clr r24
 2412 00c4 9F29      		or r25,r15
 2413 00c6 F901      		movw r30,r18
 2414 00c8 F080      		ld r15,Z
 2415 00ca 8F29      		or r24,r15
 2416 00cc F380      		ldd r15,Z+3
 2417 00ce BF29      		or r27,r15
 2418 00d0 F801      		movw r30,r16
 2419 00d2 8683      		std Z+6,r24
 2420 00d4 9783      		std Z+7,r25
 2421 00d6 A087      		std Z+8,r26
 2422 00d8 B187      		std Z+9,r27
 2423               	.LVL214:
 2424 00da DA01      		movw r26,r20
 2425               	.LVL215:
 2426 00dc A101      		movw r20,r2
 153:./ros_lib/rosserial_msgs/RequestParam.h ****       }
 2427               		.loc 4 153 0 discriminator 2
 2428 00de 1497      		sbiw r26,4
 2429 00e0 8285      		ldd r24,Z+10
 2430 00e2 9385      		ldd r25,Z+11
 2431 00e4 A80F      		add r26,r24
 2432 00e6 B91F      		adc r27,r25
 2433 00e8 84E0      		ldi r24,lo8(4)
 2434 00ea FB01      		movw r30,r22
 2435               		0:
 2436 00ec 0190      		ld r0,Z+
 2437 00ee 0D92      		st X+,r0
 2438 00f0 8A95      		dec r24
 2439 00f2 01F4      		brne 0b
 2440               	.LBE114:
 141:./ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2441               		.loc 4 141 0 discriminator 2
 2442 00f4 FFEF      		ldi r31,-1
 2443 00f6 8F1A      		sub r8,r31
 2444 00f8 9F0A      		sbc r9,r31
 2445 00fa AF0A      		sbc r10,r31
 2446 00fc BF0A      		sbc r11,r31
 2447               	.LVL216:
 2448 00fe 00C0      		rjmp .L54
 2449               	.LVL217:
 2450               	.L53:
 2451               	.LBE115:
 155:./ros_lib/rosserial_msgs/RequestParam.h ****       floats_lengthT |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1); 
 2452               		.loc 4 155 0
 2453 0100 4601      		movw r8,r12
 2454               	.LVL218:
 2455 0102 840E      		add r8,r20
 2456 0104 951E      		adc r9,r21
 2457 0106 D401      		movw r26,r8
 2458 0108 8C91      		ld r24,X
 2459               	.LVL219:
 157:./ros_lib/rosserial_msgs/RequestParam.h ****       floats_lengthT |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3); 
 2460               		.loc 4 157 0
 2461 010a 1196      		adiw r26,1
 2462 010c 9C91      		ld r25,X
 2463 010e 1197      		sbiw r26,1
 2464 0110 1296      		adiw r26,2
 2465 0112 4C90      		ld r4,X
 2466 0114 1297      		sbiw r26,2
 2467 0116 512C      		mov r5,__zero_reg__
 2468 0118 612C      		mov r6,__zero_reg__
 2469 011a 712C      		mov r7,__zero_reg__
 2470 011c 3201      		movw r6,r4
 2471 011e 5524      		clr r5
 2472 0120 4424      		clr r4
 2473 0122 592A      		or r5,r25
 2474 0124 482A      		or r4,r24
 2475               	.LVL220:
 158:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->floats_length);
 2476               		.loc 4 158 0
 2477 0126 1396      		adiw r26,3
 2478 0128 8C91      		ld r24,X
 2479 012a 782A      		or r7,r24
 159:./ros_lib/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 2480               		.loc 4 159 0
 2481 012c 5F01      		movw r10,r30
 2482               	.LVL221:
 160:./ros_lib/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 2483               		.loc 4 160 0
 2484 012e F801      		movw r30,r16
 2485 0130 8485      		ldd r24,Z+12
 2486 0132 9585      		ldd r25,Z+13
 2487 0134 A685      		ldd r26,Z+14
 2488 0136 B785      		ldd r27,Z+15
 2489 0138 8415      		cp r24,r4
 2490 013a 9505      		cpc r25,r5
 2491 013c A605      		cpc r26,r6
 2492 013e B705      		cpc r27,r7
 2493 0140 00F4      		brsh .L55
 2494               	.LVL222:
 161:./ros_lib/rosserial_msgs/RequestParam.h ****       floats_length = floats_lengthT;
 2495               		.loc 4 161 0
 2496 0142 B201      		movw r22,r4
 2497 0144 660F      		lsl r22
 2498 0146 771F      		rol r23
 2499 0148 660F      		lsl r22
 2500 014a 771F      		rol r23
 2501 014c 8489      		ldd r24,Z+20
 2502 014e 9589      		ldd r25,Z+21
 2503 0150 0E94 0000 		call realloc
 2504               	.LVL223:
 2505 0154 D801      		movw r26,r16
 2506 0156 5596      		adiw r26,20+1
 2507 0158 9C93      		st X,r25
 2508 015a 8E93      		st -X,r24
 2509 015c 5497      		sbiw r26,20
 2510               	.L55:
 162:./ros_lib/rosserial_msgs/RequestParam.h ****       for( uint32_t i = 0; i < floats_length; i++){
 2511               		.loc 4 162 0
 2512 015e F801      		movw r30,r16
 2513 0160 4486      		std Z+12,r4
 2514 0162 5586      		std Z+13,r5
 2515 0164 6686      		std Z+14,r6
 2516 0166 7786      		std Z+15,r7
 2517               	.LVL224:
 2518 0168 C401      		movw r24,r8
 2519               	.LBB116:
 163:./ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2520               		.loc 4 163 0
 2521 016a 412C      		mov r4,__zero_reg__
 2522 016c 512C      		mov r5,__zero_reg__
 2523 016e 3201      		movw r6,r4
 2524               	.LVL225:
 2525               	.LBB117:
 175:./ros_lib/rosserial_msgs/RequestParam.h ****       }
 2526               		.loc 4 175 0
 2527 0170 9801      		movw r18,r16
 2528 0172 205F      		subi r18,-16
 2529 0174 3F4F      		sbci r19,-1
 2530               	.LVL226:
 2531               	.L57:
 2532               	.LBE117:
 163:./ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2533               		.loc 4 163 0 discriminator 3
 2534 0176 D801      		movw r26,r16
 2535 0178 1C96      		adiw r26,12
 2536 017a 4D91      		ld r20,X+
 2537 017c 5D91      		ld r21,X+
 2538 017e 6D91      		ld r22,X+
 2539 0180 7C91      		ld r23,X
 2540 0182 1F97      		sbiw r26,12+3
 2541 0184 F501      		movw r30,r10
 2542 0186 3496      		adiw r30,4
 2543 0188 4416      		cp r4,r20
 2544 018a 5506      		cpc r5,r21
 2545 018c 6606      		cpc r6,r22
 2546 018e 7706      		cpc r7,r23
 2547 0190 00F4      		brsh .L56
 2548               	.LVL227:
 2549               	.LBB118:
 172:./ros_lib/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 2550               		.loc 4 172 0 discriminator 2
 2551 0192 DC01      		movw r26,r24
 2552 0194 1596      		adiw r26,5
 2553 0196 FC90      		ld r15,X
 2554 0198 1597      		sbiw r26,5
 2555 019a 1696      		adiw r26,6
 2556 019c 4C91      		ld r20,X
 2557 019e 1697      		sbiw r26,6
 2558 01a0 50E0      		ldi r21,0
 2559 01a2 60E0      		ldi r22,0
 2560 01a4 70E0      		ldi r23,0
 2561 01a6 BA01      		movw r22,r20
 2562 01a8 5527      		clr r21
 2563 01aa 4427      		clr r20
 2564 01ac 5F29      		or r21,r15
 2565 01ae 1496      		adiw r26,4
 2566 01b0 FC90      		ld r15,X
 2567 01b2 1497      		sbiw r26,4
 2568 01b4 4F29      		or r20,r15
 2569 01b6 1796      		adiw r26,7
 2570 01b8 FC90      		ld r15,X
 2571 01ba 7F29      		or r23,r15
 173:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 2572               		.loc 4 173 0 discriminator 2
 2573 01bc D801      		movw r26,r16
 2574 01be 5096      		adiw r26,16
 2575 01c0 4D93      		st X+,r20
 2576 01c2 5D93      		st X+,r21
 2577 01c4 6D93      		st X+,r22
 2578 01c6 7C93      		st X,r23
 2579 01c8 5397      		sbiw r26,16+3
 2580               	.LVL228:
 2581 01ca 5F01      		movw r10,r30
 175:./ros_lib/rosserial_msgs/RequestParam.h ****       }
 2582               		.loc 4 175 0 discriminator 2
 2583 01cc AC01      		movw r20,r24
 2584 01ce 4819      		sub r20,r8
 2585 01d0 5909      		sbc r21,r9
 2586 01d2 5496      		adiw r26,20
 2587 01d4 0D90      		ld __tmp_reg__,X+
 2588 01d6 BC91      		ld r27,X
 2589 01d8 A02D      		mov r26,__tmp_reg__
 2590 01da A40F      		add r26,r20
 2591 01dc B51F      		adc r27,r21
 2592 01de 44E0      		ldi r20,lo8(4)
 2593 01e0 F901      		movw r30,r18
 2594               	.LVL229:
 2595               		0:
 2596 01e2 0190      		ld r0,Z+
 2597 01e4 0D92      		st X+,r0
 2598 01e6 4A95      		dec r20
 2599 01e8 01F4      		brne 0b
 2600               	.LBE118:
 163:./ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2601               		.loc 4 163 0 discriminator 2
 2602 01ea BFEF      		ldi r27,-1
 2603 01ec 4B1A      		sub r4,r27
 2604 01ee 5B0A      		sbc r5,r27
 2605 01f0 6B0A      		sbc r6,r27
 2606 01f2 7B0A      		sbc r7,r27
 2607               	.LVL230:
 2608 01f4 0496      		adiw r24,4
 2609 01f6 00C0      		rjmp .L57
 2610               	.LVL231:
 2611               	.L56:
 2612               	.LBE116:
 177:./ros_lib/rosserial_msgs/RequestParam.h ****       strings_lengthT |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1); 
 2613               		.loc 4 177 0
 2614 01f8 D601      		movw r26,r12
 2615 01fa AA0D      		add r26,r10
 2616 01fc BB1D      		adc r27,r11
 2617 01fe 8C91      		ld r24,X
 2618               	.LVL232:
 179:./ros_lib/rosserial_msgs/RequestParam.h ****       strings_lengthT |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3); 
 2619               		.loc 4 179 0
 2620 0200 1196      		adiw r26,1
 2621 0202 9C91      		ld r25,X
 2622 0204 1197      		sbiw r26,1
 2623 0206 1296      		adiw r26,2
 2624 0208 8C90      		ld r8,X
 2625 020a 1297      		sbiw r26,2
 2626 020c 912C      		mov r9,__zero_reg__
 2627 020e A12C      		mov r10,__zero_reg__
 2628 0210 B12C      		mov r11,__zero_reg__
 2629 0212 5401      		movw r10,r8
 2630 0214 9924      		clr r9
 2631 0216 8824      		clr r8
 2632 0218 992A      		or r9,r25
 2633 021a 882A      		or r8,r24
 2634               	.LVL233:
 180:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->strings_length);
 2635               		.loc 4 180 0
 2636 021c 1396      		adiw r26,3
 2637 021e 8C91      		ld r24,X
 2638 0220 B82A      		or r11,r24
 181:./ros_lib/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 2639               		.loc 4 181 0
 2640 0222 7F01      		movw r14,r30
 2641               	.LVL234:
 182:./ros_lib/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 2642               		.loc 4 182 0
 2643 0224 F801      		movw r30,r16
 2644               	.LVL235:
 2645 0226 8689      		ldd r24,Z+22
 2646 0228 9789      		ldd r25,Z+23
 2647 022a A08D      		ldd r26,Z+24
 2648 022c B18D      		ldd r27,Z+25
 2649 022e 8815      		cp r24,r8
 2650 0230 9905      		cpc r25,r9
 2651 0232 AA05      		cpc r26,r10
 2652 0234 BB05      		cpc r27,r11
 2653 0236 00F4      		brsh .L58
 183:./ros_lib/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 2654               		.loc 4 183 0
 2655 0238 B401      		movw r22,r8
 2656 023a 660F      		lsl r22
 2657 023c 771F      		rol r23
 2658 023e 848D      		ldd r24,Z+28
 2659 0240 958D      		ldd r25,Z+29
 2660 0242 0E94 0000 		call realloc
 2661               	.LVL236:
 2662 0246 D801      		movw r26,r16
 2663 0248 5D96      		adiw r26,28+1
 2664 024a 9C93      		st X,r25
 2665 024c 8E93      		st -X,r24
 2666 024e 5C97      		sbiw r26,28
 2667               	.L58:
 184:./ros_lib/rosserial_msgs/RequestParam.h ****       for( uint32_t i = 0; i < strings_length; i++){
 2668               		.loc 4 184 0
 2669 0250 F801      		movw r30,r16
 2670 0252 868A      		std Z+22,r8
 2671 0254 978A      		std Z+23,r9
 2672 0256 A08E      		std Z+24,r10
 2673 0258 B18E      		std Z+25,r11
 2674               	.LVL237:
 2675 025a 212C      		mov r2,__zero_reg__
 2676 025c 312C      		mov r3,__zero_reg__
 2677               	.LBB119:
 185:./ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 2678               		.loc 4 185 0
 2679 025e 812C      		mov r8,__zero_reg__
 2680 0260 912C      		mov r9,__zero_reg__
 2681 0262 5401      		movw r10,r8
 2682               	.LVL238:
 2683               	.LBB120:
 195:./ros_lib/rosserial_msgs/RequestParam.h ****       }
 2684               		.loc 4 195 0
 2685 0264 9801      		movw r18,r16
 2686 0266 265E      		subi r18,-26
 2687 0268 3F4F      		sbci r19,-1
 2688 026a 3A87      		std Y+10,r19
 2689 026c 2987      		std Y+9,r18
 2690               	.LVL239:
 2691               	.L62:
 2692               	.LBE120:
 185:./ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 2693               		.loc 4 185 0 discriminator 1
 2694 026e F801      		movw r30,r16
 2695 0270 8689      		ldd r24,Z+22
 2696 0272 9789      		ldd r25,Z+23
 2697 0274 A08D      		ldd r26,Z+24
 2698 0276 B18D      		ldd r27,Z+25
 2699 0278 8816      		cp r8,r24
 2700 027a 9906      		cpc r9,r25
 2701 027c AA06      		cpc r10,r26
 2702 027e BB06      		cpc r11,r27
 2703 0280 00F0      		brlo .+2
 2704 0282 00C0      		rjmp .L59
 2705               	.LBB122:
 187:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 2706               		.loc 4 187 0
 2707 0284 B601      		movw r22,r12
 2708 0286 6E0D      		add r22,r14
 2709 0288 7F1D      		adc r23,r15
 2710 028a CE01      		movw r24,r28
 2711 028c 0196      		adiw r24,1
 2712 028e 0E94 0000 		call _ZN3ros3Msg8arrToVarImPhEEvRT_T0_
 2713               	.LVL240:
 188:./ros_lib/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 2714               		.loc 4 188 0
 2715 0292 9701      		movw r18,r14
 2716 0294 2C5F      		subi r18,-4
 2717 0296 3F4F      		sbci r19,-1
 2718 0298 388B      		std Y+16,r19
 2719 029a 2F87      		std Y+15,r18
 2720               	.LVL241:
 2721               	.LBB121:
 189:./ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 2722               		.loc 4 189 0
 2723 029c 4981      		ldd r20,Y+1
 2724 029e 5A81      		ldd r21,Y+2
 2725 02a0 6B81      		ldd r22,Y+3
 2726 02a2 7C81      		ldd r23,Y+4
 2727 02a4 C901      		movw r24,r18
 2728 02a6 330F      		lsl r19
 2729 02a8 AA0B      		sbc r26,r26
 2730 02aa BB0B      		sbc r27,r27
 2731 02ac 2C01      		movw r4,r24
 2732 02ae 3D01      		movw r6,r26
 2733 02b0 440E      		add r4,r20
 2734 02b2 551E      		adc r5,r21
 2735 02b4 661E      		adc r6,r22
 2736 02b6 771E      		adc r7,r23
 2737 02b8 4B86      		std Y+11,r4
 2738 02ba 5C86      		std Y+12,r5
 2739 02bc 6D86      		std Y+13,r6
 2740 02be 7E86      		std Y+14,r7
 2741 02c0 23E0      		ldi r18,3
 2742 02c2 E20E      		add r14,r18
 2743 02c4 F11C      		adc r15,__zero_reg__
 2744               	.LVL242:
 2745 02c6 F601      		movw r30,r12
 2746 02c8 EE0D      		add r30,r14
 2747 02ca FF1D      		adc r31,r15
 2748 02cc 2F85      		ldd r18,Y+15
 2749 02ce 3889      		ldd r19,Y+16
 2750               	.LVL243:
 2751               	.L61:
 189:./ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 2752               		.loc 4 189 0 is_stmt 0 discriminator 3
 2753 02d0 C901      		movw r24,r18
 2754 02d2 A0E0      		ldi r26,0
 2755 02d4 B0E0      		ldi r27,0
 2756 02d6 4B84      		ldd r4,Y+11
 2757 02d8 5C84      		ldd r5,Y+12
 2758 02da 6D84      		ldd r6,Y+13
 2759 02dc 7E84      		ldd r7,Y+14
 2760 02de 8415      		cp r24,r4
 2761 02e0 9505      		cpc r25,r5
 2762 02e2 A605      		cpc r26,r6
 2763 02e4 B705      		cpc r27,r7
 2764 02e6 00F4      		brsh .L60
 190:./ros_lib/rosserial_msgs/RequestParam.h ****       }
 2765               		.loc 4 190 0 is_stmt 1 discriminator 2
 2766 02e8 A181      		ldd r26,Z+1
 2767 02ea A193      		st Z+,r26
 189:./ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 2768               		.loc 4 189 0 discriminator 2
 2769 02ec 2F5F      		subi r18,-1
 2770 02ee 3F4F      		sbci r19,-1
 2771               	.LVL244:
 2772 02f0 00C0      		rjmp .L61
 2773               	.L60:
 2774               	.LBE121:
 192:./ros_lib/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 2775               		.loc 4 192 0 discriminator 2
 2776 02f2 6F84      		ldd r6,Y+15
 2777 02f4 7888      		ldd r7,Y+16
 2778 02f6 460D      		add r20,r6
 2779 02f8 571D      		adc r21,r7
 2780 02fa F601      		movw r30,r12
 2781 02fc E40F      		add r30,r20
 2782 02fe F51F      		adc r31,r21
 2783 0300 3197      		sbiw r30,1
 2784 0302 1082      		st Z,__zero_reg__
 193:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 2785               		.loc 4 193 0 discriminator 2
 2786 0304 C301      		movw r24,r6
 2787 0306 0197      		sbiw r24,1
 2788 0308 8C0D      		add r24,r12
 2789 030a 9D1D      		adc r25,r13
 2790 030c D801      		movw r26,r16
 2791 030e 5B96      		adiw r26,26+1
 2792 0310 9C93      		st X,r25
 2793 0312 8E93      		st -X,r24
 2794 0314 5A97      		sbiw r26,26
 194:./ros_lib/rosserial_msgs/RequestParam.h ****         memcpy( &(this->strings[i]), &(this->st_strings), sizeof(char*));
 2795               		.loc 4 194 0 discriminator 2
 2796 0316 7A01      		movw r14,r20
 2797               	.LVL245:
 195:./ros_lib/rosserial_msgs/RequestParam.h ****       }
 2798               		.loc 4 195 0 discriminator 2
 2799 0318 5C96      		adiw r26,28
 2800 031a ED91      		ld r30,X+
 2801 031c FC91      		ld r31,X
 2802 031e 5D97      		sbiw r26,28+1
 2803 0320 E20D      		add r30,r2
 2804 0322 F31D      		adc r31,r3
 2805 0324 A985      		ldd r26,Y+9
 2806 0326 BA85      		ldd r27,Y+10
 2807 0328 8D91      		ld r24,X+
 2808 032a 9C91      		ld r25,X
 2809 032c 9183      		std Z+1,r25
 2810 032e 8083      		st Z,r24
 2811               	.LBE122:
 185:./ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 2812               		.loc 4 185 0 discriminator 2
 2813 0330 BFEF      		ldi r27,-1
 2814 0332 8B1A      		sub r8,r27
 2815 0334 9B0A      		sbc r9,r27
 2816 0336 AB0A      		sbc r10,r27
 2817 0338 BB0A      		sbc r11,r27
 2818               	.LVL246:
 2819 033a E2E0      		ldi r30,2
 2820 033c 2E0E      		add r2,r30
 2821 033e 311C      		adc r3,__zero_reg__
 2822 0340 00C0      		rjmp .L62
 2823               	.LVL247:
 2824               	.L59:
 2825               	.LBE119:
 198:./ros_lib/rosserial_msgs/RequestParam.h **** 
 2826               		.loc 4 198 0
 2827 0342 C701      		movw r24,r14
 2828               	/* epilogue start */
 2829 0344 6096      		adiw r28,16
 2830 0346 0FB6      		in __tmp_reg__,__SREG__
 2831 0348 F894      		cli
 2832 034a DEBF      		out __SP_H__,r29
 2833 034c 0FBE      		out __SREG__,__tmp_reg__
 2834 034e CDBF      		out __SP_L__,r28
 2835 0350 DF91      		pop r29
 2836 0352 CF91      		pop r28
 2837 0354 1F91      		pop r17
 2838 0356 0F91      		pop r16
 2839               	.LVL248:
 2840 0358 FF90      		pop r15
 2841 035a EF90      		pop r14
 2842               	.LVL249:
 2843 035c DF90      		pop r13
 2844 035e CF90      		pop r12
 2845               	.LVL250:
 2846 0360 BF90      		pop r11
 2847 0362 AF90      		pop r10
 2848 0364 9F90      		pop r9
 2849 0366 8F90      		pop r8
 2850               	.LVL251:
 2851 0368 7F90      		pop r7
 2852 036a 6F90      		pop r6
 2853 036c 5F90      		pop r5
 2854 036e 4F90      		pop r4
 2855 0370 3F90      		pop r3
 2856 0372 2F90      		pop r2
 2857 0374 0895      		ret
 2858               		.cfi_endproc
 2859               	.LFE62:
 2861               		.section	.text._ZN8std_msgs6String11deserializeEPh,"axG",@progbits,_ZN8std_msgs6String11deserializ
 2862               		.weak	_ZN8std_msgs6String11deserializeEPh
 2864               	_ZN8std_msgs6String11deserializeEPh:
 2865               	.LFB136:
  34:./ros_lib/std_msgs/String.h ****     {
 2866               		.loc 5 34 0
 2867               		.cfi_startproc
 2868               	.LVL252:
 2869 0000 4F92      		push r4
 2870               	.LCFI106:
 2871               		.cfi_def_cfa_offset 3
 2872               		.cfi_offset 4, -2
 2873 0002 5F92      		push r5
 2874               	.LCFI107:
 2875               		.cfi_def_cfa_offset 4
 2876               		.cfi_offset 5, -3
 2877 0004 6F92      		push r6
 2878               	.LCFI108:
 2879               		.cfi_def_cfa_offset 5
 2880               		.cfi_offset 6, -4
 2881 0006 7F92      		push r7
 2882               	.LCFI109:
 2883               		.cfi_def_cfa_offset 6
 2884               		.cfi_offset 7, -5
 2885 0008 8F92      		push r8
 2886               	.LCFI110:
 2887               		.cfi_def_cfa_offset 7
 2888               		.cfi_offset 8, -6
 2889 000a 9F92      		push r9
 2890               	.LCFI111:
 2891               		.cfi_def_cfa_offset 8
 2892               		.cfi_offset 9, -7
 2893 000c AF92      		push r10
 2894               	.LCFI112:
 2895               		.cfi_def_cfa_offset 9
 2896               		.cfi_offset 10, -8
 2897 000e BF92      		push r11
 2898               	.LCFI113:
 2899               		.cfi_def_cfa_offset 10
 2900               		.cfi_offset 11, -9
 2901 0010 EF92      		push r14
 2902               	.LCFI114:
 2903               		.cfi_def_cfa_offset 11
 2904               		.cfi_offset 14, -10
 2905 0012 FF92      		push r15
 2906               	.LCFI115:
 2907               		.cfi_def_cfa_offset 12
 2908               		.cfi_offset 15, -11
 2909 0014 0F93      		push r16
 2910               	.LCFI116:
 2911               		.cfi_def_cfa_offset 13
 2912               		.cfi_offset 16, -12
 2913 0016 1F93      		push r17
 2914               	.LCFI117:
 2915               		.cfi_def_cfa_offset 14
 2916               		.cfi_offset 17, -13
 2917 0018 CF93      		push r28
 2918               	.LCFI118:
 2919               		.cfi_def_cfa_offset 15
 2920               		.cfi_offset 28, -14
 2921 001a DF93      		push r29
 2922               	.LCFI119:
 2923               		.cfi_def_cfa_offset 16
 2924               		.cfi_offset 29, -15
 2925 001c 00D0      		rcall .
 2926 001e 00D0      		rcall .
 2927               	.LCFI120:
 2928               		.cfi_def_cfa_offset 20
 2929 0020 CDB7      		in r28,__SP_L__
 2930 0022 DEB7      		in r29,__SP_H__
 2931               	.LCFI121:
 2932               		.cfi_def_cfa_register 28
 2933               	/* prologue: function */
 2934               	/* frame size = 4 */
 2935               	/* stack size = 18 */
 2936               	.L__stack_usage = 18
 2937 0024 7C01      		movw r14,r24
 2938 0026 8B01      		movw r16,r22
 2939               	.LVL253:
  38:./ros_lib/std_msgs/String.h ****       offset += 4;
 2940               		.loc 5 38 0
 2941 0028 CE01      		movw r24,r28
 2942               	.LVL254:
 2943 002a 0196      		adiw r24,1
 2944 002c 0E94 0000 		call _ZN3ros3Msg8arrToVarImPhEEvRT_T0_
 2945               	.LVL255:
 2946               	.LBB123:
  40:./ros_lib/std_msgs/String.h ****           inbuffer[k-1]=inbuffer[k];
 2947               		.loc 5 40 0
 2948 0030 8981      		ldd r24,Y+1
 2949 0032 9A81      		ldd r25,Y+2
 2950 0034 AB81      		ldd r26,Y+3
 2951 0036 BC81      		ldd r27,Y+4
 2952 0038 4C01      		movw r8,r24
 2953 003a 5D01      		movw r10,r26
 2954 003c 24E0      		ldi r18,4
 2955 003e 820E      		add r8,r18
 2956 0040 911C      		adc r9,__zero_reg__
 2957 0042 A11C      		adc r10,__zero_reg__
 2958 0044 B11C      		adc r11,__zero_reg__
 2959 0046 A801      		movw r20,r16
 2960 0048 4D5F      		subi r20,-3
 2961 004a 5F4F      		sbci r21,-1
 2962 004c FA01      		movw r30,r20
 2963 004e 24E0      		ldi r18,lo8(4)
 2964 0050 30E0      		ldi r19,0
 2965               	.LVL256:
 2966               	.L65:
  40:./ros_lib/std_msgs/String.h ****           inbuffer[k-1]=inbuffer[k];
 2967               		.loc 5 40 0 is_stmt 0 discriminator 3
 2968 0052 2901      		movw r4,r18
 2969 0054 612C      		mov r6,__zero_reg__
 2970 0056 712C      		mov r7,__zero_reg__
 2971 0058 4814      		cp r4,r8
 2972 005a 5904      		cpc r5,r9
 2973 005c 6A04      		cpc r6,r10
 2974 005e 7B04      		cpc r7,r11
 2975 0060 00F4      		brsh .L64
  41:./ros_lib/std_msgs/String.h ****       }
 2976               		.loc 5 41 0 is_stmt 1 discriminator 2
 2977 0062 6181      		ldd r22,Z+1
 2978 0064 6193      		st Z+,r22
  40:./ros_lib/std_msgs/String.h ****           inbuffer[k-1]=inbuffer[k];
 2979               		.loc 5 40 0 discriminator 2
 2980 0066 2F5F      		subi r18,-1
 2981 0068 3F4F      		sbci r19,-1
 2982               	.LVL257:
 2983 006a 00C0      		rjmp .L65
 2984               	.LVL258:
 2985               	.L64:
 2986               	.LBE123:
  43:./ros_lib/std_msgs/String.h ****       this->data = (char *)(inbuffer + offset-1);
 2987               		.loc 5 43 0
 2988 006c F801      		movw r30,r16
 2989 006e E80F      		add r30,r24
 2990 0070 F91F      		adc r31,r25
 2991 0072 1382      		std Z+3,__zero_reg__
  44:./ros_lib/std_msgs/String.h ****       offset += length_data;
 2992               		.loc 5 44 0
 2993 0074 F701      		movw r30,r14
 2994 0076 5383      		std Z+3,r21
 2995 0078 4283      		std Z+2,r20
 2996               	.LVL259:
  47:./ros_lib/std_msgs/String.h **** 
 2997               		.loc 5 47 0
 2998 007a 0496      		adiw r24,4
 2999               	.LVL260:
 3000               	/* epilogue start */
 3001 007c 0F90      		pop __tmp_reg__
 3002 007e 0F90      		pop __tmp_reg__
 3003 0080 0F90      		pop __tmp_reg__
 3004 0082 0F90      		pop __tmp_reg__
 3005 0084 DF91      		pop r29
 3006 0086 CF91      		pop r28
 3007               	.LVL261:
 3008 0088 1F91      		pop r17
 3009               	.LVL262:
 3010 008a 0F91      		pop r16
 3011               	.LVL263:
 3012 008c FF90      		pop r15
 3013               	.LVL264:
 3014 008e EF90      		pop r14
 3015               	.LVL265:
 3016 0090 BF90      		pop r11
 3017               	.LVL266:
 3018 0092 AF90      		pop r10
 3019               	.LVL267:
 3020 0094 9F90      		pop r9
 3021               	.LVL268:
 3022 0096 8F90      		pop r8
 3023               	.LVL269:
 3024 0098 7F90      		pop r7
 3025               	.LVL270:
 3026 009a 6F90      		pop r6
 3027               	.LVL271:
 3028 009c 5F90      		pop r5
 3029               	.LVL272:
 3030 009e 4F90      		pop r4
 3031               	.LVL273:
 3032 00a0 0895      		ret
 3033               		.cfi_endproc
 3034               	.LFE136:
 3036               		.section	.text._ZN3ros11NodeHandle_I17Atmega32AHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv,
 3037               		.weak	_ZN3ros11NodeHandle_I17Atmega32AHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv
 3039               	_ZN3ros11NodeHandle_I17Atmega32AHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv:
 3040               	.LFB156:
 354:./ros_lib/ros/node_handle.h ****   {
 3041               		.loc 6 354 0
 3042               		.cfi_startproc
 3043               	.LVL274:
 3044 0000 0F93      		push r16
 3045               	.LCFI122:
 3046               		.cfi_def_cfa_offset 3
 3047               		.cfi_offset 16, -2
 3048 0002 1F93      		push r17
 3049               	.LCFI123:
 3050               		.cfi_def_cfa_offset 4
 3051               		.cfi_offset 17, -3
 3052 0004 CF93      		push r28
 3053               	.LCFI124:
 3054               		.cfi_def_cfa_offset 5
 3055               		.cfi_offset 28, -4
 3056 0006 DF93      		push r29
 3057               	.LCFI125:
 3058               		.cfi_def_cfa_offset 6
 3059               		.cfi_offset 29, -5
 3060 0008 CDB7      		in r28,__SP_L__
 3061 000a DEB7      		in r29,__SP_H__
 3062               	.LCFI126:
 3063               		.cfi_def_cfa_register 28
 3064 000c 2A97      		sbiw r28,10
 3065               	.LCFI127:
 3066               		.cfi_def_cfa_offset 16
 3067 000e 0FB6      		in __tmp_reg__,__SREG__
 3068 0010 F894      		cli
 3069 0012 DEBF      		out __SP_H__,r29
 3070 0014 0FBE      		out __SREG__,__tmp_reg__
 3071 0016 CDBF      		out __SP_L__,r28
 3072               	/* prologue: function */
 3073               	/* frame size = 10 */
 3074               	/* stack size = 14 */
 3075               	.L__stack_usage = 14
 3076 0018 8C01      		movw r16,r24
 3077               	.LVL275:
 3078               	.LBB133:
 3079               	.LBB134:
  20:./ros_lib/std_msgs/Time.h ****     {
 3080               		.loc 1 20 0
 3081 001a 80E0      		ldi r24,lo8(_ZTVN8std_msgs4TimeE+4)
 3082 001c 90E0      		ldi r25,hi8(_ZTVN8std_msgs4TimeE+4)
 3083               	.LVL276:
 3084 001e 9A83      		std Y+2,r25
 3085 0020 8983      		std Y+1,r24
 3086               	.LVL277:
 3087               	.LBB135:
 3088               	.LBB136:
 3089               		.file 10 "./ros_lib/ros/time.h"
   1:./ros_lib/ros/time.h **** /*
   2:./ros_lib/ros/time.h ****  * Software License Agreement (BSD License)
   3:./ros_lib/ros/time.h ****  *
   4:./ros_lib/ros/time.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./ros_lib/ros/time.h ****  * All rights reserved.
   6:./ros_lib/ros/time.h ****  *
   7:./ros_lib/ros/time.h ****  * Redistribution and use in source and binary forms, with or without
   8:./ros_lib/ros/time.h ****  * modification, are permitted provided that the following conditions
   9:./ros_lib/ros/time.h ****  * are met:
  10:./ros_lib/ros/time.h ****  *
  11:./ros_lib/ros/time.h ****  *  * Redistributions of source code must retain the above copyright
  12:./ros_lib/ros/time.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./ros_lib/ros/time.h ****  *  * Redistributions in binary form must reproduce the above
  14:./ros_lib/ros/time.h ****  *    copyright notice, this list of conditions and the following
  15:./ros_lib/ros/time.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./ros_lib/ros/time.h ****  *    with the distribution.
  17:./ros_lib/ros/time.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./ros_lib/ros/time.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./ros_lib/ros/time.h ****  *    from this software without specific prior written permission.
  20:./ros_lib/ros/time.h ****  *
  21:./ros_lib/ros/time.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./ros_lib/ros/time.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./ros_lib/ros/time.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./ros_lib/ros/time.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./ros_lib/ros/time.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./ros_lib/ros/time.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./ros_lib/ros/time.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./ros_lib/ros/time.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./ros_lib/ros/time.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./ros_lib/ros/time.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./ros_lib/ros/time.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./ros_lib/ros/time.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./ros_lib/ros/time.h ****  */
  34:./ros_lib/ros/time.h **** 
  35:./ros_lib/ros/time.h **** #ifndef ROS_TIME_H_
  36:./ros_lib/ros/time.h **** #define ROS_TIME_H_
  37:./ros_lib/ros/time.h **** 
  38:./ros_lib/ros/time.h **** #include "ros/duration.h"
  39:./ros_lib/ros/time.h **** #include <math.h>
  40:./ros_lib/ros/time.h **** #include <stdint.h>
  41:./ros_lib/ros/time.h **** 
  42:./ros_lib/ros/time.h **** namespace ros
  43:./ros_lib/ros/time.h **** {
  44:./ros_lib/ros/time.h **** void normalizeSecNSec(uint32_t &sec, uint32_t &nsec);
  45:./ros_lib/ros/time.h **** 
  46:./ros_lib/ros/time.h **** class Time
  47:./ros_lib/ros/time.h **** {
  48:./ros_lib/ros/time.h **** public:
  49:./ros_lib/ros/time.h ****   uint32_t sec, nsec;
  50:./ros_lib/ros/time.h **** 
  51:./ros_lib/ros/time.h ****   Time() : sec(0), nsec(0) {}
 3090               		.loc 10 51 0
 3091 0022 1B82      		std Y+3,__zero_reg__
 3092 0024 1C82      		std Y+4,__zero_reg__
 3093 0026 1D82      		std Y+5,__zero_reg__
 3094 0028 1E82      		std Y+6,__zero_reg__
 3095 002a 1F82      		std Y+7,__zero_reg__
 3096 002c 1886      		std Y+8,__zero_reg__
 3097 002e 1986      		std Y+9,__zero_reg__
 3098 0030 1A86      		std Y+10,__zero_reg__
 3099               	.LVL278:
 3100               	.LBE136:
 3101               	.LBE135:
 3102               	.LBE134:
 3103               	.LBE133:
 357:./ros_lib/ros/node_handle.h ****     rt_time = hardware_.time();
 3104               		.loc 6 357 0
 3105 0032 D801      		movw r26,r16
 3106 0034 ED91      		ld r30,X+
 3107 0036 FC91      		ld r31,X
 3108 0038 0190      		ld __tmp_reg__,Z+
 3109 003a F081      		ld r31,Z
 3110 003c E02D      		mov r30,__tmp_reg__
 3111 003e AE01      		movw r20,r28
 3112 0040 4F5F      		subi r20,-1
 3113 0042 5F4F      		sbci r21,-1
 3114 0044 6AE0      		ldi r22,lo8(10)
 3115 0046 70E0      		ldi r23,0
 3116 0048 C801      		movw r24,r16
 3117 004a 0995      		icall
 3118               	.LVL279:
 3119               	.LBB137:
 3120               	.LBB138:
  40:Atmega32Hardware.h ****       }
  41:Atmega32Hardware.h ****     }
  42:Atmega32Hardware.h **** 
  43:Atmega32Hardware.h **** 
  44:Atmega32Hardware.h ****     // Returns milliseconds since start of program
  45:Atmega32Hardware.h ****     unsigned long time()
  46:Atmega32Hardware.h ****     {
  47:Atmega32Hardware.h ****       return avr_time_now();
 3121               		.loc 7 47 0
 3122 004c 0E94 0000 		call avr_time_now
 3123               	.LVL280:
 3124               	.LBE138:
 3125               	.LBE137:
 358:./ros_lib/ros/node_handle.h ****   }
 3126               		.loc 6 358 0
 3127 0050 F801      		movw r30,r16
 3128 0052 6383      		std Z+3,r22
 3129 0054 7483      		std Z+4,r23
 3130 0056 8583      		std Z+5,r24
 3131 0058 9683      		std Z+6,r25
 3132               	/* epilogue start */
 359:./ros_lib/ros/node_handle.h **** 
 3133               		.loc 6 359 0
 3134 005a 2A96      		adiw r28,10
 3135 005c 0FB6      		in __tmp_reg__,__SREG__
 3136 005e F894      		cli
 3137 0060 DEBF      		out __SP_H__,r29
 3138 0062 0FBE      		out __SREG__,__tmp_reg__
 3139 0064 CDBF      		out __SP_L__,r28
 3140 0066 DF91      		pop r29
 3141 0068 CF91      		pop r28
 3142 006a 1F91      		pop r17
 3143 006c 0F91      		pop r16
 3144               	.LVL281:
 3145 006e 0895      		ret
 3146               		.cfi_endproc
 3147               	.LFE156:
 3149               		.section	.rodata.str1.1
 3150               	.LC10:
 3151 0128 00        		.string	""
 3152               		.section	.text._ZN3ros11NodeHandle_I17Atmega32AHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv,
 3153               		.weak	_ZN3ros11NodeHandle_I17Atmega32AHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv
 3155               	_ZN3ros11NodeHandle_I17Atmega32AHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv:
 3156               	.LFB157:
 445:./ros_lib/ros/node_handle.h ****   {
 3157               		.loc 6 445 0
 3158               		.cfi_startproc
 3159               	.LVL282:
 3160 0000 4F92      		push r4
 3161               	.LCFI128:
 3162               		.cfi_def_cfa_offset 3
 3163               		.cfi_offset 4, -2
 3164 0002 5F92      		push r5
 3165               	.LCFI129:
 3166               		.cfi_def_cfa_offset 4
 3167               		.cfi_offset 5, -3
 3168 0004 6F92      		push r6
 3169               	.LCFI130:
 3170               		.cfi_def_cfa_offset 5
 3171               		.cfi_offset 6, -4
 3172 0006 7F92      		push r7
 3173               	.LCFI131:
 3174               		.cfi_def_cfa_offset 6
 3175               		.cfi_offset 7, -5
 3176 0008 AF92      		push r10
 3177               	.LCFI132:
 3178               		.cfi_def_cfa_offset 7
 3179               		.cfi_offset 10, -6
 3180 000a BF92      		push r11
 3181               	.LCFI133:
 3182               		.cfi_def_cfa_offset 8
 3183               		.cfi_offset 11, -7
 3184 000c CF92      		push r12
 3185               	.LCFI134:
 3186               		.cfi_def_cfa_offset 9
 3187               		.cfi_offset 12, -8
 3188 000e DF92      		push r13
 3189               	.LCFI135:
 3190               		.cfi_def_cfa_offset 10
 3191               		.cfi_offset 13, -9
 3192 0010 EF92      		push r14
 3193               	.LCFI136:
 3194               		.cfi_def_cfa_offset 11
 3195               		.cfi_offset 14, -10
 3196 0012 FF92      		push r15
 3197               	.LCFI137:
 3198               		.cfi_def_cfa_offset 12
 3199               		.cfi_offset 15, -11
 3200 0014 0F93      		push r16
 3201               	.LCFI138:
 3202               		.cfi_def_cfa_offset 13
 3203               		.cfi_offset 16, -12
 3204 0016 1F93      		push r17
 3205               	.LCFI139:
 3206               		.cfi_def_cfa_offset 14
 3207               		.cfi_offset 17, -13
 3208 0018 CF93      		push r28
 3209               	.LCFI140:
 3210               		.cfi_def_cfa_offset 15
 3211               		.cfi_offset 28, -14
 3212 001a DF93      		push r29
 3213               	.LCFI141:
 3214               		.cfi_def_cfa_offset 16
 3215               		.cfi_offset 29, -15
 3216 001c CDB7      		in r28,__SP_L__
 3217 001e DEB7      		in r29,__SP_H__
 3218               	.LCFI142:
 3219               		.cfi_def_cfa_register 28
 3220 0020 2E97      		sbiw r28,14
 3221               	.LCFI143:
 3222               		.cfi_def_cfa_offset 30
 3223 0022 0FB6      		in __tmp_reg__,__SREG__
 3224 0024 F894      		cli
 3225 0026 DEBF      		out __SP_H__,r29
 3226 0028 0FBE      		out __SREG__,__tmp_reg__
 3227 002a CDBF      		out __SP_L__,r28
 3228               	/* prologue: function */
 3229               	/* frame size = 14 */
 3230               	/* stack size = 28 */
 3231               	.L__stack_usage = 28
 3232 002c 8C01      		movw r16,r24
 3233               	.LVL283:
 3234               	.LBB144:
 3235               	.LBB145:
  39:./ros_lib/rosserial_msgs/TopicInfo.h ****     {
 3236               		.loc 2 39 0
 3237 002e 80E0      		ldi r24,lo8(_ZTVN14rosserial_msgs9TopicInfoE+4)
 3238 0030 90E0      		ldi r25,hi8(_ZTVN14rosserial_msgs9TopicInfoE+4)
 3239               	.LVL284:
 3240 0032 9A83      		std Y+2,r25
 3241 0034 8983      		std Y+1,r24
 3242 0036 1C82      		std Y+4,__zero_reg__
 3243 0038 1B82      		std Y+3,__zero_reg__
 3244 003a 80E0      		ldi r24,lo8(.LC10)
 3245 003c 90E0      		ldi r25,hi8(.LC10)
 3246 003e 9E83      		std Y+6,r25
 3247 0040 8D83      		std Y+5,r24
 3248 0042 9887      		std Y+8,r25
 3249 0044 8F83      		std Y+7,r24
 3250 0046 9A87      		std Y+10,r25
 3251 0048 8987      		std Y+9,r24
 3252 004a 1B86      		std Y+11,__zero_reg__
 3253 004c 1C86      		std Y+12,__zero_reg__
 3254 004e 1D86      		std Y+13,__zero_reg__
 3255 0050 1E86      		std Y+14,__zero_reg__
 3256               	.LVL285:
 3257 0052 6801      		movw r12,r16
 3258 0054 8DEE      		ldi r24,-19
 3259 0056 C81A      		sub r12,r24
 3260 0058 8BEF      		ldi r24,-5
 3261 005a D80A      		sbc r13,r24
 3262 005c 7801      		movw r14,r16
 3263 005e ABEB      		ldi r26,-69
 3264 0060 EA1A      		sub r14,r26
 3265 0062 ABEF      		ldi r26,-5
 3266 0064 FA0A      		sbc r15,r26
 3267               	.LBE145:
 3268               	.LBE144:
 457:./ros_lib/ros/node_handle.h ****         publish(publishers[i]->getEndpointType(), &ti);
 3269               		.loc 6 457 0
 3270 0066 412C      		mov r4,__zero_reg__
 3271 0068 92E0      		ldi r25,lo8(2)
 3272 006a 592E      		mov r5,r25
 3273 006c 612C      		mov r6,__zero_reg__
 3274 006e 712C      		mov r7,__zero_reg__
 3275               	.LVL286:
 3276               	.L69:
 451:./ros_lib/ros/node_handle.h ****       {
 3277               		.loc 6 451 0
 3278 0070 D601      		movw r26,r12
 3279 0072 ED91      		ld r30,X+
 3280 0074 FC91      		ld r31,X
 3281 0076 3097      		sbiw r30,0
 3282 0078 01F0      		breq .L68
 453:./ros_lib/ros/node_handle.h ****         ti.topic_name = (char *) publishers[i]->topic_;
 3283               		.loc 6 453 0
 3284 007a 8481      		ldd r24,Z+4
 3285 007c 9581      		ldd r25,Z+5
 3286 007e 9C83      		std Y+4,r25
 3287 0080 8B83      		std Y+3,r24
 454:./ros_lib/ros/node_handle.h ****         ti.message_type = (char *) publishers[i]->msg_->getType();
 3288               		.loc 6 454 0
 3289 0082 8081      		ld r24,Z
 3290 0084 9181      		ldd r25,Z+1
 3291 0086 9E83      		std Y+6,r25
 3292 0088 8D83      		std Y+5,r24
 455:./ros_lib/ros/node_handle.h ****         ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 3293               		.loc 6 455 0
 3294 008a 8281      		ldd r24,Z+2
 3295 008c 9381      		ldd r25,Z+3
 3296 008e DC01      		movw r26,r24
 3297 0090 ED91      		ld r30,X+
 3298 0092 FC91      		ld r31,X
 3299 0094 0480      		ldd __tmp_reg__,Z+4
 3300 0096 F581      		ldd r31,Z+5
 3301 0098 E02D      		mov r30,__tmp_reg__
 3302 009a 0995      		icall
 3303               	.LVL287:
 3304 009c 9887      		std Y+8,r25
 3305 009e 8F83      		std Y+7,r24
 456:./ros_lib/ros/node_handle.h ****         ti.buffer_size = OUTPUT_SIZE;
 3306               		.loc 6 456 0
 3307 00a0 D601      		movw r26,r12
 3308 00a2 ED91      		ld r30,X+
 3309 00a4 FC91      		ld r31,X
 3310 00a6 8281      		ldd r24,Z+2
 3311 00a8 9381      		ldd r25,Z+3
 3312 00aa DC01      		movw r26,r24
 3313 00ac ED91      		ld r30,X+
 3314 00ae FC91      		ld r31,X
 3315 00b0 0680      		ldd __tmp_reg__,Z+6
 3316 00b2 F781      		ldd r31,Z+7
 3317 00b4 E02D      		mov r30,__tmp_reg__
 3318 00b6 0995      		icall
 3319               	.LVL288:
 3320 00b8 9A87      		std Y+10,r25
 3321 00ba 8987      		std Y+9,r24
 457:./ros_lib/ros/node_handle.h ****         publish(publishers[i]->getEndpointType(), &ti);
 3322               		.loc 6 457 0
 3323 00bc 4B86      		std Y+11,r4
 3324 00be 5C86      		std Y+12,r5
 3325 00c0 6D86      		std Y+13,r6
 3326 00c2 7E86      		std Y+14,r7
 3327               	.LVL289:
 3328 00c4 D601      		movw r26,r12
 3329 00c6 ED91      		ld r30,X+
 3330 00c8 FC91      		ld r31,X
 458:./ros_lib/ros/node_handle.h ****       }
 3331               		.loc 6 458 0
 3332 00ca 6085      		ldd r22,Z+8
 3333 00cc 7185      		ldd r23,Z+9
 3334 00ce D801      		movw r26,r16
 3335 00d0 ED91      		ld r30,X+
 3336 00d2 FC91      		ld r31,X
 3337 00d4 0190      		ld __tmp_reg__,Z+
 3338 00d6 F081      		ld r31,Z
 3339 00d8 E02D      		mov r30,__tmp_reg__
 3340 00da AE01      		movw r20,r28
 3341 00dc 4F5F      		subi r20,-1
 3342 00de 5F4F      		sbci r21,-1
 3343 00e0 C801      		movw r24,r16
 3344 00e2 0995      		icall
 3345               	.LVL290:
 3346               	.L68:
 3347 00e4 B2E0      		ldi r27,2
 3348 00e6 CB0E      		add r12,r27
 3349 00e8 D11C      		adc r13,__zero_reg__
 449:./ros_lib/ros/node_handle.h ****     {
 3350               		.loc 6 449 0 discriminator 2
 3351 00ea CE14      		cp r12,r14
 3352 00ec DF04      		cpc r13,r15
 3353 00ee 01F0      		breq .+2
 3354 00f0 00C0      		rjmp .L69
 3355 00f2 6801      		movw r12,r16
 3356 00f4 E9E8      		ldi r30,-119
 3357 00f6 CE1A      		sub r12,r30
 3358 00f8 EBEF      		ldi r30,-5
 3359 00fa DE0A      		sbc r13,r30
 469:./ros_lib/ros/node_handle.h ****         publish(subscribers[i]->getEndpointType(), &ti);
 3360               		.loc 6 469 0
 3361 00fc 412C      		mov r4,__zero_reg__
 3362 00fe 82E0      		ldi r24,lo8(2)
 3363 0100 582E      		mov r5,r24
 3364 0102 612C      		mov r6,__zero_reg__
 3365 0104 712C      		mov r7,__zero_reg__
 3366               	.L71:
 463:./ros_lib/ros/node_handle.h ****       {
 3367               		.loc 6 463 0
 3368 0106 F701      		movw r30,r14
 3369 0108 A081      		ld r26,Z
 3370 010a B181      		ldd r27,Z+1
 3371 010c 1097      		sbiw r26,0
 3372 010e 01F0      		breq .L70
 465:./ros_lib/ros/node_handle.h ****         ti.topic_name = (char *) subscribers[i]->topic_;
 3373               		.loc 6 465 0
 3374 0110 1296      		adiw r26,2
 3375 0112 8D91      		ld r24,X+
 3376 0114 9C91      		ld r25,X
 3377 0116 1397      		sbiw r26,2+1
 3378 0118 9C83      		std Y+4,r25
 3379 011a 8B83      		std Y+3,r24
 466:./ros_lib/ros/node_handle.h ****         ti.message_type = (char *) subscribers[i]->getMsgType();
 3380               		.loc 6 466 0
 3381 011c 1496      		adiw r26,4
 3382 011e 8D91      		ld r24,X+
 3383 0120 9C91      		ld r25,X
 3384 0122 1597      		sbiw r26,4+1
 3385 0124 9E83      		std Y+6,r25
 3386 0126 8D83      		std Y+5,r24
 467:./ros_lib/ros/node_handle.h ****         ti.md5sum = (char *) subscribers[i]->getMsgMD5();
 3387               		.loc 6 467 0
 3388 0128 ED91      		ld r30,X+
 3389 012a FC91      		ld r31,X
 3390 012c 1197      		sbiw r26,1
 3391 012e 0480      		ldd __tmp_reg__,Z+4
 3392 0130 F581      		ldd r31,Z+5
 3393 0132 E02D      		mov r30,__tmp_reg__
 3394 0134 CD01      		movw r24,r26
 3395 0136 0995      		icall
 3396               	.LVL291:
 3397 0138 9887      		std Y+8,r25
 3398 013a 8F83      		std Y+7,r24
 468:./ros_lib/ros/node_handle.h ****         ti.buffer_size = INPUT_SIZE;
 3399               		.loc 6 468 0
 3400 013c D701      		movw r26,r14
 3401 013e 8D91      		ld r24,X+
 3402 0140 9C91      		ld r25,X
 3403 0142 DC01      		movw r26,r24
 3404 0144 ED91      		ld r30,X+
 3405 0146 FC91      		ld r31,X
 3406 0148 0680      		ldd __tmp_reg__,Z+6
 3407 014a F781      		ldd r31,Z+7
 3408 014c E02D      		mov r30,__tmp_reg__
 3409 014e 0995      		icall
 3410               	.LVL292:
 3411 0150 9A87      		std Y+10,r25
 3412 0152 8987      		std Y+9,r24
 469:./ros_lib/ros/node_handle.h ****         publish(subscribers[i]->getEndpointType(), &ti);
 3413               		.loc 6 469 0
 3414 0154 4B86      		std Y+11,r4
 3415 0156 5C86      		std Y+12,r5
 3416 0158 6D86      		std Y+13,r6
 3417 015a 7E86      		std Y+14,r7
 470:./ros_lib/ros/node_handle.h ****       }
 3418               		.loc 6 470 0
 3419 015c D801      		movw r26,r16
 3420 015e ED91      		ld r30,X+
 3421 0160 FC91      		ld r31,X
 3422 0162 A080      		ld r10,Z
 3423 0164 B180      		ldd r11,Z+1
 3424 0166 F701      		movw r30,r14
 3425 0168 8081      		ld r24,Z
 3426 016a 9181      		ldd r25,Z+1
 3427 016c DC01      		movw r26,r24
 3428 016e ED91      		ld r30,X+
 3429 0170 FC91      		ld r31,X
 3430 0172 0280      		ldd __tmp_reg__,Z+2
 3431 0174 F381      		ldd r31,Z+3
 3432 0176 E02D      		mov r30,__tmp_reg__
 3433 0178 0995      		icall
 3434               	.LVL293:
 3435 017a AE01      		movw r20,r28
 3436 017c 4F5F      		subi r20,-1
 3437 017e 5F4F      		sbci r21,-1
 3438 0180 BC01      		movw r22,r24
 3439 0182 C801      		movw r24,r16
 3440 0184 F501      		movw r30,r10
 3441 0186 0995      		icall
 3442               	.LVL294:
 3443               	.L70:
 3444 0188 F2E0      		ldi r31,2
 3445 018a EF0E      		add r14,r31
 3446 018c F11C      		adc r15,__zero_reg__
 461:./ros_lib/ros/node_handle.h ****     {
 3447               		.loc 6 461 0 discriminator 2
 3448 018e CE14      		cp r12,r14
 3449 0190 DF04      		cpc r13,r15
 3450 0192 01F0      		breq .+2
 3451 0194 00C0      		rjmp .L71
 473:./ros_lib/ros/node_handle.h ****   }
 3452               		.loc 6 473 0
 3453 0196 F801      		movw r30,r16
 3454 0198 EF57      		subi r30,127
 3455 019a FB4F      		sbci r31,-5
 3456 019c 81E0      		ldi r24,lo8(1)
 3457 019e 8083      		st Z,r24
 3458               	/* epilogue start */
 474:./ros_lib/ros/node_handle.h **** 
 3459               		.loc 6 474 0
 3460 01a0 2E96      		adiw r28,14
 3461 01a2 0FB6      		in __tmp_reg__,__SREG__
 3462 01a4 F894      		cli
 3463 01a6 DEBF      		out __SP_H__,r29
 3464 01a8 0FBE      		out __SREG__,__tmp_reg__
 3465 01aa CDBF      		out __SP_L__,r28
 3466 01ac DF91      		pop r29
 3467 01ae CF91      		pop r28
 3468 01b0 1F91      		pop r17
 3469 01b2 0F91      		pop r16
 3470               	.LVL295:
 3471 01b4 FF90      		pop r15
 3472 01b6 EF90      		pop r14
 3473 01b8 DF90      		pop r13
 3474 01ba CF90      		pop r12
 3475               	.LVL296:
 3476 01bc BF90      		pop r11
 3477 01be AF90      		pop r10
 3478 01c0 7F90      		pop r7
 3479 01c2 6F90      		pop r6
 3480 01c4 5F90      		pop r5
 3481 01c6 4F90      		pop r4
 3482 01c8 0895      		ret
 3483               		.cfi_endproc
 3484               	.LFE157:
 3486               		.section	.text._ZN3ros11NodeHandle_I17Atmega32AHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh,"axG",@
 3487               		.weak	_ZN3ros11NodeHandle_I17Atmega32AHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh
 3489               	_ZN3ros11NodeHandle_I17Atmega32AHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh:
 3490               	.LFB158:
 361:./ros_lib/ros/node_handle.h ****   {
 3491               		.loc 6 361 0
 3492               		.cfi_startproc
 3493               	.LVL297:
 3494 0000 8F92      		push r8
 3495               	.LCFI144:
 3496               		.cfi_def_cfa_offset 3
 3497               		.cfi_offset 8, -2
 3498 0002 9F92      		push r9
 3499               	.LCFI145:
 3500               		.cfi_def_cfa_offset 4
 3501               		.cfi_offset 9, -3
 3502 0004 AF92      		push r10
 3503               	.LCFI146:
 3504               		.cfi_def_cfa_offset 5
 3505               		.cfi_offset 10, -4
 3506 0006 BF92      		push r11
 3507               	.LCFI147:
 3508               		.cfi_def_cfa_offset 6
 3509               		.cfi_offset 11, -5
 3510 0008 CF92      		push r12
 3511               	.LCFI148:
 3512               		.cfi_def_cfa_offset 7
 3513               		.cfi_offset 12, -6
 3514 000a DF92      		push r13
 3515               	.LCFI149:
 3516               		.cfi_def_cfa_offset 8
 3517               		.cfi_offset 13, -7
 3518 000c EF92      		push r14
 3519               	.LCFI150:
 3520               		.cfi_def_cfa_offset 9
 3521               		.cfi_offset 14, -8
 3522 000e FF92      		push r15
 3523               	.LCFI151:
 3524               		.cfi_def_cfa_offset 10
 3525               		.cfi_offset 15, -9
 3526 0010 0F93      		push r16
 3527               	.LCFI152:
 3528               		.cfi_def_cfa_offset 11
 3529               		.cfi_offset 16, -10
 3530 0012 1F93      		push r17
 3531               	.LCFI153:
 3532               		.cfi_def_cfa_offset 12
 3533               		.cfi_offset 17, -11
 3534 0014 CF93      		push r28
 3535               	.LCFI154:
 3536               		.cfi_def_cfa_offset 13
 3537               		.cfi_offset 28, -12
 3538 0016 DF93      		push r29
 3539               	.LCFI155:
 3540               		.cfi_def_cfa_offset 14
 3541               		.cfi_offset 29, -13
 3542 0018 CDB7      		in r28,__SP_L__
 3543 001a DEB7      		in r29,__SP_H__
 3544               	.LCFI156:
 3545               		.cfi_def_cfa_register 28
 3546 001c 2A97      		sbiw r28,10
 3547               	.LCFI157:
 3548               		.cfi_def_cfa_offset 24
 3549 001e 0FB6      		in __tmp_reg__,__SREG__
 3550 0020 F894      		cli
 3551 0022 DEBF      		out __SP_H__,r29
 3552 0024 0FBE      		out __SREG__,__tmp_reg__
 3553 0026 CDBF      		out __SP_L__,r28
 3554               	/* prologue: function */
 3555               	/* frame size = 10 */
 3556               	/* stack size = 22 */
 3557               	.L__stack_usage = 22
 3558 0028 8C01      		movw r16,r24
 3559 002a 5B01      		movw r10,r22
 3560               	.LVL298:
 3561               	.LBB161:
 3562               	.LBB162:
  20:./ros_lib/std_msgs/Time.h ****     {
 3563               		.loc 1 20 0
 3564 002c 80E0      		ldi r24,lo8(_ZTVN8std_msgs4TimeE+4)
 3565 002e 90E0      		ldi r25,hi8(_ZTVN8std_msgs4TimeE+4)
 3566               	.LVL299:
 3567 0030 9A83      		std Y+2,r25
 3568 0032 8983      		std Y+1,r24
 3569               	.LVL300:
 3570               	.LBB163:
 3571               	.LBB164:
 3572               		.loc 10 51 0
 3573 0034 1B82      		std Y+3,__zero_reg__
 3574 0036 1C82      		std Y+4,__zero_reg__
 3575 0038 1D82      		std Y+5,__zero_reg__
 3576 003a 1E82      		std Y+6,__zero_reg__
 3577 003c 1F82      		std Y+7,__zero_reg__
 3578 003e 1886      		std Y+8,__zero_reg__
 3579 0040 1986      		std Y+9,__zero_reg__
 3580 0042 1A86      		std Y+10,__zero_reg__
 3581               	.LVL301:
 3582               	.LBE164:
 3583               	.LBE163:
 3584               	.LBE162:
 3585               	.LBE161:
 3586               	.LBB165:
 3587               	.LBB166:
 3588               		.loc 7 47 0
 3589 0044 0E94 0000 		call avr_time_now
 3590               	.LVL302:
 3591               	.LBE166:
 3592               	.LBE165:
 364:./ros_lib/ros/node_handle.h **** 
 3593               		.loc 6 364 0
 3594 0048 F801      		movw r30,r16
 3595 004a C380      		ldd r12,Z+3
 3596 004c D480      		ldd r13,Z+4
 3597 004e E580      		ldd r14,Z+5
 3598 0050 F680      		ldd r15,Z+6
 3599 0052 9B01      		movw r18,r22
 3600 0054 AC01      		movw r20,r24
 3601 0056 2C19      		sub r18,r12
 3602 0058 3D09      		sbc r19,r13
 3603 005a 4E09      		sbc r20,r14
 3604 005c 5F09      		sbc r21,r15
 3605 005e 6901      		movw r12,r18
 3606 0060 7A01      		movw r14,r20
 3607               	.LVL303:
 366:./ros_lib/ros/node_handle.h ****     t.data.sec += offset / 1000;
 3608               		.loc 6 366 0
 3609 0062 B501      		movw r22,r10
 3610 0064 CE01      		movw r24,r28
 3611 0066 0196      		adiw r24,1
 3612 0068 0E94 0000 		call _ZN8std_msgs4Time11deserializeEPh
 3613               	.LVL304:
 367:./ros_lib/ros/node_handle.h ****     t.data.nsec += (offset % 1000) * 1000000UL;
 3614               		.loc 6 367 0
 3615 006c 88EE      		ldi r24,lo8(-24)
 3616 006e 882E      		mov r8,r24
 3617 0070 83E0      		ldi r24,lo8(3)
 3618 0072 982E      		mov r9,r24
 3619 0074 A12C      		mov r10,__zero_reg__
 3620 0076 B12C      		mov r11,__zero_reg__
 3621 0078 C701      		movw r24,r14
 3622 007a B601      		movw r22,r12
 3623 007c A501      		movw r20,r10
 3624 007e 9401      		movw r18,r8
 3625 0080 0E94 0000 		call __udivmodsi4
 3626 0084 CB80      		ldd r12,Y+3
 3627 0086 DC80      		ldd r13,Y+4
 3628 0088 ED80      		ldd r14,Y+5
 3629 008a FE80      		ldd r15,Y+6
 3630               	.LVL305:
 3631 008c C20E      		add r12,r18
 3632 008e D31E      		adc r13,r19
 3633 0090 E41E      		adc r14,r20
 3634 0092 F51E      		adc r15,r21
 3635 0094 CB82      		std Y+3,r12
 3636 0096 DC82      		std Y+4,r13
 3637 0098 ED82      		std Y+5,r14
 3638 009a FE82      		std Y+6,r15
 368:./ros_lib/ros/node_handle.h **** 
 3639               		.loc 6 368 0
 3640 009c 9B01      		movw r18,r22
 3641 009e AC01      		movw r20,r24
 3642 00a0 60E4      		ldi r22,lo8(64)
 3643 00a2 72E4      		ldi r23,lo8(66)
 3644 00a4 8FE0      		ldi r24,lo8(15)
 3645 00a6 90E0      		ldi r25,0
 3646 00a8 0E94 0000 		call __mulsi3
 3647 00ac CF80      		ldd r12,Y+7
 3648 00ae D884      		ldd r13,Y+8
 3649 00b0 E984      		ldd r14,Y+9
 3650 00b2 FA84      		ldd r15,Y+10
 3651 00b4 DC01      		movw r26,r24
 3652 00b6 CB01      		movw r24,r22
 3653 00b8 8C0D      		add r24,r12
 3654 00ba 9D1D      		adc r25,r13
 3655 00bc AE1D      		adc r26,r14
 3656 00be BF1D      		adc r27,r15
 3657 00c0 8F83      		std Y+7,r24
 3658 00c2 9887      		std Y+8,r25
 3659 00c4 A987      		std Y+9,r26
 3660 00c6 BA87      		std Y+10,r27
 3661               	.LVL306:
 3662               	.LBB167:
 3663               	.LBB168:
 3664               	.LBB169:
 3665               	.LBB170:
 3666               		.loc 7 47 0
 3667 00c8 0E94 0000 		call avr_time_now
 3668               	.LVL307:
 3669               	.LBE170:
 3670               	.LBE169:
 387:./ros_lib/ros/node_handle.h ****     nsec_offset = new_now.nsec - (ms % 1000) * 1000000UL + 1000000000UL;
 3671               		.loc 6 387 0
 3672 00cc CB80      		ldd r12,Y+3
 3673 00ce DC80      		ldd r13,Y+4
 3674 00d0 ED80      		ldd r14,Y+5
 3675 00d2 FE80      		ldd r15,Y+6
 3676 00d4 31E0      		ldi r19,1
 3677 00d6 C31A      		sub r12,r19
 3678 00d8 D108      		sbc r13,__zero_reg__
 3679 00da E108      		sbc r14,__zero_reg__
 3680 00dc F108      		sbc r15,__zero_reg__
 3681 00de A501      		movw r20,r10
 3682 00e0 9401      		movw r18,r8
 3683 00e2 0E94 0000 		call __udivmodsi4
 3684 00e6 C21A      		sub r12,r18
 3685 00e8 D30A      		sbc r13,r19
 3686 00ea E40A      		sbc r14,r20
 3687 00ec F50A      		sbc r15,r21
 3688 00ee F801      		movw r30,r16
 3689 00f0 C782      		std Z+7,r12
 3690 00f2 D086      		std Z+8,r13
 3691 00f4 E186      		std Z+9,r14
 3692 00f6 F286      		std Z+10,r15
 388:./ros_lib/ros/node_handle.h ****     normalizeSecNSec(sec_offset, nsec_offset);
 3693               		.loc 6 388 0
 3694 00f8 CF80      		ldd r12,Y+7
 3695 00fa D884      		ldd r13,Y+8
 3696 00fc E984      		ldd r14,Y+9
 3697 00fe FA84      		ldd r15,Y+10
 3698 0100 F6E3      		ldi r31,54
 3699 0102 DF1A      		sub r13,r31
 3700 0104 F5E6      		ldi r31,101
 3701 0106 EF0A      		sbc r14,r31
 3702 0108 F4EC      		ldi r31,-60
 3703 010a FF0A      		sbc r15,r31
 3704 010c 9B01      		movw r18,r22
 3705 010e AC01      		movw r20,r24
 3706 0110 60E4      		ldi r22,lo8(64)
 3707 0112 72E4      		ldi r23,lo8(66)
 3708 0114 8FE0      		ldi r24,lo8(15)
 3709 0116 90E0      		ldi r25,0
 3710 0118 0E94 0000 		call __mulsi3
 3711 011c C61A      		sub r12,r22
 3712 011e D70A      		sbc r13,r23
 3713 0120 E80A      		sbc r14,r24
 3714 0122 F90A      		sbc r15,r25
 3715 0124 F801      		movw r30,r16
 3716 0126 C386      		std Z+11,r12
 3717 0128 D486      		std Z+12,r13
 3718 012a E586      		std Z+13,r14
 3719 012c F686      		std Z+14,r15
 389:./ros_lib/ros/node_handle.h ****   }
 3720               		.loc 6 389 0
 3721 012e B801      		movw r22,r16
 3722 0130 655F      		subi r22,-11
 3723 0132 7F4F      		sbci r23,-1
 3724 0134 C801      		movw r24,r16
 3725 0136 0796      		adiw r24,7
 3726 0138 0E94 0000 		call _ZN3ros16normalizeSecNSecERmS0_
 3727               	.LVL308:
 3728               	.LBE168:
 3729               	.LBE167:
 3730               	.LBB171:
 3731               	.LBB172:
 3732               		.loc 7 47 0
 3733 013c 0E94 0000 		call avr_time_now
 3734               	.LVL309:
 3735               	.LBE172:
 3736               	.LBE171:
 371:./ros_lib/ros/node_handle.h ****   }
 3737               		.loc 6 371 0
 3738 0140 F801      		movw r30,r16
 3739 0142 EA57      		subi r30,122
 3740 0144 FB4F      		sbci r31,-5
 3741 0146 6083      		st Z,r22
 3742 0148 7183      		std Z+1,r23
 3743 014a 8283      		std Z+2,r24
 3744 014c 9383      		std Z+3,r25
 3745               	/* epilogue start */
 372:./ros_lib/ros/node_handle.h **** 
 3746               		.loc 6 372 0
 3747 014e 2A96      		adiw r28,10
 3748 0150 0FB6      		in __tmp_reg__,__SREG__
 3749 0152 F894      		cli
 3750 0154 DEBF      		out __SP_H__,r29
 3751 0156 0FBE      		out __SREG__,__tmp_reg__
 3752 0158 CDBF      		out __SP_L__,r28
 3753 015a DF91      		pop r29
 3754 015c CF91      		pop r28
 3755 015e 1F91      		pop r17
 3756 0160 0F91      		pop r16
 3757               	.LVL310:
 3758 0162 FF90      		pop r15
 3759 0164 EF90      		pop r14
 3760 0166 DF90      		pop r13
 3761 0168 CF90      		pop r12
 3762 016a BF90      		pop r11
 3763 016c AF90      		pop r10
 3764               	.LVL311:
 3765 016e 9F90      		pop r9
 3766 0170 8F90      		pop r8
 3767 0172 0895      		ret
 3768               		.cfi_endproc
 3769               	.LFE158:
 3771               		.section	.text._ZN3ros11NodeHandle_I17Atmega32AHardwareLi25ELi25ELi512ELi512EE8spinOnceEv,"axG",@p
 3772               		.weak	_ZN3ros11NodeHandle_I17Atmega32AHardwareLi25ELi25ELi512ELi512EE8spinOnceEv
 3774               	_ZN3ros11NodeHandle_I17Atmega32AHardwareLi25ELi25ELi512ELi512EE8spinOnceEv:
 3775               	.LFB155:
 189:./ros_lib/ros/node_handle.h ****   {
 3776               		.loc 6 189 0
 3777               		.cfi_startproc
 3778               	.LVL312:
 3779 0000 2F92      		push r2
 3780               	.LCFI158:
 3781               		.cfi_def_cfa_offset 3
 3782               		.cfi_offset 2, -2
 3783 0002 3F92      		push r3
 3784               	.LCFI159:
 3785               		.cfi_def_cfa_offset 4
 3786               		.cfi_offset 3, -3
 3787 0004 4F92      		push r4
 3788               	.LCFI160:
 3789               		.cfi_def_cfa_offset 5
 3790               		.cfi_offset 4, -4
 3791 0006 5F92      		push r5
 3792               	.LCFI161:
 3793               		.cfi_def_cfa_offset 6
 3794               		.cfi_offset 5, -5
 3795 0008 6F92      		push r6
 3796               	.LCFI162:
 3797               		.cfi_def_cfa_offset 7
 3798               		.cfi_offset 6, -6
 3799 000a 7F92      		push r7
 3800               	.LCFI163:
 3801               		.cfi_def_cfa_offset 8
 3802               		.cfi_offset 7, -7
 3803 000c 8F92      		push r8
 3804               	.LCFI164:
 3805               		.cfi_def_cfa_offset 9
 3806               		.cfi_offset 8, -8
 3807 000e 9F92      		push r9
 3808               	.LCFI165:
 3809               		.cfi_def_cfa_offset 10
 3810               		.cfi_offset 9, -9
 3811 0010 AF92      		push r10
 3812               	.LCFI166:
 3813               		.cfi_def_cfa_offset 11
 3814               		.cfi_offset 10, -10
 3815 0012 BF92      		push r11
 3816               	.LCFI167:
 3817               		.cfi_def_cfa_offset 12
 3818               		.cfi_offset 11, -11
 3819 0014 CF92      		push r12
 3820               	.LCFI168:
 3821               		.cfi_def_cfa_offset 13
 3822               		.cfi_offset 12, -12
 3823 0016 DF92      		push r13
 3824               	.LCFI169:
 3825               		.cfi_def_cfa_offset 14
 3826               		.cfi_offset 13, -13
 3827 0018 EF92      		push r14
 3828               	.LCFI170:
 3829               		.cfi_def_cfa_offset 15
 3830               		.cfi_offset 14, -14
 3831 001a FF92      		push r15
 3832               	.LCFI171:
 3833               		.cfi_def_cfa_offset 16
 3834               		.cfi_offset 15, -15
 3835 001c 0F93      		push r16
 3836               	.LCFI172:
 3837               		.cfi_def_cfa_offset 17
 3838               		.cfi_offset 16, -16
 3839 001e 1F93      		push r17
 3840               	.LCFI173:
 3841               		.cfi_def_cfa_offset 18
 3842               		.cfi_offset 17, -17
 3843 0020 CF93      		push r28
 3844               	.LCFI174:
 3845               		.cfi_def_cfa_offset 19
 3846               		.cfi_offset 28, -18
 3847 0022 DF93      		push r29
 3848               	.LCFI175:
 3849               		.cfi_def_cfa_offset 20
 3850               		.cfi_offset 29, -19
 3851 0024 CDB7      		in r28,__SP_L__
 3852 0026 DEB7      		in r29,__SP_H__
 3853               	.LCFI176:
 3854               		.cfi_def_cfa_register 28
 3855 0028 6297      		sbiw r28,18
 3856               	.LCFI177:
 3857               		.cfi_def_cfa_offset 38
 3858 002a 0FB6      		in __tmp_reg__,__SREG__
 3859 002c F894      		cli
 3860 002e DEBF      		out __SP_H__,r29
 3861 0030 0FBE      		out __SREG__,__tmp_reg__
 3862 0032 CDBF      		out __SP_L__,r28
 3863               	/* prologue: function */
 3864               	/* frame size = 18 */
 3865               	/* stack size = 36 */
 3866               	.L__stack_usage = 36
 3867 0034 9A8B      		std Y+18,r25
 3868 0036 898B      		std Y+17,r24
 3869               	.LVL313:
 3870               	.LBB173:
 3871               	.LBB174:
 3872               		.loc 7 47 0
 3873 0038 0E94 0000 		call avr_time_now
 3874               	.LVL314:
 3875 003c 4B01      		movw r8,r22
 3876 003e 5C01      		movw r10,r24
 3877               	.LBE174:
 3878               	.LBE173:
 193:./ros_lib/ros/node_handle.h ****     {
 3879               		.loc 6 193 0
 3880 0040 2989      		ldd r18,Y+17
 3881 0042 3A89      		ldd r19,Y+18
 3882 0044 2A57      		subi r18,122
 3883 0046 3B4F      		sbci r19,-5
 3884 0048 3C83      		std Y+4,r19
 3885 004a 2B83      		std Y+3,r18
 3886 004c F901      		movw r30,r18
 3887 004e 8081      		ld r24,Z
 3888 0050 9181      		ldd r25,Z+1
 3889 0052 A281      		ldd r26,Z+2
 3890 0054 B381      		ldd r27,Z+3
 3891 0056 A501      		movw r20,r10
 3892 0058 9401      		movw r18,r8
 3893 005a 281B      		sub r18,r24
 3894 005c 390B      		sbc r19,r25
 3895 005e 4A0B      		sbc r20,r26
 3896 0060 5B0B      		sbc r21,r27
 3897 0062 DA01      		movw r26,r20
 3898 0064 C901      		movw r24,r18
 3899 0066 893F      		cpi r24,-7
 3900 0068 9A42      		sbci r25,42
 3901 006a A105      		cpc r26,__zero_reg__
 3902 006c B105      		cpc r27,__zero_reg__
 3903 006e 00F0      		brlo .L82
 195:./ros_lib/ros/node_handle.h ****     }
 3904               		.loc 6 195 0
 3905 0070 E989      		ldd r30,Y+17
 3906 0072 FA89      		ldd r31,Y+18
 3907 0074 EF57      		subi r30,127
 3908 0076 FB4F      		sbci r31,-5
 3909 0078 1082      		st Z,__zero_reg__
 3910               	.L82:
 199:./ros_lib/ros/node_handle.h ****     {
 3911               		.loc 6 199 0
 3912 007a 0989      		ldd r16,Y+17
 3913 007c 1A89      		ldd r17,Y+18
 3914 007e 0958      		subi r16,-119
 3915 0080 1B4F      		sbci r17,-5
 3916 0082 D801      		movw r26,r16
 3917 0084 8D91      		ld r24,X+
 3918 0086 9C91      		ld r25,X
 3919 0088 892B      		or r24,r25
 3920 008a 01F0      		breq .L83
 201:./ros_lib/ros/node_handle.h ****       {
 3921               		.loc 6 201 0
 3922 008c E989      		ldd r30,Y+17
 3923 008e FA89      		ldd r31,Y+18
 3924 0090 E657      		subi r30,118
 3925 0092 FB4F      		sbci r31,-5
 3926 0094 8081      		ld r24,Z
 3927 0096 9181      		ldd r25,Z+1
 3928 0098 A281      		ldd r26,Z+2
 3929 009a B381      		ldd r27,Z+3
 3930 009c 8815      		cp r24,r8
 3931 009e 9905      		cpc r25,r9
 3932 00a0 AA05      		cpc r26,r10
 3933 00a2 BB05      		cpc r27,r11
 3934 00a4 00F4      		brsh .L83
 203:./ros_lib/ros/node_handle.h ****       }
 3935               		.loc 6 203 0
 3936 00a6 F801      		movw r30,r16
 3937 00a8 1182      		std Z+1,__zero_reg__
 3938 00aa 1082      		st Z,__zero_reg__
 3939               	.L83:
 3940               	.LBB175:
 311:./ros_lib/ros/node_handle.h ****             syncTime(message_in);
 3941               		.loc 6 311 0
 3942 00ac 1A82      		std Y+2,__zero_reg__
 3943 00ae 1982      		std Y+1,__zero_reg__
 229:./ros_lib/ros/node_handle.h ****       if (mode_ == MODE_MESSAGE)          /* message data being recieved */
 3944               		.loc 6 229 0
 3945 00b0 6988      		ldd r6,Y+17
 3946 00b2 7A88      		ldd r7,Y+18
 3947 00b4 F1E8      		ldi r31,-127
 3948 00b6 6F1A      		sub r6,r31
 3949 00b8 FBEF      		ldi r31,-5
 3950 00ba 7F0A      		sbc r7,r31
 301:./ros_lib/ros/node_handle.h ****           {
 3951               		.loc 6 301 0
 3952 00bc C988      		ldd r12,Y+17
 3953 00be DA88      		ldd r13,Y+18
 3954 00c0 25E8      		ldi r18,-123
 3955 00c2 C21A      		sub r12,r18
 3956 00c4 2BEF      		ldi r18,-5
 3957 00c6 D20A      		sbc r13,r18
 327:./ros_lib/ros/node_handle.h ****           }
 3958               		.loc 6 327 0
 3959 00c8 4988      		ldd r4,Y+17
 3960 00ca 5A88      		ldd r5,Y+18
 3961 00cc 33E1      		ldi r19,19
 3962 00ce 430E      		add r4,r19
 3963 00d0 511C      		adc r5,__zero_reg__
 321:./ros_lib/ros/node_handle.h ****             tx_stop_requested = true;
 3964               		.loc 6 321 0
 3965 00d2 4989      		ldd r20,Y+17
 3966 00d4 5A89      		ldd r21,Y+18
 3967 00d6 4F57      		subi r20,127
 3968 00d8 5B4F      		sbci r21,-5
 3969 00da 5E83      		std Y+6,r21
 3970 00dc 4D83      		std Y+5,r20
 316:./ros_lib/ros/node_handle.h ****             param_received = true;
 3971               		.loc 6 316 0
 3972 00de 8989      		ldd r24,Y+17
 3973 00e0 9A89      		ldd r25,Y+18
 3974 00e2 8157      		subi r24,113
 3975 00e4 9B4F      		sbci r25,-5
 3976 00e6 9887      		std Y+8,r25
 3977 00e8 8F83      		std Y+7,r24
 317:./ros_lib/ros/node_handle.h ****           }
 3978               		.loc 6 317 0
 3979 00ea A989      		ldd r26,Y+17
 3980 00ec BA89      		ldd r27,Y+18
 3981 00ee A257      		subi r26,114
 3982 00f0 BB4F      		sbci r27,-5
 3983 00f2 BA87      		std Y+10,r27
 3984 00f4 A987      		std Y+9,r26
 293:./ros_lib/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 3985               		.loc 6 293 0
 3986 00f6 E988      		ldd r14,Y+17
 3987 00f8 FA88      		ldd r15,Y+18
 3988 00fa B7E8      		ldi r27,-121
 3989 00fc EB1A      		sub r14,r27
 3990 00fe BBEF      		ldi r27,-5
 3991 0100 FB0A      		sbc r15,r27
 267:./ros_lib/ros/node_handle.h ****         mode_++;
 3992               		.loc 6 267 0
 3993 0102 2988      		ldd r2,Y+17
 3994 0104 3A88      		ldd r3,Y+18
 3995 0106 E3E8      		ldi r30,-125
 3996 0108 2E1A      		sub r2,r30
 3997 010a EBEF      		ldi r30,-5
 3998 010c 3E0A      		sbc r3,r30
 242:./ros_lib/ros/node_handle.h ****         }
 3999               		.loc 6 242 0
 4000 010e 2989      		ldd r18,Y+17
 4001 0110 3A89      		ldd r19,Y+18
 4002 0112 2657      		subi r18,118
 4003 0114 3B4F      		sbci r19,-5
 4004 0116 3C87      		std Y+12,r19
 4005 0118 2B87      		std Y+11,r18
 4006 011a D501      		movw r26,r10
 4007 011c C401      		movw r24,r8
 4008 011e 4496      		adiw r24,20
 4009 0120 A11D      		adc r26,__zero_reg__
 4010 0122 B11D      		adc r27,__zero_reg__
 4011 0124 8D87      		std Y+13,r24
 4012 0126 9E87      		std Y+14,r25
 4013 0128 AF87      		std Y+15,r26
 4014 012a B88B      		std Y+16,r27
 4015               	.LVL315:
 4016               	.L84:
 214:./ros_lib/ros/node_handle.h ****       {
 4017               		.loc 6 214 0
 4018 012c E989      		ldd r30,Y+17
 4019 012e FA89      		ldd r31,Y+18
 4020 0130 8785      		ldd r24,Z+15
 4021 0132 9089      		ldd r25,Z+16
 4022 0134 A189      		ldd r26,Z+17
 4023 0136 B289      		ldd r27,Z+18
 4024 0138 892B      		or r24,r25
 4025 013a 8A2B      		or r24,r26
 4026 013c 8B2B      		or r24,r27
 4027 013e 01F4      		brne .L85
 4028               	.L89:
 4029               	.LVL316:
 4030               	.LBB176:
 4031               	.LBB177:
  30:Atmega32Hardware.h ****     }
 4032               		.loc 7 30 0
 4033 0140 0E94 0000 		call avr_uart_receive_byte
 4034               	.LVL317:
 4035 0144 9C01      		movw r18,r24
 4036               	.LBE177:
 4037               	.LBE176:
 227:./ros_lib/ros/node_handle.h ****         break;
 4038               		.loc 6 227 0
 4039 0146 97FF      		sbrs r25,7
 4040 0148 00C0      		rjmp .L119
 4041 014a 00C0      		rjmp .L122
 4042               	.LVL318:
 4043               	.L85:
 4044               	.LBB178:
 4045               	.LBB179:
 4046               		.loc 7 47 0
 4047 014c 0E94 0000 		call avr_time_now
 4048               	.LVL319:
 4049               	.LBE179:
 4050               	.LBE178:
 220:./ros_lib/ros/node_handle.h ****         {
 4051               		.loc 6 220 0
 4052 0150 DC01      		movw r26,r24
 4053 0152 CB01      		movw r24,r22
 4054 0154 8819      		sub r24,r8
 4055 0156 9909      		sbc r25,r9
 4056 0158 AA09      		sbc r26,r10
 4057 015a BB09      		sbc r27,r11
 4058 015c E989      		ldd r30,Y+17
 4059 015e FA89      		ldd r31,Y+18
 4060 0160 2785      		ldd r18,Z+15
 4061 0162 3089      		ldd r19,Z+16
 4062 0164 4189      		ldd r20,Z+17
 4063 0166 5289      		ldd r21,Z+18
 4064 0168 2817      		cp r18,r24
 4065 016a 3907      		cpc r19,r25
 4066 016c 4A07      		cpc r20,r26
 4067 016e 5B07      		cpc r21,r27
 4068 0170 00F4      		brsh .L89
 4069 0172 00C0      		rjmp .L107
 4070               	.LVL320:
 4071               	.L119:
 229:./ros_lib/ros/node_handle.h ****       if (mode_ == MODE_MESSAGE)          /* message data being recieved */
 4072               		.loc 6 229 0
 4073 0174 D301      		movw r26,r6
 4074 0176 8D91      		ld r24,X+
 4075 0178 9C91      		ld r25,X
 4076 017a 1197      		sbiw r26,1
 4077 017c 820F      		add r24,r18
 4078 017e 931F      		adc r25,r19
 4079 0180 8D93      		st X+,r24
 4080 0182 9C93      		st X,r25
 230:./ros_lib/ros/node_handle.h ****       {
 4081               		.loc 6 230 0
 4082 0184 F801      		movw r30,r16
 4083 0186 4081      		ld r20,Z
 4084 0188 5181      		ldd r21,Z+1
 4085 018a 4730      		cpi r20,7
 4086 018c 5105      		cpc r21,__zero_reg__
 4087 018e 01F4      		brne .L90
 232:./ros_lib/ros/node_handle.h ****         bytes_--;
 4088               		.loc 6 232 0
 4089 0190 D101      		movw r26,r2
 4090 0192 8D91      		ld r24,X+
 4091 0194 9C91      		ld r25,X
 4092 0196 1197      		sbiw r26,1
 4093 0198 AC01      		movw r20,r24
 4094 019a 4F5F      		subi r20,-1
 4095 019c 5F4F      		sbci r21,-1
 4096 019e 4D93      		st X+,r20
 4097 01a0 5C93      		st X,r21
 4098 01a2 E989      		ldd r30,Y+17
 4099 01a4 FA89      		ldd r31,Y+18
 4100 01a6 E80F      		add r30,r24
 4101 01a8 F91F      		adc r31,r25
 4102 01aa 238B      		std Z+19,r18
 233:./ros_lib/ros/node_handle.h ****         if (bytes_ == 0)                 /* is message complete? if so, checksum */
 4103               		.loc 6 233 0
 4104 01ac F701      		movw r30,r14
 4105 01ae 8081      		ld r24,Z
 4106 01b0 9181      		ldd r25,Z+1
 4107 01b2 0197      		sbiw r24,1
 4108 01b4 9183      		std Z+1,r25
 4109 01b6 8083      		st Z,r24
 234:./ros_lib/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 4110               		.loc 6 234 0
 4111 01b8 892B      		or r24,r25
 4112 01ba 01F0      		breq .+2
 4113 01bc 00C0      		rjmp .L84
 235:./ros_lib/ros/node_handle.h ****       }
 4114               		.loc 6 235 0
 4115 01be E8E0      		ldi r30,lo8(8)
 4116 01c0 F0E0      		ldi r31,0
 4117 01c2 D801      		movw r26,r16
 4118 01c4 ED93      		st X+,r30
 4119 01c6 FC93      		st X,r31
 4120 01c8 00C0      		rjmp .L84
 4121               	.L90:
 237:./ros_lib/ros/node_handle.h ****       {
 4122               		.loc 6 237 0
 4123 01ca 4115      		cp r20,__zero_reg__
 4124 01cc 5105      		cpc r21,__zero_reg__
 4125 01ce 01F4      		brne .L92
 239:./ros_lib/ros/node_handle.h ****         {
 4126               		.loc 6 239 0
 4127 01d0 2F3F      		cpi r18,-1
 4128 01d2 3105      		cpc r19,__zero_reg__
 4129 01d4 01F4      		brne .L93
 241:./ros_lib/ros/node_handle.h ****           last_msg_timeout_time = c_time + SERIAL_MSG_TIMEOUT;
 4130               		.loc 6 241 0
 4131 01d6 81E0      		ldi r24,lo8(1)
 4132 01d8 90E0      		ldi r25,0
 4133 01da 9183      		std Z+1,r25
 4134 01dc 8083      		st Z,r24
 242:./ros_lib/ros/node_handle.h ****         }
 4135               		.loc 6 242 0
 4136 01de 2D85      		ldd r18,Y+13
 4137 01e0 3E85      		ldd r19,Y+14
 4138 01e2 4F85      		ldd r20,Y+15
 4139 01e4 5889      		ldd r21,Y+16
 4140 01e6 AB85      		ldd r26,Y+11
 4141 01e8 BC85      		ldd r27,Y+12
 4142 01ea 2D93      		st X+,r18
 4143 01ec 3D93      		st X+,r19
 4144 01ee 4D93      		st X+,r20
 4145 01f0 5C93      		st X,r21
 4146 01f2 1397      		sbiw r26,3
 4147 01f4 00C0      		rjmp .L84
 4148               	.L93:
 4149               	.LVL321:
 4150               	.LBB180:
 4151               	.LBB181:
 4152               		.loc 7 47 0
 4153 01f6 0E94 0000 		call avr_time_now
 4154               	.LVL322:
 4155               	.LBE181:
 4156               	.LBE180:
 244:./ros_lib/ros/node_handle.h ****         {
 4157               		.loc 6 244 0
 4158 01fa DC01      		movw r26,r24
 4159 01fc CB01      		movw r24,r22
 4160 01fe 8819      		sub r24,r8
 4161 0200 9909      		sbc r25,r9
 4162 0202 AA09      		sbc r26,r10
 4163 0204 BB09      		sbc r27,r11
 4164 0206 8938      		cpi r24,-119
 4165 0208 9341      		sbci r25,19
 4166 020a A105      		cpc r26,__zero_reg__
 4167 020c B105      		cpc r27,__zero_reg__
 4168 020e 00F4      		brsh .+2
 4169 0210 00C0      		rjmp .L84
 247:./ros_lib/ros/node_handle.h ****           return SPIN_TIMEOUT;
 4170               		.loc 6 247 0
 4171 0212 2989      		ldd r18,Y+17
 4172 0214 3A89      		ldd r19,Y+18
 4173 0216 2F57      		subi r18,127
 4174 0218 3B4F      		sbci r19,-5
 4175 021a D901      		movw r26,r18
 4176 021c 1C92      		st X,__zero_reg__
 4177 021e 00C0      		rjmp .L107
 4178               	.LVL323:
 4179               	.L92:
 251:./ros_lib/ros/node_handle.h ****       {
 4180               		.loc 6 251 0
 4181 0220 4130      		cpi r20,1
 4182 0222 5105      		cpc r21,__zero_reg__
 4183 0224 01F4      		brne .L94
 253:./ros_lib/ros/node_handle.h ****         {
 4184               		.loc 6 253 0
 4185 0226 2E3F      		cpi r18,-2
 4186 0228 3105      		cpc r19,__zero_reg__
 4187 022a 01F4      		brne .L95
 255:./ros_lib/ros/node_handle.h ****         }
 4188               		.loc 6 255 0
 4189 022c 82E0      		ldi r24,lo8(2)
 4190 022e 90E0      		ldi r25,0
 4191 0230 00C0      		rjmp .L120
 4192               	.L95:
 259:./ros_lib/ros/node_handle.h ****           if (configured_ == false)
 4193               		.loc 6 259 0
 4194 0232 1182      		std Z+1,__zero_reg__
 4195 0234 1082      		st Z,__zero_reg__
 260:./ros_lib/ros/node_handle.h ****             requestSyncTime();  /* send a msg back showing our protocol version */
 4196               		.loc 6 260 0
 4197 0236 ED81      		ldd r30,Y+5
 4198 0238 FE81      		ldd r31,Y+6
 4199 023a 8081      		ld r24,Z
 4200 023c 8111      		cpse r24,__zero_reg__
 4201 023e 00C0      		rjmp .L84
 261:./ros_lib/ros/node_handle.h ****         }
 4202               		.loc 6 261 0
 4203 0240 8989      		ldd r24,Y+17
 4204 0242 9A89      		ldd r25,Y+18
 4205 0244 0E94 0000 		call _ZN3ros11NodeHandle_I17Atmega32AHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv
 4206               	.LVL324:
 4207 0248 00C0      		rjmp .L84
 4208               	.L94:
 264:./ros_lib/ros/node_handle.h ****       {
 4209               		.loc 6 264 0
 4210 024a 4230      		cpi r20,2
 4211 024c 5105      		cpc r21,__zero_reg__
 4212 024e 01F4      		brne .L96
 266:./ros_lib/ros/node_handle.h ****         index_ = 0;
 4213               		.loc 6 266 0
 4214 0250 D701      		movw r26,r14
 4215 0252 2D93      		st X+,r18
 4216 0254 3C93      		st X,r19
 267:./ros_lib/ros/node_handle.h ****         mode_++;
 4217               		.loc 6 267 0
 4218 0256 F101      		movw r30,r2
 4219 0258 1182      		std Z+1,__zero_reg__
 4220 025a 1082      		st Z,__zero_reg__
 268:./ros_lib/ros/node_handle.h ****         checksum_ = data;               /* first byte for calculating size checksum */
 4221               		.loc 6 268 0
 4222 025c 83E0      		ldi r24,lo8(3)
 4223 025e 90E0      		ldi r25,0
 4224 0260 D801      		movw r26,r16
 4225 0262 8D93      		st X+,r24
 4226 0264 9C93      		st X,r25
 269:./ros_lib/ros/node_handle.h ****       }
 4227               		.loc 6 269 0
 4228 0266 F301      		movw r30,r6
 4229 0268 00C0      		rjmp .L121
 4230               	.L96:
 271:./ros_lib/ros/node_handle.h ****       {
 4231               		.loc 6 271 0
 4232 026a 4330      		cpi r20,3
 4233 026c 5105      		cpc r21,__zero_reg__
 4234 026e 01F4      		brne .L97
 273:./ros_lib/ros/node_handle.h ****         mode_++;
 4235               		.loc 6 273 0
 4236 0270 322F      		mov r19,r18
 4237 0272 2227      		clr r18
 4238 0274 D701      		movw r26,r14
 4239 0276 8D91      		ld r24,X+
 4240 0278 9C91      		ld r25,X
 4241 027a 1197      		sbiw r26,1
 4242 027c 280F      		add r18,r24
 4243 027e 391F      		adc r19,r25
 4244 0280 2D93      		st X+,r18
 4245 0282 3C93      		st X,r19
 274:./ros_lib/ros/node_handle.h ****       }
 4246               		.loc 6 274 0
 4247 0284 84E0      		ldi r24,lo8(4)
 4248 0286 90E0      		ldi r25,0
 4249               	.L120:
 4250 0288 F801      		movw r30,r16
 4251 028a 9183      		std Z+1,r25
 4252 028c 8083      		st Z,r24
 4253 028e 00C0      		rjmp .L84
 4254               	.L97:
 276:./ros_lib/ros/node_handle.h ****       {
 4255               		.loc 6 276 0
 4256 0290 4430      		cpi r20,4
 4257 0292 5105      		cpc r21,__zero_reg__
 4258 0294 01F4      		brne .L98
 278:./ros_lib/ros/node_handle.h ****           mode_++;
 4259               		.loc 6 278 0
 4260 0296 60E0      		ldi r22,0
 4261 0298 71E0      		ldi r23,lo8(1)
 4262 029a 0E94 0000 		call __divmodhi4
 4263 029e 8F3F      		cpi r24,-1
 4264 02a0 9105      		cpc r25,__zero_reg__
 4265 02a2 01F4      		brne .L99
 279:./ros_lib/ros/node_handle.h ****         else
 4266               		.loc 6 279 0
 4267 02a4 85E0      		ldi r24,lo8(5)
 4268 02a6 90E0      		ldi r25,0
 4269 02a8 9183      		std Z+1,r25
 4270 02aa 8083      		st Z,r24
 4271 02ac 00C0      		rjmp .L84
 4272               	.L99:
 281:./ros_lib/ros/node_handle.h ****       }
 4273               		.loc 6 281 0
 4274 02ae F801      		movw r30,r16
 4275 02b0 1182      		std Z+1,__zero_reg__
 4276 02b2 1082      		st Z,__zero_reg__
 4277 02b4 00C0      		rjmp .L84
 4278               	.L98:
 283:./ros_lib/ros/node_handle.h ****       {
 4279               		.loc 6 283 0
 4280 02b6 4530      		cpi r20,5
 4281 02b8 5105      		cpc r21,__zero_reg__
 4282 02ba 01F4      		brne .L100
 285:./ros_lib/ros/node_handle.h ****         mode_++;
 4283               		.loc 6 285 0
 4284 02bc D601      		movw r26,r12
 4285 02be 2D93      		st X+,r18
 4286 02c0 3C93      		st X,r19
 286:./ros_lib/ros/node_handle.h ****         checksum_ = data;               /* first byte included in checksum */
 4287               		.loc 6 286 0
 4288 02c2 86E0      		ldi r24,lo8(6)
 4289 02c4 90E0      		ldi r25,0
 4290 02c6 F801      		movw r30,r16
 4291 02c8 9183      		std Z+1,r25
 4292 02ca 8083      		st Z,r24
 287:./ros_lib/ros/node_handle.h ****       }
 4293               		.loc 6 287 0
 4294 02cc D301      		movw r26,r6
 4295 02ce 2D93      		st X+,r18
 4296 02d0 3C93      		st X,r19
 4297 02d2 00C0      		rjmp .L84
 4298               	.L100:
 289:./ros_lib/ros/node_handle.h ****       {
 4299               		.loc 6 289 0
 4300 02d4 4630      		cpi r20,6
 4301 02d6 5105      		cpc r21,__zero_reg__
 4302 02d8 01F4      		brne .L101
 291:./ros_lib/ros/node_handle.h ****         mode_ = MODE_MESSAGE;
 4303               		.loc 6 291 0
 4304 02da 322F      		mov r19,r18
 4305 02dc 2227      		clr r18
 4306 02de F601      		movw r30,r12
 4307 02e0 8081      		ld r24,Z
 4308 02e2 9181      		ldd r25,Z+1
 4309 02e4 280F      		add r18,r24
 4310 02e6 391F      		adc r19,r25
 4311 02e8 3183      		std Z+1,r19
 4312 02ea 2083      		st Z,r18
 292:./ros_lib/ros/node_handle.h ****         if (bytes_ == 0)
 4313               		.loc 6 292 0
 4314 02ec E7E0      		ldi r30,lo8(7)
 4315 02ee F0E0      		ldi r31,0
 4316 02f0 D801      		movw r26,r16
 4317 02f2 ED93      		st X+,r30
 4318 02f4 FC93      		st X,r31
 293:./ros_lib/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 4319               		.loc 6 293 0
 4320 02f6 D701      		movw r26,r14
 4321 02f8 8D91      		ld r24,X+
 4322 02fa 9C91      		ld r25,X
 4323 02fc 892B      		or r24,r25
 4324 02fe 01F0      		breq .+2
 4325 0300 00C0      		rjmp .L84
 294:./ros_lib/ros/node_handle.h ****       }
 4326               		.loc 6 294 0
 4327 0302 28E0      		ldi r18,lo8(8)
 4328 0304 30E0      		ldi r19,0
 4329 0306 F801      		movw r30,r16
 4330               	.L121:
 4331 0308 3183      		std Z+1,r19
 4332 030a 2083      		st Z,r18
 4333 030c 00C0      		rjmp .L84
 4334               	.L101:
 296:./ros_lib/ros/node_handle.h ****       {
 4335               		.loc 6 296 0
 4336 030e 4830      		cpi r20,8
 4337 0310 5105      		cpc r21,__zero_reg__
 4338 0312 01F0      		breq .+2
 4339 0314 00C0      		rjmp .L84
 298:./ros_lib/ros/node_handle.h ****         if ((checksum_ % 256) == 255)
 4340               		.loc 6 298 0
 4341 0316 1182      		std Z+1,__zero_reg__
 4342 0318 1082      		st Z,__zero_reg__
 299:./ros_lib/ros/node_handle.h ****         {
 4343               		.loc 6 299 0
 4344 031a 60E0      		ldi r22,0
 4345 031c 71E0      		ldi r23,lo8(1)
 4346 031e 0E94 0000 		call __divmodhi4
 4347 0322 8F3F      		cpi r24,-1
 4348 0324 9105      		cpc r25,__zero_reg__
 4349 0326 01F0      		breq .+2
 4350 0328 00C0      		rjmp .L84
 301:./ros_lib/ros/node_handle.h ****           {
 4351               		.loc 6 301 0
 4352 032a F601      		movw r30,r12
 4353 032c 8081      		ld r24,Z
 4354 032e 9181      		ldd r25,Z+1
 4355 0330 0097      		sbiw r24,0
 4356 0332 01F4      		brne .L102
 303:./ros_lib/ros/node_handle.h ****             negotiateTopics();
 4357               		.loc 6 303 0
 4358 0334 8989      		ldd r24,Y+17
 4359 0336 9A89      		ldd r25,Y+18
 4360 0338 0E94 0000 		call _ZN3ros11NodeHandle_I17Atmega32AHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv
 4361               	.LVL325:
 304:./ros_lib/ros/node_handle.h ****             last_sync_time = c_time;
 4362               		.loc 6 304 0
 4363 033c 8989      		ldd r24,Y+17
 4364 033e 9A89      		ldd r25,Y+18
 4365 0340 0E94 0000 		call _ZN3ros11NodeHandle_I17Atmega32AHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv
 4366               	.LVL326:
 305:./ros_lib/ros/node_handle.h ****             last_sync_receive_time = c_time;
 4367               		.loc 6 305 0
 4368 0344 2989      		ldd r18,Y+17
 4369 0346 3A89      		ldd r19,Y+18
 4370 0348 2E57      		subi r18,126
 4371 034a 3B4F      		sbci r19,-5
 4372 034c D901      		movw r26,r18
 4373 034e 8D92      		st X+,r8
 4374 0350 9D92      		st X+,r9
 4375 0352 AD92      		st X+,r10
 4376 0354 BC92      		st X,r11
 4377 0356 1397      		sbiw r26,3
 306:./ros_lib/ros/node_handle.h ****             return SPIN_ERR;
 4378               		.loc 6 306 0
 4379 0358 EB81      		ldd r30,Y+3
 4380 035a FC81      		ldd r31,Y+4
 4381 035c 8082      		st Z,r8
 4382 035e 9182      		std Z+1,r9
 4383 0360 A282      		std Z+2,r10
 4384 0362 B382      		std Z+3,r11
 307:./ros_lib/ros/node_handle.h ****           }
 4385               		.loc 6 307 0
 4386 0364 8FEF      		ldi r24,lo8(-1)
 4387 0366 9FEF      		ldi r25,lo8(-1)
 4388 0368 00C0      		rjmp .L88
 4389               	.L102:
 309:./ros_lib/ros/node_handle.h ****           {
 4390               		.loc 6 309 0
 4391 036a 8A30      		cpi r24,10
 4392 036c 9105      		cpc r25,__zero_reg__
 4393 036e 01F4      		brne .L103
 4394               	.LVL327:
 312:./ros_lib/ros/node_handle.h ****           }
 4395               		.loc 6 312 0
 4396 0370 B201      		movw r22,r4
 4397 0372 8989      		ldd r24,Y+17
 4398 0374 9A89      		ldd r25,Y+18
 4399 0376 0E94 0000 		call _ZN3ros11NodeHandle_I17Atmega32AHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh
 4400               	.LVL328:
 311:./ros_lib/ros/node_handle.h ****             syncTime(message_in);
 4401               		.loc 6 311 0
 4402 037a F1E0      		ldi r31,lo8(1)
 4403 037c FA83      		std Y+2,r31
 4404 037e 00C0      		rjmp .L84
 4405               	.LVL329:
 4406               	.L103:
 314:./ros_lib/ros/node_handle.h ****           {
 4407               		.loc 6 314 0
 4408 0380 8630      		cpi r24,6
 4409 0382 9105      		cpc r25,__zero_reg__
 4410 0384 01F4      		brne .L104
 316:./ros_lib/ros/node_handle.h ****             param_received = true;
 4411               		.loc 6 316 0
 4412 0386 B201      		movw r22,r4
 4413 0388 8F81      		ldd r24,Y+7
 4414 038a 9885      		ldd r25,Y+8
 4415 038c 0E94 0000 		call _ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 4416               	.LVL330:
 317:./ros_lib/ros/node_handle.h ****           }
 4417               		.loc 6 317 0
 4418 0390 81E0      		ldi r24,lo8(1)
 4419 0392 A985      		ldd r26,Y+9
 4420 0394 BA85      		ldd r27,Y+10
 4421 0396 8C93      		st X,r24
 4422 0398 00C0      		rjmp .L84
 4423               	.L104:
 319:./ros_lib/ros/node_handle.h ****           {
 4424               		.loc 6 319 0
 4425 039a 8B30      		cpi r24,11
 4426 039c 9105      		cpc r25,__zero_reg__
 4427 039e 01F4      		brne .L105
 321:./ros_lib/ros/node_handle.h ****             tx_stop_requested = true;
 4428               		.loc 6 321 0
 4429 03a0 ED81      		ldd r30,Y+5
 4430 03a2 FE81      		ldd r31,Y+6
 4431 03a4 1082      		st Z,__zero_reg__
 4432               	.LVL331:
 322:./ros_lib/ros/node_handle.h ****           }
 4433               		.loc 6 322 0
 4434 03a6 F1E0      		ldi r31,lo8(1)
 4435 03a8 F983      		std Y+1,r31
 4436 03aa 00C0      		rjmp .L84
 4437               	.LVL332:
 4438               	.L105:
 326:./ros_lib/ros/node_handle.h ****               subscribers[topic_ - 100]->callback(message_in);
 4439               		.loc 6 326 0
 4440 03ac FC01      		movw r30,r24
 4441 03ae E456      		subi r30,100
 4442 03b0 F109      		sbc r31,__zero_reg__
 4443 03b2 EE0F      		lsl r30
 4444 03b4 FF1F      		rol r31
 4445 03b6 2989      		ldd r18,Y+17
 4446 03b8 3A89      		ldd r19,Y+18
 4447 03ba E20F      		add r30,r18
 4448 03bc F31F      		adc r31,r19
 4449 03be EB5B      		subi r30,-69
 4450 03c0 FB4F      		sbci r31,-5
 4451 03c2 8081      		ld r24,Z
 4452 03c4 9181      		ldd r25,Z+1
 4453 03c6 0097      		sbiw r24,0
 4454 03c8 01F4      		brne .+2
 4455 03ca 00C0      		rjmp .L84
 327:./ros_lib/ros/node_handle.h ****           }
 4456               		.loc 6 327 0
 4457 03cc DC01      		movw r26,r24
 4458 03ce ED91      		ld r30,X+
 4459 03d0 FC91      		ld r31,X
 4460 03d2 0190      		ld __tmp_reg__,Z+
 4461 03d4 F081      		ld r31,Z
 4462 03d6 E02D      		mov r30,__tmp_reg__
 4463 03d8 B201      		movw r22,r4
 4464 03da 0995      		icall
 4465               	.LVL333:
 4466 03dc 00C0      		rjmp .L84
 4467               	.L122:
 4468               	.LBE175:
 334:./ros_lib/ros/node_handle.h ****     {
 4469               		.loc 6 334 0
 4470 03de E989      		ldd r30,Y+17
 4471 03e0 FA89      		ldd r31,Y+18
 4472 03e2 EF57      		subi r30,127
 4473 03e4 FB4F      		sbci r31,-5
 4474 03e6 8081      		ld r24,Z
 4475 03e8 8823      		tst r24
 4476 03ea 01F0      		breq .L106
 334:./ros_lib/ros/node_handle.h ****     {
 4477               		.loc 6 334 0 is_stmt 0 discriminator 1
 4478 03ec 0989      		ldd r16,Y+17
 4479 03ee 1A89      		ldd r17,Y+18
 4480 03f0 0E57      		subi r16,126
 4481 03f2 1B4F      		sbci r17,-5
 4482 03f4 F801      		movw r30,r16
 4483 03f6 8081      		ld r24,Z
 4484 03f8 9181      		ldd r25,Z+1
 4485 03fa A281      		ldd r26,Z+2
 4486 03fc B381      		ldd r27,Z+3
 4487 03fe A501      		movw r20,r10
 4488 0400 9401      		movw r18,r8
 4489 0402 281B      		sub r18,r24
 4490 0404 390B      		sbc r19,r25
 4491 0406 4A0B      		sbc r20,r26
 4492 0408 5B0B      		sbc r21,r27
 4493 040a DA01      		movw r26,r20
 4494 040c C901      		movw r24,r18
 4495 040e 853C      		cpi r24,-59
 4496 0410 9940      		sbci r25,9
 4497 0412 A105      		cpc r26,__zero_reg__
 4498 0414 B105      		cpc r27,__zero_reg__
 4499 0416 00F0      		brlo .L106
 336:./ros_lib/ros/node_handle.h ****       last_sync_time = c_time;
 4500               		.loc 6 336 0 is_stmt 1
 4501 0418 8989      		ldd r24,Y+17
 4502 041a 9A89      		ldd r25,Y+18
 4503 041c 0E94 0000 		call _ZN3ros11NodeHandle_I17Atmega32AHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv
 4504               	.LVL334:
 337:./ros_lib/ros/node_handle.h ****     }
 4505               		.loc 6 337 0
 4506 0420 D801      		movw r26,r16
 4507 0422 8D92      		st X+,r8
 4508 0424 9D92      		st X+,r9
 4509 0426 AD92      		st X+,r10
 4510 0428 BC92      		st X,r11
 4511 042a 1397      		sbiw r26,3
 4512               	.L106:
 340:./ros_lib/ros/node_handle.h ****   }
 4513               		.loc 6 340 0
 4514 042c BA81      		ldd r27,Y+2
 4515 042e B111      		cpse r27,__zero_reg__
 4516 0430 00C0      		rjmp .L108
 340:./ros_lib/ros/node_handle.h ****   }
 4517               		.loc 6 340 0 is_stmt 0 discriminator 2
 4518 0432 E981      		ldd r30,Y+1
 4519 0434 E111      		cpse r30,__zero_reg__
 4520 0436 00C0      		rjmp .L109
 340:./ros_lib/ros/node_handle.h ****   }
 4521               		.loc 6 340 0
 4522 0438 80E0      		ldi r24,0
 4523 043a 90E0      		ldi r25,0
 4524 043c 00C0      		rjmp .L88
 4525               	.LVL335:
 4526               	.L107:
 4527               	.LBB182:
 223:./ros_lib/ros/node_handle.h ****         }
 4528               		.loc 6 223 0 is_stmt 1
 4529 043e 8EEF      		ldi r24,lo8(-2)
 4530 0440 9FEF      		ldi r25,lo8(-1)
 4531 0442 00C0      		rjmp .L88
 4532               	.LVL336:
 4533               	.L108:
 4534               	.LBE182:
 340:./ros_lib/ros/node_handle.h ****   }
 4535               		.loc 6 340 0
 4536 0444 8CEF      		ldi r24,lo8(-4)
 4537 0446 9FEF      		ldi r25,lo8(-1)
 4538 0448 00C0      		rjmp .L88
 4539               	.L109:
 4540 044a 8DEF      		ldi r24,lo8(-3)
 4541 044c 9FEF      		ldi r25,lo8(-1)
 4542               	.LVL337:
 4543               	.L88:
 4544               	/* epilogue start */
 341:./ros_lib/ros/node_handle.h **** 
 4545               		.loc 6 341 0
 4546 044e 6296      		adiw r28,18
 4547 0450 0FB6      		in __tmp_reg__,__SREG__
 4548 0452 F894      		cli
 4549 0454 DEBF      		out __SP_H__,r29
 4550 0456 0FBE      		out __SREG__,__tmp_reg__
 4551 0458 CDBF      		out __SP_L__,r28
 4552 045a DF91      		pop r29
 4553 045c CF91      		pop r28
 4554 045e 1F91      		pop r17
 4555 0460 0F91      		pop r16
 4556 0462 FF90      		pop r15
 4557 0464 EF90      		pop r14
 4558 0466 DF90      		pop r13
 4559 0468 CF90      		pop r12
 4560 046a BF90      		pop r11
 4561 046c AF90      		pop r10
 4562 046e 9F90      		pop r9
 4563 0470 8F90      		pop r8
 4564 0472 7F90      		pop r7
 4565 0474 6F90      		pop r6
 4566 0476 5F90      		pop r5
 4567 0478 4F90      		pop r4
 4568 047a 3F90      		pop r3
 4569 047c 2F90      		pop r2
 4570 047e 0895      		ret
 4571               		.cfi_endproc
 4572               	.LFE155:
 4574               		.section	.text.startup,"ax",@progbits
 4575               	.global	main
 4577               	main:
 4578               	.LFB150:
  13:avr_chatter.cpp **** 
  14:avr_chatter.cpp **** ros::NodeHandle nh;
  15:avr_chatter.cpp **** 
  16:avr_chatter.cpp **** std_msgs::String str_msg;
  17:avr_chatter.cpp **** ros::Publisher chatter("chatter", &str_msg);
  18:avr_chatter.cpp **** 
  19:avr_chatter.cpp **** char hello[13] = "hello world!";
  20:avr_chatter.cpp **** 
  21:avr_chatter.cpp **** int main()
  22:avr_chatter.cpp **** {
 4579               		.loc 8 22 0
 4580               		.cfi_startproc
 4581               	/* prologue: function */
 4582               	/* frame size = 0 */
 4583               	/* stack size = 0 */
 4584               	.L__stack_usage = 0
 4585               	.LVL338:
 4586               	.LBB194:
 4587               	.LBB195:
 4588               	.LBB196:
 4589               	.LBB197:
 4590               	.LBB198:
 4591               	.LBB199:
 4592               		.file 11 "/usr/lib/avr/include/avr/wdt.h"
   1:/usr/lib/avr/include/avr/wdt.h **** /* Copyright (c) 2002, 2004 Marek Michalkiewicz
   2:/usr/lib/avr/include/avr/wdt.h ****    Copyright (c) 2005, 2006, 2007 Eric B. Weddington
   3:/usr/lib/avr/include/avr/wdt.h ****    All rights reserved.
   4:/usr/lib/avr/include/avr/wdt.h **** 
   5:/usr/lib/avr/include/avr/wdt.h ****    Redistribution and use in source and binary forms, with or without
   6:/usr/lib/avr/include/avr/wdt.h ****    modification, are permitted provided that the following conditions are met:
   7:/usr/lib/avr/include/avr/wdt.h **** 
   8:/usr/lib/avr/include/avr/wdt.h ****    * Redistributions of source code must retain the above copyright
   9:/usr/lib/avr/include/avr/wdt.h ****      notice, this list of conditions and the following disclaimer.
  10:/usr/lib/avr/include/avr/wdt.h **** 
  11:/usr/lib/avr/include/avr/wdt.h ****    * Redistributions in binary form must reproduce the above copyright
  12:/usr/lib/avr/include/avr/wdt.h ****      notice, this list of conditions and the following disclaimer in
  13:/usr/lib/avr/include/avr/wdt.h ****      the documentation and/or other materials provided with the
  14:/usr/lib/avr/include/avr/wdt.h ****      distribution.
  15:/usr/lib/avr/include/avr/wdt.h **** 
  16:/usr/lib/avr/include/avr/wdt.h ****    * Neither the name of the copyright holders nor the names of
  17:/usr/lib/avr/include/avr/wdt.h ****      contributors may be used to endorse or promote products derived
  18:/usr/lib/avr/include/avr/wdt.h ****      from this software without specific prior written permission.
  19:/usr/lib/avr/include/avr/wdt.h **** 
  20:/usr/lib/avr/include/avr/wdt.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:/usr/lib/avr/include/avr/wdt.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:/usr/lib/avr/include/avr/wdt.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  23:/usr/lib/avr/include/avr/wdt.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  24:/usr/lib/avr/include/avr/wdt.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  25:/usr/lib/avr/include/avr/wdt.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  26:/usr/lib/avr/include/avr/wdt.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  27:/usr/lib/avr/include/avr/wdt.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  28:/usr/lib/avr/include/avr/wdt.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  29:/usr/lib/avr/include/avr/wdt.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  30:/usr/lib/avr/include/avr/wdt.h ****   POSSIBILITY OF SUCH DAMAGE. */
  31:/usr/lib/avr/include/avr/wdt.h **** 
  32:/usr/lib/avr/include/avr/wdt.h **** /* $Id$ */
  33:/usr/lib/avr/include/avr/wdt.h **** 
  34:/usr/lib/avr/include/avr/wdt.h **** /*
  35:/usr/lib/avr/include/avr/wdt.h ****    avr/wdt.h - macros for AVR watchdog timer
  36:/usr/lib/avr/include/avr/wdt.h ****  */
  37:/usr/lib/avr/include/avr/wdt.h **** 
  38:/usr/lib/avr/include/avr/wdt.h **** #ifndef _AVR_WDT_H_
  39:/usr/lib/avr/include/avr/wdt.h **** #define _AVR_WDT_H_
  40:/usr/lib/avr/include/avr/wdt.h **** 
  41:/usr/lib/avr/include/avr/wdt.h **** #include <avr/io.h>
  42:/usr/lib/avr/include/avr/wdt.h **** #include <stdint.h>
  43:/usr/lib/avr/include/avr/wdt.h **** 
  44:/usr/lib/avr/include/avr/wdt.h **** /** \file */
  45:/usr/lib/avr/include/avr/wdt.h **** /** \defgroup avr_watchdog <avr/wdt.h>: Watchdog timer handling
  46:/usr/lib/avr/include/avr/wdt.h ****     \code #include <avr/wdt.h> \endcode
  47:/usr/lib/avr/include/avr/wdt.h **** 
  48:/usr/lib/avr/include/avr/wdt.h ****     This header file declares the interface to some inline macros
  49:/usr/lib/avr/include/avr/wdt.h ****     handling the watchdog timer present in many AVR devices.  In order
  50:/usr/lib/avr/include/avr/wdt.h ****     to prevent the watchdog timer configuration from being
  51:/usr/lib/avr/include/avr/wdt.h ****     accidentally altered by a crashing application, a special timed
  52:/usr/lib/avr/include/avr/wdt.h ****     sequence is required in order to change it.  The macros within
  53:/usr/lib/avr/include/avr/wdt.h ****     this header file handle the required sequence automatically
  54:/usr/lib/avr/include/avr/wdt.h ****     before changing any value.  Interrupts will be disabled during
  55:/usr/lib/avr/include/avr/wdt.h ****     the manipulation.
  56:/usr/lib/avr/include/avr/wdt.h **** 
  57:/usr/lib/avr/include/avr/wdt.h ****     \note Depending on the fuse configuration of the particular
  58:/usr/lib/avr/include/avr/wdt.h ****     device, further restrictions might apply, in particular it might
  59:/usr/lib/avr/include/avr/wdt.h ****     be disallowed to turn off the watchdog timer.
  60:/usr/lib/avr/include/avr/wdt.h **** 
  61:/usr/lib/avr/include/avr/wdt.h ****     Note that for newer devices (ATmega88 and newer, effectively any
  62:/usr/lib/avr/include/avr/wdt.h ****     AVR that has the option to also generate interrupts), the watchdog
  63:/usr/lib/avr/include/avr/wdt.h ****     timer remains active even after a system reset (except a power-on
  64:/usr/lib/avr/include/avr/wdt.h ****     condition), using the fastest prescaler value (approximately 15
  65:/usr/lib/avr/include/avr/wdt.h ****     ms).  It is therefore required to turn off the watchdog early
  66:/usr/lib/avr/include/avr/wdt.h ****     during program startup, the datasheet recommends a sequence like
  67:/usr/lib/avr/include/avr/wdt.h ****     the following:
  68:/usr/lib/avr/include/avr/wdt.h **** 
  69:/usr/lib/avr/include/avr/wdt.h ****     \code
  70:/usr/lib/avr/include/avr/wdt.h ****     #include <stdint.h>
  71:/usr/lib/avr/include/avr/wdt.h ****     #include <avr/wdt.h>
  72:/usr/lib/avr/include/avr/wdt.h **** 
  73:/usr/lib/avr/include/avr/wdt.h ****     uint8_t mcusr_mirror __attribute__ ((section (".noinit")));
  74:/usr/lib/avr/include/avr/wdt.h **** 
  75:/usr/lib/avr/include/avr/wdt.h ****     void get_mcusr(void) \
  76:/usr/lib/avr/include/avr/wdt.h ****       __attribute__((naked)) \
  77:/usr/lib/avr/include/avr/wdt.h ****       __attribute__((section(".init3")));
  78:/usr/lib/avr/include/avr/wdt.h ****     void get_mcusr(void)
  79:/usr/lib/avr/include/avr/wdt.h ****     {
  80:/usr/lib/avr/include/avr/wdt.h ****       mcusr_mirror = MCUSR;
  81:/usr/lib/avr/include/avr/wdt.h ****       MCUSR = 0;
  82:/usr/lib/avr/include/avr/wdt.h ****       wdt_disable();
  83:/usr/lib/avr/include/avr/wdt.h ****     }
  84:/usr/lib/avr/include/avr/wdt.h ****     \endcode
  85:/usr/lib/avr/include/avr/wdt.h **** 
  86:/usr/lib/avr/include/avr/wdt.h ****     Saving the value of MCUSR in \c mcusr_mirror is only needed if the
  87:/usr/lib/avr/include/avr/wdt.h ****     application later wants to examine the reset source, but in particular, 
  88:/usr/lib/avr/include/avr/wdt.h ****     clearing the watchdog reset flag before disabling the
  89:/usr/lib/avr/include/avr/wdt.h ****     watchdog is required, according to the datasheet.
  90:/usr/lib/avr/include/avr/wdt.h **** */
  91:/usr/lib/avr/include/avr/wdt.h **** 
  92:/usr/lib/avr/include/avr/wdt.h **** /**
  93:/usr/lib/avr/include/avr/wdt.h ****    \ingroup avr_watchdog
  94:/usr/lib/avr/include/avr/wdt.h ****    Reset the watchdog timer.  When the watchdog timer is enabled,
  95:/usr/lib/avr/include/avr/wdt.h ****    a call to this instruction is required before the timer expires,
  96:/usr/lib/avr/include/avr/wdt.h ****    otherwise a watchdog-initiated device reset will occur. 
  97:/usr/lib/avr/include/avr/wdt.h **** */
  98:/usr/lib/avr/include/avr/wdt.h **** 
  99:/usr/lib/avr/include/avr/wdt.h **** #define wdt_reset() __asm__ __volatile__ ("wdr")
 100:/usr/lib/avr/include/avr/wdt.h **** 
 101:/usr/lib/avr/include/avr/wdt.h **** #ifndef __DOXYGEN__
 102:/usr/lib/avr/include/avr/wdt.h **** 
 103:/usr/lib/avr/include/avr/wdt.h **** #if defined(WDP3)
 104:/usr/lib/avr/include/avr/wdt.h **** # define _WD_PS3_MASK       _BV(WDP3)
 105:/usr/lib/avr/include/avr/wdt.h **** #else
 106:/usr/lib/avr/include/avr/wdt.h **** # define _WD_PS3_MASK       0x00
 107:/usr/lib/avr/include/avr/wdt.h **** #endif
 108:/usr/lib/avr/include/avr/wdt.h **** 
 109:/usr/lib/avr/include/avr/wdt.h **** #if defined(WDTCSR)
 110:/usr/lib/avr/include/avr/wdt.h **** #  define _WD_CONTROL_REG     WDTCSR
 111:/usr/lib/avr/include/avr/wdt.h **** #elif defined(WDTCR)
 112:/usr/lib/avr/include/avr/wdt.h **** #  define _WD_CONTROL_REG     WDTCR
 113:/usr/lib/avr/include/avr/wdt.h **** #else
 114:/usr/lib/avr/include/avr/wdt.h **** #  define _WD_CONTROL_REG     WDT
 115:/usr/lib/avr/include/avr/wdt.h **** #endif
 116:/usr/lib/avr/include/avr/wdt.h **** 
 117:/usr/lib/avr/include/avr/wdt.h **** #if defined(WDTOE)
 118:/usr/lib/avr/include/avr/wdt.h **** #define _WD_CHANGE_BIT      WDTOE
 119:/usr/lib/avr/include/avr/wdt.h **** #else
 120:/usr/lib/avr/include/avr/wdt.h **** #define _WD_CHANGE_BIT      WDCE
 121:/usr/lib/avr/include/avr/wdt.h **** #endif
 122:/usr/lib/avr/include/avr/wdt.h **** 
 123:/usr/lib/avr/include/avr/wdt.h **** #endif	/* !__DOXYGEN__ */
 124:/usr/lib/avr/include/avr/wdt.h **** 
 125:/usr/lib/avr/include/avr/wdt.h **** 
 126:/usr/lib/avr/include/avr/wdt.h **** /**
 127:/usr/lib/avr/include/avr/wdt.h ****    \ingroup avr_watchdog
 128:/usr/lib/avr/include/avr/wdt.h ****    Enable the watchdog timer, configuring it for expiry after
 129:/usr/lib/avr/include/avr/wdt.h ****    \c timeout (which is a combination of the \c WDP0 through
 130:/usr/lib/avr/include/avr/wdt.h ****    \c WDP2 bits to write into the \c WDTCR register; For those devices 
 131:/usr/lib/avr/include/avr/wdt.h ****    that have a \c WDTCSR register, it uses the combination of the \c WDP0 
 132:/usr/lib/avr/include/avr/wdt.h ****    through \c WDP3 bits).
 133:/usr/lib/avr/include/avr/wdt.h **** 
 134:/usr/lib/avr/include/avr/wdt.h ****    See also the symbolic constants \c WDTO_15MS et al.
 135:/usr/lib/avr/include/avr/wdt.h **** */
 136:/usr/lib/avr/include/avr/wdt.h **** 
 137:/usr/lib/avr/include/avr/wdt.h **** 
 138:/usr/lib/avr/include/avr/wdt.h **** #if defined(__AVR_XMEGA__)
 139:/usr/lib/avr/include/avr/wdt.h **** 
 140:/usr/lib/avr/include/avr/wdt.h **** #if defined (WDT_CTRLA) && !defined(RAMPD)
 141:/usr/lib/avr/include/avr/wdt.h **** 
 142:/usr/lib/avr/include/avr/wdt.h **** #define wdt_enable(timeout) \
 143:/usr/lib/avr/include/avr/wdt.h **** do { \
 144:/usr/lib/avr/include/avr/wdt.h **** uint8_t temp; \
 145:/usr/lib/avr/include/avr/wdt.h **** __asm__ __volatile__ ( \
 146:/usr/lib/avr/include/avr/wdt.h **** 	"wdr"									"\n\t" \
 147:/usr/lib/avr/include/avr/wdt.h **** 	"out %[ccp_reg], %[ioreg_cen_mask]"		"\n\t" \
 148:/usr/lib/avr/include/avr/wdt.h **** 	"lds %[tmp], %[wdt_reg]"				"\n\t" \
 149:/usr/lib/avr/include/avr/wdt.h **** 	"sbr %[tmp], %[wdt_enable_timeout]"		"\n\t" \
 150:/usr/lib/avr/include/avr/wdt.h **** 	"sts %[wdt_reg], %[tmp]"				"\n\t" \
 151:/usr/lib/avr/include/avr/wdt.h **** 	"1:lds %[tmp], %[wdt_status_reg]"		"\n\t" \
 152:/usr/lib/avr/include/avr/wdt.h **** 	"sbrc %[tmp], %[wdt_syncbusy_bit]"		"\n\t" \
 153:/usr/lib/avr/include/avr/wdt.h **** 	"rjmp 1b"								"\n\t" \
 154:/usr/lib/avr/include/avr/wdt.h **** 	: [tmp]					"=r" (temp) \
 155:/usr/lib/avr/include/avr/wdt.h **** 	: [ccp_reg]				"I"  (_SFR_IO_ADDR(CCP)), \
 156:/usr/lib/avr/include/avr/wdt.h **** 	  [ioreg_cen_mask]		"r"  ((uint8_t)CCP_IOREG_gc), \
 157:/usr/lib/avr/include/avr/wdt.h **** 	  [wdt_reg]				"n"  (_SFR_MEM_ADDR(WDT_CTRLA)), \
 158:/usr/lib/avr/include/avr/wdt.h **** 	  [wdt_enable_timeout]	"M"  (timeout), \
 159:/usr/lib/avr/include/avr/wdt.h **** 	  [wdt_status_reg]		"n"  (_SFR_MEM_ADDR(WDT_STATUS)), \
 160:/usr/lib/avr/include/avr/wdt.h **** 	  [wdt_syncbusy_bit]	"I"  (WDT_SYNCBUSY_bm) \
 161:/usr/lib/avr/include/avr/wdt.h **** ); \
 162:/usr/lib/avr/include/avr/wdt.h **** } while(0)
 163:/usr/lib/avr/include/avr/wdt.h **** 
 164:/usr/lib/avr/include/avr/wdt.h **** #define wdt_disable() \
 165:/usr/lib/avr/include/avr/wdt.h **** do { \
 166:/usr/lib/avr/include/avr/wdt.h **** uint8_t temp; \
 167:/usr/lib/avr/include/avr/wdt.h **** __asm__ __volatile__ (  \
 168:/usr/lib/avr/include/avr/wdt.h **** 	"wdr"								"\n\t" \
 169:/usr/lib/avr/include/avr/wdt.h **** 	"out %[ccp_reg], %[ioreg_cen_mask]" "\n\t" \
 170:/usr/lib/avr/include/avr/wdt.h **** 	"lds %[tmp], %[wdt_reg]"			"\n\t" \
 171:/usr/lib/avr/include/avr/wdt.h **** 	"cbr %[tmp], %[timeout_mask]"       "\n\t" \
 172:/usr/lib/avr/include/avr/wdt.h **** 	"sts %[wdt_reg], %[tmp]"			"\n\t" \
 173:/usr/lib/avr/include/avr/wdt.h ****     : [tmp]            "=r" (temp) \
 174:/usr/lib/avr/include/avr/wdt.h ****     : [ccp_reg]        "I" (_SFR_IO_ADDR(CCP)),       \
 175:/usr/lib/avr/include/avr/wdt.h ****       [ioreg_cen_mask] "r" ((uint8_t)CCP_IOREG_gc),   \
 176:/usr/lib/avr/include/avr/wdt.h ****       [wdt_reg]        "n" (_SFR_MEM_ADDR(WDT_CTRLA)),\
 177:/usr/lib/avr/include/avr/wdt.h ****       [timeout_mask]   "I" (WDT_PERIOD_gm) \
 178:/usr/lib/avr/include/avr/wdt.h **** ); \
 179:/usr/lib/avr/include/avr/wdt.h **** } while(0)
 180:/usr/lib/avr/include/avr/wdt.h **** 
 181:/usr/lib/avr/include/avr/wdt.h **** #else // defined (WDT_CTRLA) && !defined(RAMPD)
 182:/usr/lib/avr/include/avr/wdt.h **** 
 183:/usr/lib/avr/include/avr/wdt.h **** /*
 184:/usr/lib/avr/include/avr/wdt.h ****    wdt_enable(timeout) for xmega devices
 185:/usr/lib/avr/include/avr/wdt.h **** ** write signature (CCP_IOREG_gc) that enables change of protected I/O
 186:/usr/lib/avr/include/avr/wdt.h ****    registers to the CCP register
 187:/usr/lib/avr/include/avr/wdt.h **** ** At the same time,
 188:/usr/lib/avr/include/avr/wdt.h ****    1) set WDT change enable (WDT_CEN_bm)
 189:/usr/lib/avr/include/avr/wdt.h ****    2) enable WDT (WDT_ENABLE_bm)
 190:/usr/lib/avr/include/avr/wdt.h ****    3) set timeout (timeout)
 191:/usr/lib/avr/include/avr/wdt.h **** ** Synchronization starts when ENABLE bit of WDT is set. So, wait till it
 192:/usr/lib/avr/include/avr/wdt.h ****    finishes (SYNCBUSY of STATUS register is automatically cleared after the
 193:/usr/lib/avr/include/avr/wdt.h ****    sync is finished).
 194:/usr/lib/avr/include/avr/wdt.h **** */
 195:/usr/lib/avr/include/avr/wdt.h **** #define wdt_enable(timeout) \
 196:/usr/lib/avr/include/avr/wdt.h **** do { \
 197:/usr/lib/avr/include/avr/wdt.h **** uint8_t temp; \
 198:/usr/lib/avr/include/avr/wdt.h **** __asm__ __volatile__ (         \
 199:/usr/lib/avr/include/avr/wdt.h ****     "in __tmp_reg__, %[rampd]"              "\n\t" \
 200:/usr/lib/avr/include/avr/wdt.h ****     "out %[rampd], __zero_reg__"            "\n\t" \
 201:/usr/lib/avr/include/avr/wdt.h ****     "out %[ccp_reg], %[ioreg_cen_mask]"     "\n\t" \
 202:/usr/lib/avr/include/avr/wdt.h ****     "sts %[wdt_reg], %[wdt_enable_timeout]" "\n\t" \
 203:/usr/lib/avr/include/avr/wdt.h ****     "1:lds %[tmp], %[wdt_status_reg]"       "\n\t" \
 204:/usr/lib/avr/include/avr/wdt.h ****     "sbrc %[tmp], %[wdt_syncbusy_bit]"      "\n\t" \
 205:/usr/lib/avr/include/avr/wdt.h ****     "rjmp 1b"                               "\n\t" \
 206:/usr/lib/avr/include/avr/wdt.h ****     "out %[rampd], __tmp_reg__"             "\n\t" \
 207:/usr/lib/avr/include/avr/wdt.h ****     : [tmp]                "=r" (temp) \
 208:/usr/lib/avr/include/avr/wdt.h ****     : [rampd]              "I" (_SFR_IO_ADDR(RAMPD)),      \
 209:/usr/lib/avr/include/avr/wdt.h ****       [ccp_reg]            "I" (_SFR_IO_ADDR(CCP)),        \
 210:/usr/lib/avr/include/avr/wdt.h ****       [ioreg_cen_mask]     "r" ((uint8_t)CCP_IOREG_gc),     \
 211:/usr/lib/avr/include/avr/wdt.h ****       [wdt_reg]            "n" (_SFR_MEM_ADDR(WDT_CTRL)),   \
 212:/usr/lib/avr/include/avr/wdt.h ****       [wdt_enable_timeout] "r" ((uint8_t)(WDT_CEN_bm | WDT_ENABLE_bm | timeout)), \
 213:/usr/lib/avr/include/avr/wdt.h ****       [wdt_status_reg]     "n" (_SFR_MEM_ADDR(WDT_STATUS)), \
 214:/usr/lib/avr/include/avr/wdt.h ****       [wdt_syncbusy_bit]   "I" (WDT_SYNCBUSY_bm)            \
 215:/usr/lib/avr/include/avr/wdt.h ****     : "r0" \
 216:/usr/lib/avr/include/avr/wdt.h **** ); \
 217:/usr/lib/avr/include/avr/wdt.h **** } while(0)
 218:/usr/lib/avr/include/avr/wdt.h **** 
 219:/usr/lib/avr/include/avr/wdt.h **** #define wdt_disable() \
 220:/usr/lib/avr/include/avr/wdt.h **** __asm__ __volatile__ (  \
 221:/usr/lib/avr/include/avr/wdt.h ****     "in __tmp_reg__, %[rampd]"          "\n\t" \
 222:/usr/lib/avr/include/avr/wdt.h ****     "out %[rampd], __zero_reg__"        "\n\t" \
 223:/usr/lib/avr/include/avr/wdt.h ****     "out %[ccp_reg], %[ioreg_cen_mask]" "\n\t" \
 224:/usr/lib/avr/include/avr/wdt.h ****     "sts %[wdt_reg], %[disable_mask]"   "\n\t" \
 225:/usr/lib/avr/include/avr/wdt.h ****     "out %[rampd], __tmp_reg__"         "\n\t" \
 226:/usr/lib/avr/include/avr/wdt.h ****     : \
 227:/usr/lib/avr/include/avr/wdt.h ****     : [rampd]             "I" (_SFR_IO_ADDR(RAMPD)),    \
 228:/usr/lib/avr/include/avr/wdt.h ****       [ccp_reg]           "I" (_SFR_IO_ADDR(CCP)),      \
 229:/usr/lib/avr/include/avr/wdt.h ****       [ioreg_cen_mask]    "r" ((uint8_t)CCP_IOREG_gc),   \
 230:/usr/lib/avr/include/avr/wdt.h ****       [wdt_reg]           "n" (_SFR_MEM_ADDR(WDT_CTRL)), \
 231:/usr/lib/avr/include/avr/wdt.h ****       [disable_mask]      "r" ((uint8_t)((~WDT_ENABLE_bm) | WDT_CEN_bm)) \
 232:/usr/lib/avr/include/avr/wdt.h ****     : "r0" \
 233:/usr/lib/avr/include/avr/wdt.h **** );
 234:/usr/lib/avr/include/avr/wdt.h **** 
 235:/usr/lib/avr/include/avr/wdt.h **** #endif // defined (WDT_CTRLA) && !defined(RAMPD)
 236:/usr/lib/avr/include/avr/wdt.h **** 
 237:/usr/lib/avr/include/avr/wdt.h **** #elif defined(__AVR_TINY__)
 238:/usr/lib/avr/include/avr/wdt.h **** 
 239:/usr/lib/avr/include/avr/wdt.h **** #define wdt_enable(value) \
 240:/usr/lib/avr/include/avr/wdt.h **** __asm__ __volatile__ ( \
 241:/usr/lib/avr/include/avr/wdt.h ****     "in __tmp_reg__,__SREG__" "\n\t"  \
 242:/usr/lib/avr/include/avr/wdt.h ****     "cli" "\n\t"  \
 243:/usr/lib/avr/include/avr/wdt.h ****     "wdr" "\n\t"  \
 244:/usr/lib/avr/include/avr/wdt.h ****     "out %[CCPADDRESS],%[SIGNATURE]" "\n\t"  \
 245:/usr/lib/avr/include/avr/wdt.h ****     "out %[WDTREG],%[WDVALUE]" "\n\t"  \
 246:/usr/lib/avr/include/avr/wdt.h ****     "out __SREG__,__tmp_reg__" "\n\t"  \
 247:/usr/lib/avr/include/avr/wdt.h ****     : /* no outputs */  \
 248:/usr/lib/avr/include/avr/wdt.h ****     : [CCPADDRESS] "I" (_SFR_IO_ADDR(CCP)),  \
 249:/usr/lib/avr/include/avr/wdt.h ****       [SIGNATURE] "r" ((uint8_t)0xD8), \
 250:/usr/lib/avr/include/avr/wdt.h ****       [WDTREG] "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)), \
 251:/usr/lib/avr/include/avr/wdt.h ****       [WDVALUE] "r" ((uint8_t)((value & 0x08 ? _WD_PS3_MASK : 0x00) \
 252:/usr/lib/avr/include/avr/wdt.h ****       | _BV(WDE) | (value & 0x07) )) \
 253:/usr/lib/avr/include/avr/wdt.h ****     : "r16" \
 254:/usr/lib/avr/include/avr/wdt.h **** )
 255:/usr/lib/avr/include/avr/wdt.h **** 
 256:/usr/lib/avr/include/avr/wdt.h **** #define wdt_disable() \
 257:/usr/lib/avr/include/avr/wdt.h **** do { \
 258:/usr/lib/avr/include/avr/wdt.h **** uint8_t temp_wd; \
 259:/usr/lib/avr/include/avr/wdt.h **** __asm__ __volatile__ ( \
 260:/usr/lib/avr/include/avr/wdt.h ****     "in __tmp_reg__,__SREG__" "\n\t"  \
 261:/usr/lib/avr/include/avr/wdt.h ****     "cli" "\n\t"  \
 262:/usr/lib/avr/include/avr/wdt.h ****     "wdr" "\n\t"  \
 263:/usr/lib/avr/include/avr/wdt.h ****     "out %[CCPADDRESS],%[SIGNATURE]" "\n\t"  \
 264:/usr/lib/avr/include/avr/wdt.h ****     "in  %[TEMP_WD],%[WDTREG]" "\n\t" \
 265:/usr/lib/avr/include/avr/wdt.h ****     "cbr %[TEMP_WD],%[WDVALUE]" "\n\t" \
 266:/usr/lib/avr/include/avr/wdt.h ****     "out %[WDTREG],%[TEMP_WD]" "\n\t" \
 267:/usr/lib/avr/include/avr/wdt.h ****     "out __SREG__,__tmp_reg__" "\n\t" \
 268:/usr/lib/avr/include/avr/wdt.h ****     : /*no output */ \
 269:/usr/lib/avr/include/avr/wdt.h ****     : [CCPADDRESS] "I" (_SFR_IO_ADDR(CCP)), \
 270:/usr/lib/avr/include/avr/wdt.h ****       [SIGNATURE] "r" ((uint8_t)0xD8), \
 271:/usr/lib/avr/include/avr/wdt.h ****       [WDTREG] "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)), \
 272:/usr/lib/avr/include/avr/wdt.h ****       [TEMP_WD] "d" (temp_wd), \
 273:/usr/lib/avr/include/avr/wdt.h ****       [WDVALUE] "n" (1 << WDE) \
 274:/usr/lib/avr/include/avr/wdt.h ****     : "r16" \
 275:/usr/lib/avr/include/avr/wdt.h **** ); \
 276:/usr/lib/avr/include/avr/wdt.h **** }while(0)
 277:/usr/lib/avr/include/avr/wdt.h **** 
 278:/usr/lib/avr/include/avr/wdt.h **** #elif defined(CCP)
 279:/usr/lib/avr/include/avr/wdt.h **** 
 280:/usr/lib/avr/include/avr/wdt.h **** static __inline__
 281:/usr/lib/avr/include/avr/wdt.h **** __attribute__ ((__always_inline__))
 282:/usr/lib/avr/include/avr/wdt.h **** void wdt_enable (const uint8_t value)
 283:/usr/lib/avr/include/avr/wdt.h **** {
 284:/usr/lib/avr/include/avr/wdt.h **** 	if (!_SFR_IO_REG_P (CCP) && !_SFR_IO_REG_P (_WD_CONTROL_REG))
 285:/usr/lib/avr/include/avr/wdt.h **** 	{
 286:/usr/lib/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 287:/usr/lib/avr/include/avr/wdt.h **** 			"in __tmp_reg__,__SREG__" "\n\t"
 288:/usr/lib/avr/include/avr/wdt.h **** 			"cli" "\n\t"
 289:/usr/lib/avr/include/avr/wdt.h **** 			"wdr" "\n\t"
 290:/usr/lib/avr/include/avr/wdt.h **** 			"sts %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 291:/usr/lib/avr/include/avr/wdt.h **** 			"sts %[WDTREG],%[WDVALUE]" "\n\t"
 292:/usr/lib/avr/include/avr/wdt.h **** 			"out __SREG__,__tmp_reg__" "\n\t"
 293:/usr/lib/avr/include/avr/wdt.h **** 			: /* no outputs */
 294:/usr/lib/avr/include/avr/wdt.h **** 			: [CCPADDRESS] "n" (_SFR_MEM_ADDR(CCP)),
 295:/usr/lib/avr/include/avr/wdt.h **** 			[SIGNATURE] "r" ((uint8_t)0xD8),
 296:/usr/lib/avr/include/avr/wdt.h **** 			[WDTREG] "n" (_SFR_MEM_ADDR(_WD_CONTROL_REG)),
 297:/usr/lib/avr/include/avr/wdt.h **** 			[WDVALUE] "r" ((uint8_t)((value & 0x08 ? _WD_PS3_MASK : 0x00)
 298:/usr/lib/avr/include/avr/wdt.h **** 				| _BV(WDE) | (value & 0x07) ))
 299:/usr/lib/avr/include/avr/wdt.h **** 			: "r0"
 300:/usr/lib/avr/include/avr/wdt.h **** 			);
 301:/usr/lib/avr/include/avr/wdt.h **** 	}
 302:/usr/lib/avr/include/avr/wdt.h **** 	else if (!_SFR_IO_REG_P (CCP) && _SFR_IO_REG_P (_WD_CONTROL_REG))
 303:/usr/lib/avr/include/avr/wdt.h **** 	{
 304:/usr/lib/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 305:/usr/lib/avr/include/avr/wdt.h **** 			"in __tmp_reg__,__SREG__" "\n\t"
 306:/usr/lib/avr/include/avr/wdt.h **** 			"cli" "\n\t"
 307:/usr/lib/avr/include/avr/wdt.h **** 			"wdr" "\n\t"
 308:/usr/lib/avr/include/avr/wdt.h **** 			"sts %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 309:/usr/lib/avr/include/avr/wdt.h **** 			"out %[WDTREG],%[WDVALUE]" "\n\t"
 310:/usr/lib/avr/include/avr/wdt.h **** 			"out __SREG__,__tmp_reg__" "\n\t"
 311:/usr/lib/avr/include/avr/wdt.h **** 			: /* no outputs */
 312:/usr/lib/avr/include/avr/wdt.h **** 			: [CCPADDRESS] "n" (_SFR_MEM_ADDR(CCP)),
 313:/usr/lib/avr/include/avr/wdt.h **** 			[SIGNATURE] "r" ((uint8_t)0xD8),
 314:/usr/lib/avr/include/avr/wdt.h **** 			[WDTREG] "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)),
 315:/usr/lib/avr/include/avr/wdt.h **** 			[WDVALUE] "r" ((uint8_t)((value & 0x08 ? _WD_PS3_MASK : 0x00)
 316:/usr/lib/avr/include/avr/wdt.h **** 				| _BV(WDE) | (value & 0x07) ))
 317:/usr/lib/avr/include/avr/wdt.h **** 			: "r0"
 318:/usr/lib/avr/include/avr/wdt.h **** 			);
 319:/usr/lib/avr/include/avr/wdt.h **** 	}
 320:/usr/lib/avr/include/avr/wdt.h **** 	else if (_SFR_IO_REG_P (CCP) && !_SFR_IO_REG_P (_WD_CONTROL_REG))
 321:/usr/lib/avr/include/avr/wdt.h **** 	{
 322:/usr/lib/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 323:/usr/lib/avr/include/avr/wdt.h **** 			"in __tmp_reg__,__SREG__" "\n\t"
 324:/usr/lib/avr/include/avr/wdt.h **** 			"cli" "\n\t"
 325:/usr/lib/avr/include/avr/wdt.h **** 			"wdr" "\n\t"
 326:/usr/lib/avr/include/avr/wdt.h **** 			"out %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 327:/usr/lib/avr/include/avr/wdt.h **** 			"sts %[WDTREG],%[WDVALUE]" "\n\t"
 328:/usr/lib/avr/include/avr/wdt.h **** 			"out __SREG__,__tmp_reg__" "\n\t"
 329:/usr/lib/avr/include/avr/wdt.h **** 			: /* no outputs */
 330:/usr/lib/avr/include/avr/wdt.h **** 			: [CCPADDRESS] "I" (_SFR_IO_ADDR(CCP)),
 331:/usr/lib/avr/include/avr/wdt.h **** 			[SIGNATURE] "r" ((uint8_t)0xD8),
 332:/usr/lib/avr/include/avr/wdt.h **** 			[WDTREG] "n" (_SFR_MEM_ADDR(_WD_CONTROL_REG)),
 333:/usr/lib/avr/include/avr/wdt.h **** 			[WDVALUE] "r" ((uint8_t)((value & 0x08 ? _WD_PS3_MASK : 0x00)
 334:/usr/lib/avr/include/avr/wdt.h **** 				| _BV(WDE) | (value & 0x07) ))
 335:/usr/lib/avr/include/avr/wdt.h **** 			: "r0"
 336:/usr/lib/avr/include/avr/wdt.h **** 			);
 337:/usr/lib/avr/include/avr/wdt.h **** 	}
 338:/usr/lib/avr/include/avr/wdt.h **** 	else
 339:/usr/lib/avr/include/avr/wdt.h ****  	{
 340:/usr/lib/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 341:/usr/lib/avr/include/avr/wdt.h **** 			"in __tmp_reg__,__SREG__" "\n\t"
 342:/usr/lib/avr/include/avr/wdt.h **** 			"cli" "\n\t"
 343:/usr/lib/avr/include/avr/wdt.h **** 			"wdr" "\n\t"
 344:/usr/lib/avr/include/avr/wdt.h **** 			"out %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 345:/usr/lib/avr/include/avr/wdt.h **** 			"out %[WDTREG],%[WDVALUE]" "\n\t"
 346:/usr/lib/avr/include/avr/wdt.h **** 			"out __SREG__,__tmp_reg__" "\n\t"
 347:/usr/lib/avr/include/avr/wdt.h **** 			: /* no outputs */
 348:/usr/lib/avr/include/avr/wdt.h **** 			: [CCPADDRESS] "I" (_SFR_IO_ADDR(CCP)),
 349:/usr/lib/avr/include/avr/wdt.h **** 			[SIGNATURE] "r" ((uint8_t)0xD8),
 350:/usr/lib/avr/include/avr/wdt.h **** 			[WDTREG] "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)),
 351:/usr/lib/avr/include/avr/wdt.h **** 			[WDVALUE] "r" ((uint8_t)((value & 0x08 ? _WD_PS3_MASK : 0x00)
 352:/usr/lib/avr/include/avr/wdt.h **** 				| _BV(WDE) | (value & 0x07) ))
 353:/usr/lib/avr/include/avr/wdt.h **** 			: "r0"
 354:/usr/lib/avr/include/avr/wdt.h **** 			);
 355:/usr/lib/avr/include/avr/wdt.h **** 	}
 356:/usr/lib/avr/include/avr/wdt.h **** }
 357:/usr/lib/avr/include/avr/wdt.h **** 
 358:/usr/lib/avr/include/avr/wdt.h **** static __inline__
 359:/usr/lib/avr/include/avr/wdt.h **** __attribute__ ((__always_inline__))
 360:/usr/lib/avr/include/avr/wdt.h **** void wdt_disable (void)
 361:/usr/lib/avr/include/avr/wdt.h **** {
 362:/usr/lib/avr/include/avr/wdt.h **** 	if (!_SFR_IO_REG_P (CCP) && !_SFR_IO_REG_P(_WD_CONTROL_REG))
 363:/usr/lib/avr/include/avr/wdt.h **** 	{
 364:/usr/lib/avr/include/avr/wdt.h ****         uint8_t temp_wd;
 365:/usr/lib/avr/include/avr/wdt.h ****         __asm__ __volatile__ (
 366:/usr/lib/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__" "\n\t"
 367:/usr/lib/avr/include/avr/wdt.h **** 				"cli" "\n\t"
 368:/usr/lib/avr/include/avr/wdt.h **** 				"wdr" "\n\t"
 369:/usr/lib/avr/include/avr/wdt.h **** 				"sts %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 370:/usr/lib/avr/include/avr/wdt.h **** 				"lds %[TEMP_WD],%[WDTREG]" "\n\t"
 371:/usr/lib/avr/include/avr/wdt.h **** 				"cbr %[TEMP_WD],%[WDVALUE]" "\n\t"
 372:/usr/lib/avr/include/avr/wdt.h **** 				"sts %[WDTREG],%[TEMP_WD]" "\n\t"
 373:/usr/lib/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__" "\n\t"
 374:/usr/lib/avr/include/avr/wdt.h **** 				: /*no output */
 375:/usr/lib/avr/include/avr/wdt.h **** 				: [CCPADDRESS] "n" (_SFR_MEM_ADDR(CCP)),
 376:/usr/lib/avr/include/avr/wdt.h **** 				[SIGNATURE] "r" ((uint8_t)0xD8),
 377:/usr/lib/avr/include/avr/wdt.h **** 				[WDTREG] "n" (_SFR_MEM_ADDR(_WD_CONTROL_REG)),
 378:/usr/lib/avr/include/avr/wdt.h **** 				[TEMP_WD] "d" (temp_wd),
 379:/usr/lib/avr/include/avr/wdt.h **** 				[WDVALUE] "n" (1 << WDE)
 380:/usr/lib/avr/include/avr/wdt.h **** 				: "r0"
 381:/usr/lib/avr/include/avr/wdt.h **** 				);
 382:/usr/lib/avr/include/avr/wdt.h **** 	}
 383:/usr/lib/avr/include/avr/wdt.h **** 	else if (!_SFR_IO_REG_P (CCP) && _SFR_IO_REG_P(_WD_CONTROL_REG))
 384:/usr/lib/avr/include/avr/wdt.h **** 	{
 385:/usr/lib/avr/include/avr/wdt.h ****         uint8_t temp_wd;
 386:/usr/lib/avr/include/avr/wdt.h ****         __asm__ __volatile__ (
 387:/usr/lib/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__" "\n\t"
 388:/usr/lib/avr/include/avr/wdt.h **** 				"cli" "\n\t"
 389:/usr/lib/avr/include/avr/wdt.h **** 				"wdr" "\n\t"
 390:/usr/lib/avr/include/avr/wdt.h **** 				"sts %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 391:/usr/lib/avr/include/avr/wdt.h **** 				"in %[TEMP_WD],%[WDTREG]" "\n\t"
 392:/usr/lib/avr/include/avr/wdt.h **** 				"cbr %[TEMP_WD],%[WDVALUE]" "\n\t"
 393:/usr/lib/avr/include/avr/wdt.h **** 				"out %[WDTREG],%[TEMP_WD]" "\n\t"
 394:/usr/lib/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__" "\n\t"
 395:/usr/lib/avr/include/avr/wdt.h **** 				: /*no output */
 396:/usr/lib/avr/include/avr/wdt.h **** 				: [CCPADDRESS] "n" (_SFR_MEM_ADDR(CCP)),
 397:/usr/lib/avr/include/avr/wdt.h **** 				[SIGNATURE] "r" ((uint8_t)0xD8),
 398:/usr/lib/avr/include/avr/wdt.h **** 				[WDTREG] "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)),
 399:/usr/lib/avr/include/avr/wdt.h **** 				[TEMP_WD] "d" (temp_wd),
 400:/usr/lib/avr/include/avr/wdt.h **** 				[WDVALUE] "n" (1 << WDE)
 401:/usr/lib/avr/include/avr/wdt.h **** 				: "r0"
 402:/usr/lib/avr/include/avr/wdt.h **** 				);
 403:/usr/lib/avr/include/avr/wdt.h **** 	}
 404:/usr/lib/avr/include/avr/wdt.h **** 	else if (_SFR_IO_REG_P (CCP) && !_SFR_IO_REG_P(_WD_CONTROL_REG))
 405:/usr/lib/avr/include/avr/wdt.h **** 	{
 406:/usr/lib/avr/include/avr/wdt.h ****         uint8_t temp_wd;
 407:/usr/lib/avr/include/avr/wdt.h ****         __asm__ __volatile__ (
 408:/usr/lib/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__" "\n\t"
 409:/usr/lib/avr/include/avr/wdt.h **** 				"cli" "\n\t"
 410:/usr/lib/avr/include/avr/wdt.h **** 				"wdr" "\n\t"
 411:/usr/lib/avr/include/avr/wdt.h **** 				"out %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 412:/usr/lib/avr/include/avr/wdt.h **** 				"lds %[TEMP_WD],%[WDTREG]" "\n\t"
 413:/usr/lib/avr/include/avr/wdt.h **** 				"cbr %[TEMP_WD],%[WDVALUE]" "\n\t"
 414:/usr/lib/avr/include/avr/wdt.h **** 				"sts %[WDTREG],%[TEMP_WD]" "\n\t"
 415:/usr/lib/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__" "\n\t"
 416:/usr/lib/avr/include/avr/wdt.h **** 				: /*no output */
 417:/usr/lib/avr/include/avr/wdt.h **** 				: [CCPADDRESS] "I" (_SFR_IO_ADDR(CCP)),
 418:/usr/lib/avr/include/avr/wdt.h **** 				[SIGNATURE] "r" ((uint8_t)0xD8),
 419:/usr/lib/avr/include/avr/wdt.h **** 				[WDTREG] "n" (_SFR_MEM_ADDR(_WD_CONTROL_REG)),
 420:/usr/lib/avr/include/avr/wdt.h **** 				[TEMP_WD] "d" (temp_wd),
 421:/usr/lib/avr/include/avr/wdt.h **** 				[WDVALUE] "n" (1 << WDE)
 422:/usr/lib/avr/include/avr/wdt.h **** 				: "r0"
 423:/usr/lib/avr/include/avr/wdt.h **** 				);
 424:/usr/lib/avr/include/avr/wdt.h **** 	}
 425:/usr/lib/avr/include/avr/wdt.h **** 	else
 426:/usr/lib/avr/include/avr/wdt.h **** 	{
 427:/usr/lib/avr/include/avr/wdt.h ****         uint8_t temp_wd;
 428:/usr/lib/avr/include/avr/wdt.h ****         __asm__ __volatile__ (
 429:/usr/lib/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__" "\n\t"
 430:/usr/lib/avr/include/avr/wdt.h **** 				"cli" "\n\t"
 431:/usr/lib/avr/include/avr/wdt.h **** 				"wdr" "\n\t"
 432:/usr/lib/avr/include/avr/wdt.h **** 				"out %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 433:/usr/lib/avr/include/avr/wdt.h **** 				"in %[TEMP_WD],%[WDTREG]" "\n\t"
 434:/usr/lib/avr/include/avr/wdt.h **** 				"cbr %[TEMP_WD],%[WDVALUE]" "\n\t"
 435:/usr/lib/avr/include/avr/wdt.h **** 				"out %[WDTREG],%[TEMP_WD]" "\n\t"
 436:/usr/lib/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__" "\n\t"
 437:/usr/lib/avr/include/avr/wdt.h **** 				: /*no output */
 438:/usr/lib/avr/include/avr/wdt.h **** 				: [CCPADDRESS] "I" (_SFR_IO_ADDR(CCP)),
 439:/usr/lib/avr/include/avr/wdt.h **** 				[SIGNATURE] "r" ((uint8_t)0xD8),
 440:/usr/lib/avr/include/avr/wdt.h **** 				[WDTREG] "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)),
 441:/usr/lib/avr/include/avr/wdt.h **** 				[TEMP_WD] "d" (temp_wd),
 442:/usr/lib/avr/include/avr/wdt.h **** 				[WDVALUE] "n" (1 << WDE)
 443:/usr/lib/avr/include/avr/wdt.h **** 				: "r0"
 444:/usr/lib/avr/include/avr/wdt.h **** 				);
 445:/usr/lib/avr/include/avr/wdt.h **** 	}
 446:/usr/lib/avr/include/avr/wdt.h **** }
 447:/usr/lib/avr/include/avr/wdt.h **** 
 448:/usr/lib/avr/include/avr/wdt.h **** #else
 449:/usr/lib/avr/include/avr/wdt.h **** 
 450:/usr/lib/avr/include/avr/wdt.h **** static __inline__
 451:/usr/lib/avr/include/avr/wdt.h **** __attribute__ ((__always_inline__))
 452:/usr/lib/avr/include/avr/wdt.h **** void wdt_enable (const uint8_t value)
 453:/usr/lib/avr/include/avr/wdt.h **** {
 454:/usr/lib/avr/include/avr/wdt.h **** 	if (_SFR_IO_REG_P (_WD_CONTROL_REG))
 455:/usr/lib/avr/include/avr/wdt.h **** 	{
 456:/usr/lib/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 457:/usr/lib/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__" "\n\t"
 458:/usr/lib/avr/include/avr/wdt.h **** 				"cli" "\n\t"
 459:/usr/lib/avr/include/avr/wdt.h **** 				"wdr" "\n\t"
 460:/usr/lib/avr/include/avr/wdt.h **** 				"out %0, %1" "\n\t"
 461:/usr/lib/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__" "\n\t"
 462:/usr/lib/avr/include/avr/wdt.h **** 				"out %0, %2" "\n \t"
 463:/usr/lib/avr/include/avr/wdt.h **** 				: /* no outputs */
 464:/usr/lib/avr/include/avr/wdt.h **** 				: "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)),
 465:/usr/lib/avr/include/avr/wdt.h **** 				"r" ((uint8_t)(_BV(_WD_CHANGE_BIT) | _BV(WDE))),
 466:/usr/lib/avr/include/avr/wdt.h **** 				"r" ((uint8_t) ((value & 0x08 ? _WD_PS3_MASK : 0x00) |
 467:/usr/lib/avr/include/avr/wdt.h **** 						_BV(WDE) | (value & 0x07)) )
 468:/usr/lib/avr/include/avr/wdt.h **** 				: "r0"
 469:/usr/lib/avr/include/avr/wdt.h **** 		);
 470:/usr/lib/avr/include/avr/wdt.h **** 	}
 471:/usr/lib/avr/include/avr/wdt.h **** 	else
 472:/usr/lib/avr/include/avr/wdt.h **** 	{
 473:/usr/lib/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 474:/usr/lib/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__" "\n\t"
 475:/usr/lib/avr/include/avr/wdt.h **** 				"cli" "\n\t"
 476:/usr/lib/avr/include/avr/wdt.h **** 				"wdr" "\n\t"
 477:/usr/lib/avr/include/avr/wdt.h **** 				"sts %0, %1" "\n\t"
 478:/usr/lib/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__" "\n\t"
 479:/usr/lib/avr/include/avr/wdt.h **** 				"sts %0, %2" "\n \t"
 480:/usr/lib/avr/include/avr/wdt.h **** 				: /* no outputs */
 481:/usr/lib/avr/include/avr/wdt.h **** 				: "n" (_SFR_MEM_ADDR(_WD_CONTROL_REG)),
 482:/usr/lib/avr/include/avr/wdt.h **** 				"r" ((uint8_t)(_BV(_WD_CHANGE_BIT) | _BV(WDE))),
 483:/usr/lib/avr/include/avr/wdt.h **** 				"r" ((uint8_t) ((value & 0x08 ? _WD_PS3_MASK : 0x00) |
 484:/usr/lib/avr/include/avr/wdt.h **** 						_BV(WDE) | (value & 0x07)) )
 485:/usr/lib/avr/include/avr/wdt.h **** 				: "r0"
 486:/usr/lib/avr/include/avr/wdt.h **** 		);
 487:/usr/lib/avr/include/avr/wdt.h **** 	}
 488:/usr/lib/avr/include/avr/wdt.h **** }
 489:/usr/lib/avr/include/avr/wdt.h **** 
 490:/usr/lib/avr/include/avr/wdt.h **** static __inline__
 491:/usr/lib/avr/include/avr/wdt.h **** __attribute__ ((__always_inline__))
 492:/usr/lib/avr/include/avr/wdt.h **** void wdt_disable (void)
 493:/usr/lib/avr/include/avr/wdt.h **** {
 494:/usr/lib/avr/include/avr/wdt.h **** 	if (_SFR_IO_REG_P (_WD_CONTROL_REG))
 495:/usr/lib/avr/include/avr/wdt.h **** 	{
 496:/usr/lib/avr/include/avr/wdt.h ****         uint8_t register temp_reg;
 497:/usr/lib/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 498:/usr/lib/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__"    "\n\t"
 499:/usr/lib/avr/include/avr/wdt.h **** 				"cli"                        "\n\t"
 500:/usr/lib/avr/include/avr/wdt.h **** 				"wdr"                        "\n\t"
 501:/usr/lib/avr/include/avr/wdt.h **** 				"in  %[TEMPREG],%[WDTREG]"   "\n\t"
 502:/usr/lib/avr/include/avr/wdt.h **** 				"ori %[TEMPREG],%[WDCE_WDE]" "\n\t"
 503:/usr/lib/avr/include/avr/wdt.h **** 				"out %[WDTREG],%[TEMPREG]"   "\n\t"
 504:/usr/lib/avr/include/avr/wdt.h **** 				"out %[WDTREG],__zero_reg__" "\n\t"
 505:/usr/lib/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__"   "\n\t"
 506:/usr/lib/avr/include/avr/wdt.h **** 				: [TEMPREG] "=d" (temp_reg)
 507:/usr/lib/avr/include/avr/wdt.h **** 				: [WDTREG]  "I"  (_SFR_IO_ADDR(_WD_CONTROL_REG)),
 508:/usr/lib/avr/include/avr/wdt.h **** 				[WDCE_WDE]  "n"  ((uint8_t)(_BV(_WD_CHANGE_BIT) | _BV(WDE)))
 509:/usr/lib/avr/include/avr/wdt.h **** 				: "r0"
 510:/usr/lib/avr/include/avr/wdt.h **** 		);
 4593               		.loc 11 510 0
 4594               	/* #APP */
 4595               	 ;  510 "/usr/lib/avr/include/avr/wdt.h" 1
 4596 0000 0FB6      		in __tmp_reg__,__SREG__
 4597 0002 F894      		cli
 4598 0004 A895      		wdr
 4599 0006 81B5      		in  r24,33
 4600 0008 8861      		ori r24,24
 4601 000a 81BD      		out 33,r24
 4602 000c 11BC      		out 33,__zero_reg__
 4603 000e 0FBE      		out __SREG__,__tmp_reg__
 4604               		
 4605               	 ;  0 "" 2
 4606               	/* #NOAPP */
 4607               	.LBE199:
 4608               	.LBE198:
  21:Atmega32Hardware.h ****       avr_uart_init();
 4609               		.loc 7 21 0
 4610 0010 0E94 0000 		call avr_time_init
 4611               	.LVL339:
  22:Atmega32Hardware.h ****       sei();
 4612               		.loc 7 22 0
 4613 0014 0E94 0000 		call avr_uart_init
 4614               	.LVL340:
  23:Atmega32Hardware.h ****     }
 4615               		.loc 7 23 0
 4616               	/* #APP */
 4617               	 ;  23 "Atmega32Hardware.h" 1
 4618 0018 7894      		sei
 4619               	 ;  0 "" 2
 4620               	/* #NOAPP */
 4621               	.LBE197:
 4622               	.LBE196:
 139:./ros_lib/ros/node_handle.h ****     bytes_ = 0;
 4623               		.loc 6 139 0
 4624 001a 1092 0000 		sts nh+1143+1,__zero_reg__
 4625 001e 1092 0000 		sts nh+1143,__zero_reg__
 140:./ros_lib/ros/node_handle.h ****     index_ = 0;
 4626               		.loc 6 140 0
 4627 0022 1092 0000 		sts nh+1145+1,__zero_reg__
 4628 0026 1092 0000 		sts nh+1145,__zero_reg__
 141:./ros_lib/ros/node_handle.h ****     topic_ = 0;
 4629               		.loc 6 141 0
 4630 002a 1092 0000 		sts nh+1149+1,__zero_reg__
 4631 002e 1092 0000 		sts nh+1149,__zero_reg__
 142:./ros_lib/ros/node_handle.h ****   };
 4632               		.loc 6 142 0
 4633 0032 1092 0000 		sts nh+1147+1,__zero_reg__
 4634 0036 1092 0000 		sts nh+1147,__zero_reg__
 4635               	.LVL341:
 4636 003a E0E0      		ldi r30,lo8(nh+1043)
 4637 003c F0E0      		ldi r31,hi8(nh+1043)
 4638               	.LBE195:
 4639               	.LBE194:
 4640               	.LBB200:
 4641               	.LBB201:
 399:./ros_lib/ros/node_handle.h ****     {
 4642               		.loc 6 399 0
 4643 003e 80E0      		ldi r24,0
 4644 0040 90E0      		ldi r25,0
 4645               	.LVL342:
 4646               	.L127:
 401:./ros_lib/ros/node_handle.h ****       {
 4647               		.loc 6 401 0
 4648 0042 2191      		ld r18,Z+
 4649 0044 3191      		ld r19,Z+
 4650 0046 232B      		or r18,r19
 4651 0048 01F4      		brne .L124
 403:./ros_lib/ros/node_handle.h ****         p.id_ = i + 100 + MAX_SUBSCRIBERS;
 4652               		.loc 6 403 0
 4653 004a FC01      		movw r30,r24
 4654 004c EE0F      		lsl r30
 4655 004e FF1F      		rol r31
 4656 0050 E050      		subi r30,lo8(-(nh+1043))
 4657 0052 F040      		sbci r31,hi8(-(nh+1043))
 4658 0054 20E0      		ldi r18,lo8(chatter)
 4659 0056 30E0      		ldi r19,hi8(chatter)
 4660 0058 3183      		std Z+1,r19
 4661 005a 2083      		st Z,r18
 404:./ros_lib/ros/node_handle.h ****         p.nh_ = this;
 4662               		.loc 6 404 0
 4663 005c 8358      		subi r24,-125
 4664 005e 9F4F      		sbci r25,-1
 4665               	.LVL343:
 4666 0060 9093 0000 		sts chatter+4+1,r25
 4667 0064 8093 0000 		sts chatter+4,r24
 405:./ros_lib/ros/node_handle.h ****         return true;
 4668               		.loc 6 405 0
 4669 0068 80E0      		ldi r24,lo8(nh)
 4670 006a 90E0      		ldi r25,hi8(nh)
 4671               	.LVL344:
 4672 006c 9093 0000 		sts chatter+6+1,r25
 4673 0070 8093 0000 		sts chatter+6,r24
 4674               	.LVL345:
 4675               	.L126:
 399:./ros_lib/ros/node_handle.h ****     {
 4676               		.loc 6 399 0
 4677 0074 C12C      		mov r12,__zero_reg__
 4678 0076 D12C      		mov r13,__zero_reg__
 4679 0078 7601      		movw r14,r12
 4680               	.LBE201:
 4681               	.LBE200:
  23:avr_chatter.cpp ****   uint32_t lasttime = 0UL;
  24:avr_chatter.cpp **** 
  25:avr_chatter.cpp ****   // Initialize ROS
  26:avr_chatter.cpp ****   nh.initNode();
  27:avr_chatter.cpp ****   nh.advertise(chatter);
  28:avr_chatter.cpp **** 
  29:avr_chatter.cpp ****   while(1)
  30:avr_chatter.cpp ****   {
  31:avr_chatter.cpp ****     // Send the message every second
  32:avr_chatter.cpp ****     if(avr_time_now() - lasttime > 1000)
  33:avr_chatter.cpp ****     {
  34:avr_chatter.cpp ****       str_msg.data = hello;
 4682               		.loc 8 34 0
 4683 007a C0E0      		ldi r28,lo8(hello)
 4684 007c D0E0      		ldi r29,hi8(hello)
 4685 007e 00C0      		rjmp .L125
 4686               	.LVL346:
 4687               	.L124:
 4688               	.LBB203:
 4689               	.LBB202:
 399:./ros_lib/ros/node_handle.h ****     {
 4690               		.loc 6 399 0
 4691 0080 0196      		adiw r24,1
 4692               	.LVL347:
 4693 0082 8931      		cpi r24,25
 4694 0084 9105      		cpc r25,__zero_reg__
 4695 0086 01F4      		brne .L127
 4696 0088 00C0      		rjmp .L126
 4697               	.LVL348:
 4698               	.L128:
 4699               	.LBE202:
 4700               	.LBE203:
  35:avr_chatter.cpp ****       chatter.publish(&str_msg);
  36:avr_chatter.cpp ****       lasttime = avr_time_now();
  37:avr_chatter.cpp ****     }
  38:avr_chatter.cpp ****     nh.spinOnce();
 4701               		.loc 8 38 0
 4702 008a 80E0      		ldi r24,lo8(nh)
 4703 008c 90E0      		ldi r25,hi8(nh)
 4704 008e 0E94 0000 		call _ZN3ros11NodeHandle_I17Atmega32AHardwareLi25ELi25ELi512ELi512EE8spinOnceEv
 4705               	.LVL349:
 4706               	.L125:
  32:avr_chatter.cpp ****     {
 4707               		.loc 8 32 0
 4708 0092 0E94 0000 		call avr_time_now
 4709               	.LVL350:
 4710 0096 DC01      		movw r26,r24
 4711 0098 CB01      		movw r24,r22
 4712 009a 8C19      		sub r24,r12
 4713 009c 9D09      		sbc r25,r13
 4714 009e AE09      		sbc r26,r14
 4715 00a0 BF09      		sbc r27,r15
 4716 00a2 893E      		cpi r24,-23
 4717 00a4 9340      		sbci r25,3
 4718 00a6 A105      		cpc r26,__zero_reg__
 4719 00a8 B105      		cpc r27,__zero_reg__
 4720 00aa 00F0      		brlo .L128
  34:avr_chatter.cpp ****       chatter.publish(&str_msg);
 4721               		.loc 8 34 0
 4722 00ac D093 0000 		sts str_msg+2+1,r29
 4723 00b0 C093 0000 		sts str_msg+2,r28
 4724               	.LVL351:
 4725               	.LBB204:
 4726               	.LBB205:
 4727               		.file 12 "./ros_lib/ros/publisher.h"
   1:./ros_lib/ros/publisher.h **** /*
   2:./ros_lib/ros/publisher.h ****  * Software License Agreement (BSD License)
   3:./ros_lib/ros/publisher.h ****  *
   4:./ros_lib/ros/publisher.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./ros_lib/ros/publisher.h ****  * All rights reserved.
   6:./ros_lib/ros/publisher.h ****  *
   7:./ros_lib/ros/publisher.h ****  * Redistribution and use in source and binary forms, with or without
   8:./ros_lib/ros/publisher.h ****  * modification, are permitted provided that the following conditions
   9:./ros_lib/ros/publisher.h ****  * are met:
  10:./ros_lib/ros/publisher.h ****  *
  11:./ros_lib/ros/publisher.h ****  *  * Redistributions of source code must retain the above copyright
  12:./ros_lib/ros/publisher.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./ros_lib/ros/publisher.h ****  *  * Redistributions in binary form must reproduce the above
  14:./ros_lib/ros/publisher.h ****  *    copyright notice, this list of conditions and the following
  15:./ros_lib/ros/publisher.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./ros_lib/ros/publisher.h ****  *    with the distribution.
  17:./ros_lib/ros/publisher.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./ros_lib/ros/publisher.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./ros_lib/ros/publisher.h ****  *    from this software without specific prior written permission.
  20:./ros_lib/ros/publisher.h ****  *
  21:./ros_lib/ros/publisher.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./ros_lib/ros/publisher.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./ros_lib/ros/publisher.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./ros_lib/ros/publisher.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./ros_lib/ros/publisher.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./ros_lib/ros/publisher.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./ros_lib/ros/publisher.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./ros_lib/ros/publisher.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./ros_lib/ros/publisher.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./ros_lib/ros/publisher.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./ros_lib/ros/publisher.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./ros_lib/ros/publisher.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./ros_lib/ros/publisher.h ****  */
  34:./ros_lib/ros/publisher.h **** 
  35:./ros_lib/ros/publisher.h **** #ifndef _ROS_PUBLISHER_H_
  36:./ros_lib/ros/publisher.h **** #define _ROS_PUBLISHER_H_
  37:./ros_lib/ros/publisher.h **** 
  38:./ros_lib/ros/publisher.h **** #include "rosserial_msgs/TopicInfo.h"
  39:./ros_lib/ros/publisher.h **** #include "ros/node_handle.h"
  40:./ros_lib/ros/publisher.h **** 
  41:./ros_lib/ros/publisher.h **** namespace ros
  42:./ros_lib/ros/publisher.h **** {
  43:./ros_lib/ros/publisher.h **** 
  44:./ros_lib/ros/publisher.h **** /* Generic Publisher */
  45:./ros_lib/ros/publisher.h **** class Publisher
  46:./ros_lib/ros/publisher.h **** {
  47:./ros_lib/ros/publisher.h **** public:
  48:./ros_lib/ros/publisher.h ****   Publisher(const char * topic_name, Msg * msg, int endpoint = rosserial_msgs::TopicInfo::ID_PUBLIS
  49:./ros_lib/ros/publisher.h ****     topic_(topic_name),
  50:./ros_lib/ros/publisher.h ****     msg_(msg),
  51:./ros_lib/ros/publisher.h ****     endpoint_(endpoint) {};
  52:./ros_lib/ros/publisher.h **** 
  53:./ros_lib/ros/publisher.h ****   int publish(const Msg * msg)
  54:./ros_lib/ros/publisher.h ****   {
  55:./ros_lib/ros/publisher.h ****     return nh_->publish(id_, msg);
 4728               		.loc 12 55 0
 4729 00b4 8091 0000 		lds r24,chatter+6
 4730 00b8 9091 0000 		lds r25,chatter+6+1
 4731 00bc 6091 0000 		lds r22,chatter+4
 4732 00c0 7091 0000 		lds r23,chatter+4+1
 4733 00c4 DC01      		movw r26,r24
 4734 00c6 ED91      		ld r30,X+
 4735 00c8 FC91      		ld r31,X
 4736 00ca 0190      		ld __tmp_reg__,Z+
 4737 00cc F081      		ld r31,Z
 4738 00ce E02D      		mov r30,__tmp_reg__
 4739 00d0 40E0      		ldi r20,lo8(str_msg)
 4740 00d2 50E0      		ldi r21,hi8(str_msg)
 4741 00d4 0995      		icall
 4742               	.LVL352:
 4743               	.LBE205:
 4744               	.LBE204:
  36:avr_chatter.cpp ****     }
 4745               		.loc 8 36 0
 4746 00d6 0E94 0000 		call avr_time_now
 4747               	.LVL353:
 4748 00da 6B01      		movw r12,r22
 4749 00dc 7C01      		movw r14,r24
 4750               	.LVL354:
 4751 00de 00C0      		rjmp .L128
 4752               		.cfi_endproc
 4753               	.LFE150:
 4755               		.section	.rodata.str1.1
 4756               	.LC11:
 4757 0129 6368 6174 		.string	"chatter"
 4757      7465 7200 
 4758               		.section	.text.startup
 4760               	_GLOBAL__sub_I___cxa_pure_virtual:
 4761               	.LFB165:
  39:avr_chatter.cpp ****   }
  40:avr_chatter.cpp **** 
  41:avr_chatter.cpp ****   return 0;
  42:avr_chatter.cpp **** }...
 4762               		.loc 8 42 0
 4763               		.cfi_startproc
 4764               	/* prologue: function */
 4765               	/* frame size = 0 */
 4766               	/* stack size = 0 */
 4767               	.L__stack_usage = 0
 4768               	.LVL355:
 4769               	.LBB225:
 4770               	.LBB226:
 4771               	.LBB227:
 4772               	.LBB228:
 106:./ros_lib/ros/node_handle.h **** {
 4773               		.loc 6 106 0
 4774 00e0 E0E0      		ldi r30,lo8(nh)
 4775 00e2 F0E0      		ldi r31,hi8(nh)
 4776 00e4 80E0      		ldi r24,lo8(_ZTVN3ros11NodeHandle_I17Atmega32AHardwareLi25ELi25ELi512ELi512EEE+4)
 4777 00e6 90E0      		ldi r25,hi8(_ZTVN3ros11NodeHandle_I17Atmega32AHardwareLi25ELi25ELi512ELi512EEE+4)
 4778 00e8 9183      		std Z+1,r25
 4779 00ea 8083      		st Z,r24
 4780 00ec 1382      		std Z+3,__zero_reg__
 4781 00ee 1482      		std Z+4,__zero_reg__
 4782 00f0 1582      		std Z+5,__zero_reg__
 4783 00f2 1682      		std Z+6,__zero_reg__
 4784 00f4 1782      		std Z+7,__zero_reg__
 4785 00f6 1086      		std Z+8,__zero_reg__
 4786 00f8 1186      		std Z+9,__zero_reg__
 4787 00fa 1286      		std Z+10,__zero_reg__
 4788 00fc 1386      		std Z+11,__zero_reg__
 4789 00fe 1486      		std Z+12,__zero_reg__
 4790 0100 1586      		std Z+13,__zero_reg__
 4791 0102 1686      		std Z+14,__zero_reg__
 4792 0104 1786      		std Z+15,__zero_reg__
 4793 0106 108A      		std Z+16,__zero_reg__
 4794 0108 118A      		std Z+17,__zero_reg__
 4795 010a 128A      		std Z+18,__zero_reg__
 4796 010c 80E0      		ldi r24,0
 4797 010e 92E0      		ldi r25,lo8(2)
 4798 0110 E0E0      		ldi r30,lo8(nh+19)
 4799 0112 F0E0      		ldi r31,hi8(nh+19)
 4800 0114 DF01      		movw r26,r30
 4801 0116 9C01      		movw r18,r24
 4802               		0:
 4803 0118 1D92      		st X+,__zero_reg__
 4804 011a 2150      		subi r18,1
 4805 011c 3040      		sbci r19,0
 4806 011e 01F4      		brne 0b
 4807 0120 E0E0      		ldi r30,lo8(nh+531)
 4808 0122 F0E0      		ldi r31,hi8(nh+531)
 4809 0124 DF01      		movw r26,r30
 4810 0126 9C01      		movw r18,r24
 4811               		0:
 4812 0128 1D92      		st X+,__zero_reg__
 4813 012a 2150      		subi r18,1
 4814 012c 3040      		sbci r19,0
 4815 012e 01F4      		brne 0b
 4816 0130 82E3      		ldi r24,lo8(50)
 4817 0132 E0E0      		ldi r30,lo8(nh+1043)
 4818 0134 F0E0      		ldi r31,hi8(nh+1043)
 4819 0136 DF01      		movw r26,r30
 4820 0138 282F      		mov r18,r24
 4821               		0:
 4822 013a 1D92      		st X+,__zero_reg__
 4823 013c 2A95      		dec r18
 4824 013e 01F4      		brne 0b
 4825 0140 E0E0      		ldi r30,lo8(nh+1093)
 4826 0142 F0E0      		ldi r31,hi8(nh+1093)
 4827 0144 DF01      		movw r26,r30
 4828               		0:
 4829 0146 1D92      		st X+,__zero_reg__
 4830 0148 8A95      		dec r24
 4831 014a 01F4      		brne 0b
 4832 014c 1092 0000 		sts nh+1143+1,__zero_reg__
 4833 0150 1092 0000 		sts nh+1143,__zero_reg__
 4834 0154 1092 0000 		sts nh+1145+1,__zero_reg__
 4835 0158 1092 0000 		sts nh+1145,__zero_reg__
 4836 015c 1092 0000 		sts nh+1147+1,__zero_reg__
 4837 0160 1092 0000 		sts nh+1147,__zero_reg__
 4838 0164 1092 0000 		sts nh+1149+1,__zero_reg__
 4839 0168 1092 0000 		sts nh+1149,__zero_reg__
 4840 016c 1092 0000 		sts nh+1151+1,__zero_reg__
 4841 0170 1092 0000 		sts nh+1151,__zero_reg__
 4842 0174 1092 0000 		sts nh+1153,__zero_reg__
 4843 0178 1092 0000 		sts nh+1154,__zero_reg__
 4844 017c 1092 0000 		sts nh+1154+1,__zero_reg__
 4845 0180 1092 0000 		sts nh+1154+2,__zero_reg__
 4846 0184 1092 0000 		sts nh+1154+3,__zero_reg__
 4847 0188 1092 0000 		sts nh+1158,__zero_reg__
 4848 018c 1092 0000 		sts nh+1158+1,__zero_reg__
 4849 0190 1092 0000 		sts nh+1158+2,__zero_reg__
 4850 0194 1092 0000 		sts nh+1158+3,__zero_reg__
 4851 0198 1092 0000 		sts nh+1162,__zero_reg__
 4852 019c 1092 0000 		sts nh+1162+1,__zero_reg__
 4853 01a0 1092 0000 		sts nh+1162+2,__zero_reg__
 4854 01a4 1092 0000 		sts nh+1162+3,__zero_reg__
 4855 01a8 1092 0000 		sts nh+1166,__zero_reg__
 4856               	.LVL356:
 4857               	.LBB229:
 4858               	.LBB230:
  74:./ros_lib/rosserial_msgs/RequestParam.h ****     {
 4859               		.loc 4 74 0
 4860 01ac 80E0      		ldi r24,lo8(_ZTVN14rosserial_msgs20RequestParamResponseE+4)
 4861 01ae 90E0      		ldi r25,hi8(_ZTVN14rosserial_msgs20RequestParamResponseE+4)
 4862 01b0 9093 0000 		sts nh+1167+1,r25
 4863 01b4 8093 0000 		sts nh+1167,r24
 4864 01b8 1092 0000 		sts nh+1169,__zero_reg__
 4865 01bc 1092 0000 		sts nh+1169+1,__zero_reg__
 4866 01c0 1092 0000 		sts nh+1169+2,__zero_reg__
 4867 01c4 1092 0000 		sts nh+1169+3,__zero_reg__
 4868 01c8 1092 0000 		sts nh+1173,__zero_reg__
 4869 01cc 1092 0000 		sts nh+1173+1,__zero_reg__
 4870 01d0 1092 0000 		sts nh+1173+2,__zero_reg__
 4871 01d4 1092 0000 		sts nh+1173+3,__zero_reg__
 4872 01d8 1092 0000 		sts nh+1177+1,__zero_reg__
 4873 01dc 1092 0000 		sts nh+1177,__zero_reg__
 4874 01e0 1092 0000 		sts nh+1179,__zero_reg__
 4875 01e4 1092 0000 		sts nh+1179+1,__zero_reg__
 4876 01e8 1092 0000 		sts nh+1179+2,__zero_reg__
 4877 01ec 1092 0000 		sts nh+1179+3,__zero_reg__
 4878 01f0 1092 0000 		sts nh+1183,__zero_reg__
 4879 01f4 1092 0000 		sts nh+1183+1,__zero_reg__
 4880 01f8 1092 0000 		sts nh+1183+2,__zero_reg__
 4881 01fc 1092 0000 		sts nh+1183+3,__zero_reg__
 4882 0200 1092 0000 		sts nh+1187+1,__zero_reg__
 4883 0204 1092 0000 		sts nh+1187,__zero_reg__
 4884 0208 1092 0000 		sts nh+1189,__zero_reg__
 4885 020c 1092 0000 		sts nh+1189+1,__zero_reg__
 4886 0210 1092 0000 		sts nh+1189+2,__zero_reg__
 4887 0214 1092 0000 		sts nh+1189+3,__zero_reg__
 4888 0218 1092 0000 		sts nh+1193+1,__zero_reg__
 4889 021c 1092 0000 		sts nh+1193,__zero_reg__
 4890 0220 1092 0000 		sts nh+1195+1,__zero_reg__
 4891 0224 1092 0000 		sts nh+1195,__zero_reg__
 4892               	.LVL357:
 4893               	.LBE230:
 4894               	.LBE229:
 4895               	.LBE228:
 4896               	.LBE227:
 4897               	.LBB231:
 4898               	.LBB232:
  19:./ros_lib/std_msgs/String.h ****     {
 4899               		.loc 5 19 0
 4900 0228 A0E0      		ldi r26,lo8(str_msg)
 4901 022a B0E0      		ldi r27,hi8(str_msg)
 4902 022c 80E0      		ldi r24,lo8(_ZTVN8std_msgs6StringE+4)
 4903 022e 90E0      		ldi r25,hi8(_ZTVN8std_msgs6StringE+4)
 4904 0230 1196      		adiw r26,1
 4905 0232 9C93      		st X,r25
 4906 0234 8E93      		st -X,r24
 4907 0236 80E0      		ldi r24,lo8(.LC10)
 4908 0238 90E0      		ldi r25,hi8(.LC10)
 4909 023a 1396      		adiw r26,2+1
 4910 023c 9C93      		st X,r25
 4911 023e 8E93      		st -X,r24
 4912 0240 1297      		sbiw r26,2
 4913               	.LVL358:
 4914               	.LBE232:
 4915               	.LBE231:
 4916               	.LBB233:
 4917               	.LBB234:
  51:./ros_lib/ros/publisher.h **** 
 4918               		.loc 12 51 0
 4919 0242 E0E0      		ldi r30,lo8(chatter)
 4920 0244 F0E0      		ldi r31,hi8(chatter)
 4921 0246 80E0      		ldi r24,lo8(.LC11)
 4922 0248 90E0      		ldi r25,hi8(.LC11)
 4923 024a 9183      		std Z+1,r25
 4924 024c 8083      		st Z,r24
 4925 024e B383      		std Z+3,r27
 4926 0250 A283      		std Z+2,r26
 4927 0252 1186      		std Z+9,__zero_reg__
 4928 0254 1086      		std Z+8,__zero_reg__
 4929               	.LVL359:
 4930 0256 0895      		ret
 4931               	.LBE234:
 4932               	.LBE233:
 4933               	.LBE226:
 4934               	.LBE225:
 4935               		.cfi_endproc
 4936               	.LFE165:
 4938               		.global __do_global_ctors
 4939               		.section .ctors,"a",@progbits
 4940               		.p2align	1
 4941 0000 0000      		.word	gs(_GLOBAL__sub_I___cxa_pure_virtual)
 4942               		.weak	_ZTVN8std_msgs4TimeE
 4943               		.section	.rodata._ZTVN8std_msgs4TimeE,"aG",@progbits,_ZTVN8std_msgs4TimeE,comdat
 4946               	_ZTVN8std_msgs4TimeE:
 4947 0000 0000      		.word	0
 4948 0002 0000      		.word	0
 4949 0004 0000      		.word	gs(_ZNK8std_msgs4Time9serializeEPh)
 4950 0006 0000      		.word	gs(_ZN8std_msgs4Time11deserializeEPh)
 4951 0008 0000      		.word	gs(_ZN8std_msgs4Time7getTypeEv)
 4952 000a 0000      		.word	gs(_ZN8std_msgs4Time6getMD5Ev)
 4953               		.weak	_ZTVN14rosserial_msgs9TopicInfoE
 4954               		.section	.rodata._ZTVN14rosserial_msgs9TopicInfoE,"aG",@progbits,_ZTVN14rosserial_msgs9TopicInfoE,
 4957               	_ZTVN14rosserial_msgs9TopicInfoE:
 4958 0000 0000      		.word	0
 4959 0002 0000      		.word	0
 4960 0004 0000      		.word	gs(_ZNK14rosserial_msgs9TopicInfo9serializeEPh)
 4961 0006 0000      		.word	gs(_ZN14rosserial_msgs9TopicInfo11deserializeEPh)
 4962 0008 0000      		.word	gs(_ZN14rosserial_msgs9TopicInfo7getTypeEv)
 4963 000a 0000      		.word	gs(_ZN14rosserial_msgs9TopicInfo6getMD5Ev)
 4964               		.weak	_ZTVN14rosserial_msgs3LogE
 4965               		.section	.rodata._ZTVN14rosserial_msgs3LogE,"aG",@progbits,_ZTVN14rosserial_msgs3LogE,comdat
 4968               	_ZTVN14rosserial_msgs3LogE:
 4969 0000 0000      		.word	0
 4970 0002 0000      		.word	0
 4971 0004 0000      		.word	gs(_ZNK14rosserial_msgs3Log9serializeEPh)
 4972 0006 0000      		.word	gs(_ZN14rosserial_msgs3Log11deserializeEPh)
 4973 0008 0000      		.word	gs(_ZN14rosserial_msgs3Log7getTypeEv)
 4974 000a 0000      		.word	gs(_ZN14rosserial_msgs3Log6getMD5Ev)
 4975               		.weak	_ZTVN14rosserial_msgs20RequestParamResponseE
 4976               		.section	.rodata._ZTVN14rosserial_msgs20RequestParamResponseE,"aG",@progbits,_ZTVN14rosserial_msgs
 4979               	_ZTVN14rosserial_msgs20RequestParamResponseE:
 4980 0000 0000      		.word	0
 4981 0002 0000      		.word	0
 4982 0004 0000      		.word	gs(_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh)
 4983 0006 0000      		.word	gs(_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh)
 4984 0008 0000      		.word	gs(_ZN14rosserial_msgs20RequestParamResponse7getTypeEv)
 4985 000a 0000      		.word	gs(_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev)
 4986               		.weak	_ZTVN8std_msgs6StringE
 4987               		.section	.rodata._ZTVN8std_msgs6StringE,"aG",@progbits,_ZTVN8std_msgs6StringE,comdat
 4990               	_ZTVN8std_msgs6StringE:
 4991 0000 0000      		.word	0
 4992 0002 0000      		.word	0
 4993 0004 0000      		.word	gs(_ZNK8std_msgs6String9serializeEPh)
 4994 0006 0000      		.word	gs(_ZN8std_msgs6String11deserializeEPh)
 4995 0008 0000      		.word	gs(_ZN8std_msgs6String7getTypeEv)
 4996 000a 0000      		.word	gs(_ZN8std_msgs6String6getMD5Ev)
 4997               		.weak	_ZTVN3ros11NodeHandle_I17Atmega32AHardwareLi25ELi25ELi512ELi512EEE
 4998               		.section	.rodata._ZTVN3ros11NodeHandle_I17Atmega32AHardwareLi25ELi25ELi512ELi512EEE,"aG",@progbits
 5001               	_ZTVN3ros11NodeHandle_I17Atmega32AHardwareLi25ELi25ELi512ELi512EEE:
 5002 0000 0000      		.word	0
 5003 0002 0000      		.word	0
 5004 0004 0000      		.word	gs(_ZN3ros11NodeHandle_I17Atmega32AHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE)
 5005 0006 0000      		.word	gs(_ZN3ros11NodeHandle_I17Atmega32AHardwareLi25ELi25ELi512ELi512EE8spinOnceEv)
 5006 0008 0000      		.word	gs(_ZN3ros11NodeHandle_I17Atmega32AHardwareLi25ELi25ELi512ELi512EE9connectedEv)
 5007               	.global	hello
 5008               		.data
 5011               	hello:
 5012 0000 6865 6C6C 		.string	"hello world!"
 5012      6F20 776F 
 5012      726C 6421 
 5012      00
 5013               	.global	chatter
 5014               		.section .bss
 5017               	chatter:
 5018 0000 0000 0000 		.zero	10
 5018      0000 0000 
 5018      0000 
 5019               	.global	str_msg
 5022               	str_msg:
 5023 000a 0000 0000 		.zero	4
 5024               	.global	nh
 5027               	nh:
 5028 000e 0000 0000 		.zero	1197
 5028      0000 0000 
 5028      0000 0000 
 5028      0000 0000 
 5028      0000 0000 
 5029               		.section	.rodata
 5032               	_ZN14rosserial_msgsL12REQUESTPARAME:
 5033 0000 726F 7373 		.string	"rosserial_msgs/RequestParam"
 5033      6572 6961 
 5033      6C5F 6D73 
 5033      6773 2F52 
 5033      6571 7565 
 5034               		.text
 5035               	.Letext0:
 5036               		.file 13 "/usr/lib/avr/include/stdint.h"
 5037               		.file 14 "/usr/lib/gcc/avr/5.4.0/include/stddef.h"
 5038               		.file 15 "./ros_lib/ros/duration.h"
 5039               		.file 16 "ros.h"
 5040               		.file 17 "avr_uart.h"
 5041               		.file 18 "/usr/lib/avr/include/stdlib.h"
 5042               		.file 19 "avr_time.h"
DEFINED SYMBOLS
                            *ABS*:00000000 avr_chatter.cpp
     /tmp/cc2KInGo.s:2      *ABS*:0000003e __SP_H__
     /tmp/cc2KInGo.s:3      *ABS*:0000003d __SP_L__
     /tmp/cc2KInGo.s:4      *ABS*:0000003f __SREG__
     /tmp/cc2KInGo.s:5      *ABS*:00000000 __tmp_reg__
     /tmp/cc2KInGo.s:6      *ABS*:00000001 __zero_reg__
     /tmp/cc2KInGo.s:13     .text._ZNK8std_msgs4Time9serializeEPh:00000000 _ZNK8std_msgs4Time9serializeEPh
     /tmp/cc2KInGo.s:78     .text._ZN8std_msgs4Time11deserializeEPh:00000000 _ZN8std_msgs4Time11deserializeEPh
     /tmp/cc2KInGo.s:180    .text._ZN8std_msgs4Time7getTypeEv:00000000 _ZN8std_msgs4Time7getTypeEv
     /tmp/cc2KInGo.s:203    .text._ZN8std_msgs4Time6getMD5Ev:00000000 _ZN8std_msgs4Time6getMD5Ev
     /tmp/cc2KInGo.s:226    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:00000000 _ZN14rosserial_msgs9TopicInfo7getTypeEv
     /tmp/cc2KInGo.s:250    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:00000000 _ZN14rosserial_msgs9TopicInfo6getMD5Ev
     /tmp/cc2KInGo.s:273    .text._ZN14rosserial_msgs3Log7getTypeEv:00000000 _ZN14rosserial_msgs3Log7getTypeEv
     /tmp/cc2KInGo.s:297    .text._ZN14rosserial_msgs3Log6getMD5Ev:00000000 _ZN14rosserial_msgs3Log6getMD5Ev
     /tmp/cc2KInGo.s:317    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:00000000 _ZN14rosserial_msgs20RequestParamResponse7getTypeEv
     /tmp/cc2KInGo.s:5032   .rodata:00000000 _ZN14rosserial_msgsL12REQUESTPARAME
     /tmp/cc2KInGo.s:341    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:00000000 _ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
     /tmp/cc2KInGo.s:364    .text._ZN8std_msgs6String7getTypeEv:00000000 _ZN8std_msgs6String7getTypeEv
     /tmp/cc2KInGo.s:388    .text._ZN8std_msgs6String6getMD5Ev:00000000 _ZN8std_msgs6String6getMD5Ev
     /tmp/cc2KInGo.s:408    .text._ZN3ros11NodeHandle_I17Atmega32AHardwareLi25ELi25ELi512ELi512EE9connectedEv:00000000 _ZN3ros11NodeHandle_I17Atmega32AHardwareLi25ELi25ELi512ELi512EE9connectedEv
     /tmp/cc2KInGo.s:436    .text._ZN3ros11NodeHandle_I17Atmega32AHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE:00000000 _ZN3ros11NodeHandle_I17Atmega32AHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE
     /tmp/cc2KInGo.s:4968   .rodata._ZTVN14rosserial_msgs3LogE:00000000 _ZTVN14rosserial_msgs3LogE
     /tmp/cc2KInGo.s:712    .text:00000000 __cxa_pure_virtual
     /tmp/cc2KInGo.s:728    .text._ZN3ros3Msg8varToArrIPhmEEvT_T0_:00000000 _ZN3ros3Msg8varToArrIPhmEEvT_T0_
     /tmp/cc2KInGo.s:799    .text._ZNK8std_msgs6String9serializeEPh:00000000 _ZNK8std_msgs6String9serializeEPh
     /tmp/cc2KInGo.s:889    .text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:00000000 _ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
     /tmp/cc2KInGo.s:1252   .text._ZNK14rosserial_msgs3Log9serializeEPh:00000000 _ZNK14rosserial_msgs3Log9serializeEPh
     /tmp/cc2KInGo.s:1350   .text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:00000000 _ZNK14rosserial_msgs9TopicInfo9serializeEPh
     /tmp/cc2KInGo.s:1577   .text._ZN3ros3Msg8arrToVarImPhEEvRT_T0_:00000000 _ZN3ros3Msg8arrToVarImPhEEvRT_T0_
     /tmp/cc2KInGo.s:1664   .text._ZN14rosserial_msgs3Log11deserializeEPh:00000000 _ZN14rosserial_msgs3Log11deserializeEPh
     /tmp/cc2KInGo.s:1847   .text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:00000000 _ZN14rosserial_msgs9TopicInfo11deserializeEPh
     /tmp/cc2KInGo.s:2223   .text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:00000000 _ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
     /tmp/cc2KInGo.s:2864   .text._ZN8std_msgs6String11deserializeEPh:00000000 _ZN8std_msgs6String11deserializeEPh
     /tmp/cc2KInGo.s:3039   .text._ZN3ros11NodeHandle_I17Atmega32AHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv:00000000 _ZN3ros11NodeHandle_I17Atmega32AHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv
     /tmp/cc2KInGo.s:4946   .rodata._ZTVN8std_msgs4TimeE:00000000 _ZTVN8std_msgs4TimeE
     /tmp/cc2KInGo.s:3155   .text._ZN3ros11NodeHandle_I17Atmega32AHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv:00000000 _ZN3ros11NodeHandle_I17Atmega32AHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv
     /tmp/cc2KInGo.s:4957   .rodata._ZTVN14rosserial_msgs9TopicInfoE:00000000 _ZTVN14rosserial_msgs9TopicInfoE
     /tmp/cc2KInGo.s:3489   .text._ZN3ros11NodeHandle_I17Atmega32AHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh:00000000 _ZN3ros11NodeHandle_I17Atmega32AHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh
     /tmp/cc2KInGo.s:3774   .text._ZN3ros11NodeHandle_I17Atmega32AHardwareLi25ELi25ELi512ELi512EE8spinOnceEv:00000000 _ZN3ros11NodeHandle_I17Atmega32AHardwareLi25ELi25ELi512ELi512EE8spinOnceEv
     /tmp/cc2KInGo.s:4577   .text.startup:00000000 main
     /tmp/cc2KInGo.s:5027   .bss:0000000e nh
     /tmp/cc2KInGo.s:5017   .bss:00000000 chatter
     /tmp/cc2KInGo.s:5011   .data:00000000 hello
     /tmp/cc2KInGo.s:5022   .bss:0000000a str_msg
     /tmp/cc2KInGo.s:4760   .text.startup:000000e0 _GLOBAL__sub_I___cxa_pure_virtual
     /tmp/cc2KInGo.s:5001   .rodata._ZTVN3ros11NodeHandle_I17Atmega32AHardwareLi25ELi25ELi512ELi512EEE:00000000 _ZTVN3ros11NodeHandle_I17Atmega32AHardwareLi25ELi25ELi512ELi512EEE
     /tmp/cc2KInGo.s:4979   .rodata._ZTVN14rosserial_msgs20RequestParamResponseE:00000000 _ZTVN14rosserial_msgs20RequestParamResponseE
     /tmp/cc2KInGo.s:4990   .rodata._ZTVN8std_msgs6StringE:00000000 _ZTVN8std_msgs6StringE

UNDEFINED SYMBOLS
avr_uart_send_byte
memcpy
realloc
avr_time_now
__udivmodsi4
__mulsi3
_ZN3ros16normalizeSecNSecERmS0_
avr_uart_receive_byte
__divmodhi4
avr_time_init
avr_uart_init
__do_global_ctors
__do_copy_data
__do_clear_bss
